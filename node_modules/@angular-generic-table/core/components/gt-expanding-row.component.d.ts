import { EventEmitter, Type } from '@angular/core';
import { GtRow, GtConfigField, GtConfigSetting, GtEvent } from '..';
export declare class GtExpandedRow<R extends GtRow> {
    row: R;
    columnWidth: Object;
    gtSettings: Array<GtConfigSetting>;
    gtFields: Array<GtConfigField<R, any>>;
    gtOptions: any;
    gtInfo: any;
    data: any;
    redrawEvent: EventEmitter<R>;
    gtEvent: EventEmitter<GtEvent>;
    toggleRowEvent: EventEmitter<R>;
    $hide(): void;
    $redraw($event?: any): void;
    $rowClick(row: GtRow, $event: MouseEvent): void;
}
export declare class GtExpandingRowComponent<R extends GtRow, C extends GtExpandedRow<R>> {
    type: Type<C>;
    row: R;
    columnWidth: Object;
    gtSettings: Array<GtConfigSetting>;
    gtFields: Array<GtConfigField<R, any>>;
    gtOptions: any;
    gtInfo: any;
    data: any;
    redrawEvent: EventEmitter<R>;
    toggleRowEvent: EventEmitter<R>;
    gtEvent: any;
    newInstance(instance: C): void;
}
