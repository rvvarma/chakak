{"version":3,"file":"angular-generic-table-core.umd.js.map","sources":["ng://@angular-generic-table/core/components/gt-expanding-row.component.ts",null,"ng://@angular-generic-table/core/pipes/gt-meta.pipe.ts","ng://@angular-generic-table/core/components/generic-table.component.ts","ng://@angular-generic-table/core/components/gt-table-info.component.ts","ng://@angular-generic-table/core/components/gt-pagination.component.ts","ng://@angular-generic-table/core/components/gt-drilldown.component.ts","ng://@angular-generic-table/core/pipes/gt-highlight.pipe.ts","ng://@angular-generic-table/core/pipes/gt-render.pipe.ts","ng://@angular-generic-table/core/pipes/gt-visible.pipe.ts","ng://@angular-generic-table/core/pipes/dash-case.pipe.ts","ng://@angular-generic-table/core/pipes/gt-property.pipe.ts","ng://@angular-generic-table/core/pipes/gt-chunk.pipe.ts","ng://@angular-generic-table/core/pipes/gt-filter.pipe.ts","ng://@angular-generic-table/core/pipes/gt-order-by.pipe.ts","ng://@angular-generic-table/core/pipes/gt-search.pipe.ts","ng://@angular-generic-table/core/directives/component-anchor.directive.ts","ng://@angular-generic-table/core/components/gt-custom-component-factory.ts","ng://@angular-generic-table/core/components/gt-dropdown.component.ts","ng://@angular-generic-table/core/pipes/gt-totals.pipe.ts","ng://@angular-generic-table/core/pipes/gt-totals-position.pipe.ts","ng://@angular-generic-table/core/pipes/gt-row-class.pipe.ts","ng://@angular-generic-table/core/pipes/gt-column-class.pipe.ts","ng://@angular-generic-table/core/directives/gt-column-width.directive.ts","ng://@angular-generic-table/core/components/gt-checkbox/gt-checkbox.component.ts","ng://@angular-generic-table/core/pipes/gt-is-observable.pipe.ts","ng://@angular-generic-table/core/pipes/gt-is-editable.pipe.ts","ng://@angular-generic-table/core/core.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { GtRow, GtConfigField, GtConfigSetting, GtEvent } from '..';\r\n\r\nexport class GtExpandedRow<R extends GtRow> {\r\n\trow: R;\r\n\tcolumnWidth: Object;\r\n\tgtSettings: Array<GtConfigSetting>;\r\n\tgtFields: Array<GtConfigField<R, any>>;\r\n\tgtOptions: any;\r\n\tgtInfo: any;\r\n\tdata: any;\r\n\tredrawEvent = new EventEmitter<R>();\r\n\tgtEvent: EventEmitter<GtEvent>;\r\n\ttoggleRowEvent = new EventEmitter<R>();\r\n\r\n\tpublic $hide(): void {\r\n\t\tthis.toggleRowEvent.emit(this.row);\r\n\t}\r\n\r\n\tpublic $redraw($event?: any): void {\r\n\t\tthis.redrawEvent.emit(this.row);\r\n\t}\r\n\tpublic $rowClick(row: GtRow, $event: MouseEvent) {\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-clicked',\r\n\t\t\tvalue: { row: row, event: $event }\r\n\t\t});\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'gt-expanding-row',\r\n\ttemplate: `\r\n        <div gtComponentAnchor\r\n             [ctor]=\"type\" (instance)=\"newInstance($event)\"></div>`\r\n})\r\nexport class GtExpandingRowComponent<\r\n\tR extends GtRow,\r\n\tC extends GtExpandedRow<R>\r\n> {\r\n\t@Input() type: Type<C>;\r\n\t@Input() row: R;\r\n\t@Input() columnWidth: Object;\r\n\t@Input() gtSettings: Array<GtConfigSetting>;\r\n\t@Input() gtFields: Array<GtConfigField<R, any>>;\r\n\t@Input() gtOptions: any;\r\n\t@Input() gtInfo: any;\r\n\t@Input() data: any;\r\n\r\n\t@Output() redrawEvent = new EventEmitter<R>();\r\n\t@Output() toggleRowEvent = new EventEmitter<R>();\r\n\t@Input() gtEvent: any;\r\n\r\n\tnewInstance(instance: C): void {\r\n\t\tinstance.row = this.row;\r\n\t\tinstance.columnWidth = this.columnWidth;\r\n\t\tinstance.gtSettings = this.gtSettings;\r\n\t\tinstance.gtFields = this.gtFields;\r\n\t\tinstance.gtOptions = this.gtOptions;\r\n\t\tinstance.gtInfo = this.gtInfo;\r\n\t\tinstance.data =\r\n\t\t\ttypeof this.data === 'function' ? this.data(this.row) : this.data;\r\n\t\tinstance.redrawEvent.subscribe(this.redrawEvent);\r\n\t\tinstance.toggleRowEvent.subscribe(this.toggleRowEvent);\r\n\t\tinstance.gtEvent = this.gtEvent;\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtRowMeta } from '../interfaces/gt-row-meta';\r\n\r\n@Pipe({\r\n\tname: 'gtMeta'\r\n})\r\nexport class GtMetaPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tallRows: Array<GtRow>,\r\n\t\trowIndex?: string,\r\n\t\tpage?: number,\r\n\t\trecordLength?: number\r\n\t): Array<GtRow> {\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tif (!allRows[i].$$gtRowId) {\r\n\t\t\t\tallRows[i].$$gtRowId = rowIndex\r\n\t\t\t\t\t? allRows[i][rowIndex]\r\n\t\t\t\t\t: page\r\n\t\t\t\t\t\t? page * recordLength +\r\n\t\t\t\t\t\t  i +\r\n\t\t\t\t\t\t  '_' +\r\n\t\t\t\t\t\t  Math.random()\r\n\t\t\t\t\t\t\t\t.toString(36)\r\n\t\t\t\t\t\t\t\t.substr(2, 16)\r\n\t\t\t\t\t\t: i +\r\n\t\t\t\t\t\t  '_' +\r\n\t\t\t\t\t\t  Math.random()\r\n\t\t\t\t\t\t\t\t.toString(36)\r\n\t\t\t\t\t\t\t\t.substr(2, 16);\r\n\t\t\t}\r\n\t\t\tif (!allRows[i].$$gtInitialRowIndex) {\r\n\t\t\t\tallRows[i].$$gtInitialRowIndex = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allRows;\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tOnChanges,\r\n\tOutput,\r\n\tInput,\r\n\tEventEmitter,\r\n\tType,\r\n\tSimpleChanges,\r\n\tRenderer2,\r\n\tOnDestroy\r\n} from '@angular/core';\r\nimport {\r\n\tGtConfig,\r\n\tGtConfigField,\r\n\tGtConfigSetting,\r\n\tGtTexts,\r\n\tGtInformation,\r\n\tGtExpandedRow,\r\n\tGtRow,\r\n\tGtOptions,\r\n\tGtRowMeta,\r\n\tGtRenderField,\r\n\tGtEvent\r\n} from '..';\r\nimport { GtMetaPipe } from '../pipes/gt-meta.pipe';\r\n\r\n@Component({\r\n\tselector: 'generic-table',\r\n\ttemplate: `<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"gtFields && gtSettings && (gtFields | gtVisible:gtSettings:refreshPipe).length > 0\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-sort-label\" *ngIf=\"gtOptions.stack\">{{gtTexts.sortLabel}}</th>\r\n    <th *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe\"\r\n        ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{column.sortEnabled ? 'sort-'+column.sort:''}} {{column.sortEnabled && column.sortOrder >= 0  ? 'sort-order-'+column.sortOrder:''}} {{ gtFields | gtColumnClass:column }}\"\r\n        (click)=\"column.sortEnabled ? gtSort(column.objectKey,$event):'';\">\r\n      <span *ngIf=\"!(gtFields | gtProperty:column.objectKey:'header')\">{{gtFields | gtProperty:column.objectKey:'name'}}</span>\r\n      <gt-custom-component-factory *ngIf=\"(gtFields | gtProperty:column.objectKey:'header')\"\r\n                                   [type]=\"(gtFields | gtProperty:column.objectKey:'header')?.type\"\r\n                                   [injector]=\"(gtFields | gtProperty:column.objectKey:'header')?.injector\"\r\n                                   [column]=\"gtFields | gtProperty:column.objectKey:'name'\"></gt-custom-component-factory>\r\n      <gt-checkbox *ngIf=\"(gtFields | gtProperty:column.objectKey:'columnComponent')?.type === 'checkbox'\" [checked]=\"(gtOptions.lazyLoad ? lazyAllSelected:selectedRows.length === gtData.length)\" (changed)=\"toggleAllRows()\"></gt-checkbox>\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <ng-template\r\n    [ngIf]=\"gtTotals && (gtOptions.lazyLoad === false ? (gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length).length > 0 : gtData.length > 0)\">\r\n    <thead class=\"gt-totals\">\r\n    <tr *ngFor=\"let total of gtTotals | gtTotalsPosition\">\r\n      <td *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe;let i = index;\"\r\n          ngClass=\"{{column.objectKey +'-totals-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{ gtFields | gtColumnClass:column }}\">\r\n        <span *ngIf=\"i === 0\" class=\"float-left\">{{total.name}}</span><span\r\n        [innerHTML]=\"total.fields[column.objectKey] | gtTotals:(total.update === false || gtOptions.lazyLoad === true) ? gtData:(gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length):column.objectKey:refreshTotals\"></span>\r\n      </td>\r\n    </tr>\r\n    </thead>\r\n    <tfoot class=\"gt-totals\">\r\n    <tr *ngFor=\"let total of gtTotals | gtTotalsPosition:'footer'\">\r\n      <td *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe;let i = index;\"\r\n          ngClass=\"{{column.objectKey +'-totals-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{ gtFields | gtColumnClass:column }}\">\r\n        <span *ngIf=\"i === 0\" class=\"float-left\">{{total.name}}</span><span\r\n        [innerHTML]=\"total.fields[column.objectKey] | gtTotals:(total.update === false || gtOptions.lazyLoad === true) ? gtData:(gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length):column.objectKey:refreshTotals\"></span>\r\n      </td>\r\n    </tr>\r\n    </tfoot>\r\n  </ng-template>\r\n  <tbody *ngIf=\"gtData && gtInfo\">\r\n  <ng-template class=\"table-rows\" ngFor let-row let-last=\"last\" [ngForTrackBy]=\"trackByFn\"\r\n               [ngForOf]=\"gtOptions.lazyLoad && gtInfo ? (gtData[gtInfo.pageCurrent-1]) : (gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length | gtOrderBy:sortOrder:gtFields:refreshSorting:gtData.length | gtChunk:gtInfo:gtInfo.recordLength:gtInfo.pageCurrent:refreshPageArray:gtData.length:gtEvent:data | gtRowClass:gtFields)\">\r\n    <tr [ngClass]=\"{'row-selected':metaInfo[row.$$gtRowId]?.isSelected, 'row-open':metaInfo[row.$$gtRowId]?.isOpen, 'row-loading':loading, 'row-expandable':gtRowComponent}\"\r\n        class=\"{{row.$$gtRowClass}}\"\r\n        (click)=\"gtOptions.rowSelection ? toggleSelect(row):rowClick(row, $event)\">\r\n      <td *ngFor=\"let column of row | gtRender:gtSettings:gtFields:refreshPipe:loading:gtOptions.highlightSearch:gtInfo.searchTerms;trackBy:trackByColumnFn\"\r\n          ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{(gtFields | gtProperty:column.objectKey:'inlineEdit') ? 'gt-inline-edit':''}} {{column.edited ? 'gt-edited':''}} {{ gtFields | gtColumnClass:column:row }}\">\r\n                        <span class=\"gt-row-label\"\r\n                              *ngIf=\"gtOptions.stack\">{{(gtFields | gtProperty:column.objectKey:'stackedHeading') ? (gtFields | gtProperty:column.objectKey:'stackedHeading') : (gtFields | gtProperty:column.objectKey:'name')}}</span>\r\n        <gt-custom-component-factory *ngIf=\"column.columnComponent && column.columnComponent.type !== 'checkbox'\" class=\"gt-row-content\"\r\n                                     [type]=\"column.columnComponent.type\"\r\n                                     [injector]=\"column.columnComponent.injector\" [row]=\"row\"\r\n                                     [column]=\"column\" (redrawEvent)=\"redraw($event)\"\r\n                                     [searchTerms]=\"gtInfo.searchTerms\"  (searchEvent)=\"redraw($event)\"\r\n                                     (click)=\"column.click ? column.click(row,column,$event):'';column.expand ? toggleCollapse(row, column.expand):''\"></gt-custom-component-factory>\r\n        <span *ngIf=\"!column.columnComponent && (!(gtFields | gtProperty:column.objectKey:'inlineEdit') || ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | async) || (!((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsEditable:row:refreshPipe)))\"\r\n              class=\"gt-row-content\" [innerHTML]=\"column.renderValue\"\r\n              (click)=\"column.click ? column.click(row,column,$event):'';column.expand ? toggleCollapse(row, column.expand):''\"></span>\r\n        <ng-template\r\n          [ngIf]=\"!column.columnComponent && (((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | async) || ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsEditable:row:refreshPipe))\">\r\n          <ng-template [ngIf]=\"([true,'email','number','password', 'text'].indexOf((gtFields | gtProperty:column.objectKey:'inlineEdit').type) !== -1) || !(gtFields | gtProperty:column.objectKey:'inlineEdit').type\">\r\n            <input class=\"inline-edit\" [attr.type]=\"!(gtFields | gtProperty:column.objectKey:'inlineEdit').type ? 'text' : !((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable) ? (gtFields | gtProperty:column.objectKey:'inlineEdit').type:(gtFields | gtProperty:column.objectKey:'inlineEdit').type | async\" [(ngModel)]=\"column.renderValue\"\r\n                   (input)=\"gtUpdateColumn($event,row, column)\">\r\n            <span class=\"gt-inline-edit-notice\">{{gtTexts.inlineEditEdited}}</span>\r\n          </ng-template>\r\n          <gt-dropdown\r\n            *ngIf=\"(((gtFields | gtProperty:column.objectKey:'inlineEdit').type) && ((gtFields | gtProperty:column.objectKey:'inlineEdit').type).length > 0) || ((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable)\"\r\n            [options]=\"!((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable) ? (gtFields | gtProperty:column.objectKey:'inlineEdit').type : (gtFields | gtProperty:column.objectKey:'inlineEdit').type | async\"\r\n            [id]=\"'_' + row.$$gtRowId + '_' + column.objectKey\"\r\n            [(selected)]=\"column.renderValue\" (selectedChange)=\"gtDropdownSelect(row, column)\">Add\r\n            inline editing module\r\n          </gt-dropdown>\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"!column.columnComponent && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active) \">\r\n          <ng-template\r\n            [ngIf]=\"[true,'email','number','password'].indexOf(gtFields | gtProperty:column.objectKey:'inlineEdit') !== -1\">\r\n            <input class=\"inline-edit\" [attr.type]=\"(gtFields | gtProperty:column.objectKey:'inlineEdit') === true ? 'text':(gtFields | gtProperty:column.objectKey:'inlineEdit')\" [(ngModel)]=\"column.renderValue\"\r\n                   (input)=\"gtUpdateColumn($event,row, column)\">\r\n            <span class=\"gt-inline-edit-notice\">{{gtTexts.inlineEditEdited}}</span>\r\n          </ng-template>\r\n          <gt-dropdown\r\n            *ngIf=\"(gtFields | gtProperty:column.objectKey:'inlineEdit') && [true,'email','number','password'].indexOf(gtFields | gtProperty:column.objectKey:'inlineEdit') === -1\"\r\n            [options]=\"gtFields | gtProperty:column.objectKey:'inlineEdit'\"\r\n            [id]=\"'_' + row.$$gtRowId + '_' + column.objectKey\"\r\n            [(selected)]=\"column.renderValue\" (selectedChange)=\"gtDropdownSelect(row, column)\">Add\r\n            inline editing module\r\n          </gt-dropdown>\r\n        </ng-template>\r\n        <gt-checkbox *ngIf=\"column.columnComponent && column.columnComponent.type === 'checkbox'\" [checked]=\"metaInfo[row.$$gtRowId]?.isSelected\" (changed)=\"toggleSelect(row)\"></gt-checkbox>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"row-expanded\" *ngIf=\"metaInfo[row.$$gtRowId]?.isOpen\">\r\n      <td [attr.colspan]=\"(gtFields | gtVisible:gtSettings:refreshPipe).length\">\r\n        <gt-expanding-row [row]=\"row\"\r\n                          [type]=\"expandedRow.component ? expandedRow.component:gtRowComponent\"\r\n                          [columnWidth]=\"columnWidth\"\r\n                          [gtFields]=\"gtFields\"\r\n                          [gtOptions]=\"gtOptions\"\r\n                          [gtEvent]=\"gtEvent\"\r\n                          [gtInfo]=\"gtInfo\"\r\n                          [gtSettings]=\"gtSettings\"\r\n                          [data]=\"expandedRow.data ? expandedRow.data:row\"\r\n                          (redrawEvent)=\"redraw($event)\"\r\n                          (toggleRowEvent)=\"toggleCollapse($event)\"></gt-expanding-row>\r\n      </td>\r\n    </tr>\r\n    <tr *ngIf=\"gtOptions.reportColumnWidth && last\">\r\n      <td style=\"padding: 0; border:none;\"\r\n          *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe\" gtColumnWidth\r\n          [objectKey]=\"column.objectKey\" [widths]=\"columnWidth\"></td>\r\n    </tr>\r\n  </ng-template>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && (gtInfo.searchTerms || gtInfo.filter) && !loading\">\r\n    <td class=\"gt-no-matching-results\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">\r\n      {{gtTexts.noMatchingData}}\r\n    </td>\r\n  </tr>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && !(gtInfo.searchTerms || gtInfo.filter) && !loading\">\r\n    <td class=\"gt-no-results\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">{{gtTexts.noData}}\r\n    </td>\r\n  </tr>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && loading\">\r\n    <td class=\"gt-loading-data\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">{{gtTexts.loading}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"gtFields && gtSettings && (gtFields | gtVisible:gtSettings:refreshPipe).length === 0\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-no-visible-columns\">{{gtTexts.noVisibleColumnsHeading}}</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td class=\"gt-no-visible-columns\">{{gtTexts.noVisibleColumns}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"!gtFields || !gtSettings\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-loading-config\">&nbsp;</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td class=\"gt-loading-config\">&nbsp;</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n`\r\n})\r\nexport class GenericTableComponent<R extends GtRow, C extends GtExpandedRow<R>>\r\n\timplements OnInit, OnChanges, OnDestroy {\r\n\tget gtRowComponent(): Type<C> {\r\n\t\treturn this._gtRowComponent;\r\n\t}\r\n\r\n\tget hasEdits(): boolean {\r\n\t\treturn Object.keys(this.editedRows).length > 0;\r\n\t}\r\n\r\n\tget gtOptions(): GtOptions {\r\n\t\treturn this._gtOptions;\r\n\t}\r\n\r\n\tget gtTotals(): any {\r\n\t\treturn this._gtTotals;\r\n\t}\r\n\r\n\tget gtFields(): GtConfigField<R, any>[] {\r\n\t\treturn this._gtFields;\r\n\t}\r\n\r\n\tget gtSettings(): GtConfigSetting[] {\r\n\t\treturn this._gtSettings;\r\n\t}\r\n\r\n\tget gtData(): Array<any> {\r\n\t\treturn this._gtData;\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtOptions(value: GtOptions) {\r\n\t\tthis._gtOptions = value;\r\n\r\n\t\t// if number of rows is passed and if number of rows differs from current record length...\r\n\t\tif (\r\n\t\t\tthis.gtOptions.numberOfRows &&\r\n\t\t\tthis.gtInfo.recordLength !== this.gtOptions.numberOfRows\r\n\t\t) {\r\n\t\t\t// ...update record length and redraw table\r\n\t\t\tthis.gtInfo.recordLength = this.gtOptions.numberOfRows;\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\r\n\t\t// ...extend gtOptions default values with values passed into component\r\n\t\tthis._gtOptions = <GtOptions>this.extend(\r\n\t\t\tthis.gtDefaultOptions,\r\n\t\t\tthis._gtOptions\r\n\t\t);\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtTotals(value: any) {\r\n\t\tthis._gtTotals = value;\r\n\t}\r\n\t@Input()\r\n\tset gtFields(value: GtConfigField<R, any>[]) {\r\n\t\tthis._gtFields = value;\r\n\t\tconst COLUMNS_WITH_CLASS_NAMES = this._gtFields\r\n\t\t\t.map(column => column)\r\n\t\t\t.filter(column => column.classNames);\r\n\t\t// TODO: remove deprecated warning when setting has been removed\r\n\t\tif (COLUMNS_WITH_CLASS_NAMES.length > 0) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'Field setting \"classNames\" have been deprecated in favor for \"columnClass\" and will be removed in the future, please update field settings for column with object key: ' +\r\n\t\t\t\t\tCOLUMNS_WITH_CLASS_NAMES[0].objectKey\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t@Input()\r\n\tset gtSettings(value: GtConfigSetting[]) {\r\n\t\tthis._gtSettings = value;\r\n\r\n\t\t// loop through current settings\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t// set sort enabled/disabled setting\r\n\t\t\tthis._gtSettings[i].sortEnabled =\r\n\t\t\t\tthis._gtSettings[i].sortEnabled !== false\r\n\t\t\t\t\t? (this._gtSettings[i].sortEnabled = !(\r\n\t\t\t\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') !== -1\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: false;\r\n\r\n\t\t\t// check if sorting is undefined...\r\n\t\t\tif (typeof this._gtSettings[i].sort === 'undefined') {\r\n\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t}\r\n\r\n\t\t\t// check if column order is undefined...\r\n\t\t\tif (\r\n\t\t\t\ttypeof this._gtSettings[i].columnOrder === 'undefined' &&\r\n\t\t\t\tthis._gtSettings[i].enabled !== false\r\n\t\t\t) {\r\n\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\tthis._gtSettings[i].columnOrder = this._gtSettings[i - 1]\r\n\t\t\t\t\t? this._gtSettings[i - 1].columnOrder + 1\r\n\t\t\t\t\t: 0;\r\n\t\t\t}\r\n\r\n\t\t\t// check if column lock settings are undefined...\r\n\t\t\tif (typeof this._gtSettings[i].lockSettings === 'undefined') {\r\n\t\t\t\t// ...if so, set lock settings to false unless field is disabled (enable === false)\r\n\t\t\t\tthis._gtSettings[i].lockSettings =\r\n\t\t\t\t\tthis._gtSettings[i].enabled === false || false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.restructureSorting();\r\n\t}\r\n\t@Input()\r\n\tset gtData(initialData: Array<any>) {\r\n\t\tconst data = this._gtOptions.mutateData\r\n\t\t\t? [...initialData]\r\n\t\t\t: this.cloneDeep(initialData);\r\n\t\tif (this.gtOptions.lazyLoad && this.gtInfo) {\r\n\t\t\tthis.gtMetaPipe.transform(\r\n\t\t\t\tdata,\r\n\t\t\t\tthis.gtOptions.rowIndex,\r\n\t\t\t\tthis.gtInfo.pageCurrent - 1,\r\n\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t);\r\n\t\t\tif (this.lazyAllSelected) {\r\n\t\t\t\tconst UNIQUE_ROWS = this.selectedRows.map(row => row.$$gtRowId);\r\n\t\t\t\tdata.map(row => {\r\n\t\t\t\t\tif (UNIQUE_ROWS.indexOf(row.$$gtRowId) === -1) {\r\n\t\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis._updateMetaInfo(this.selectedRows, 'isSelected', true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gtMetaPipe.transform(data, this.gtOptions.rowIndex);\r\n\t\t}\r\n\t\tif (this.gtOptions.rowSelectionInitialState) {\r\n\t\t\tdata.map(row => {\r\n\t\t\t\tconst selected =\r\n\t\t\t\t\ttypeof this.gtOptions.rowSelectionInitialState === 'function'\r\n\t\t\t\t\t\t? this.gtOptions.rowSelectionInitialState(row)\r\n\t\t\t\t\t\t: this.gtOptions.rowSelectionInitialState;\r\n\t\t\t\tif (selected) {\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId] = { isSelected: true };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId].isSelected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (\r\n\t\t\tthis.gtOptions.rowExpandInitialState &&\r\n\t\t\tthis.gtOptions.rowExpandInitialComponent\r\n\t\t) {\r\n\t\t\tdata.map(row => {\r\n\t\t\t\tconst expanded =\r\n\t\t\t\t\ttypeof this.gtOptions.rowExpandInitialState === 'function'\r\n\t\t\t\t\t\t? this.gtOptions.rowExpandInitialState(row)\r\n\t\t\t\t\t\t: this.gtOptions.rowExpandInitialState;\r\n\t\t\t\tthis.expandedRow = this.gtOptions.rowExpandInitialComponent;\r\n\r\n\t\t\t\tif (expanded) {\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId] = { isOpen: true };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId].isOpen = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._gtData = data;\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtRowComponent(value: Type<C>) {\r\n\t\tconsole.warn(\r\n\t\t\t'GtRowComponent has been deprecated and support will be removed in a future release, see https://github.com/hjalmers/angular-generic-table/issues/34'\r\n\t\t);\r\n\t\tthis._gtRowComponent = value;\r\n\t}\r\n\r\n\tpublic columnWidth: Object = {};\r\n\tpublic configObject: GtConfig<R>;\r\n\tpublic sortOrder: Array<any> = [];\r\n\tpublic metaInfo: { [gtRowId: string]: GtRowMeta } = {};\r\n\tpublic selectedRows: Array<GtRow> = [];\r\n\tpublic openRows: Array<GtRow> = [];\r\n\tprivate _gtSettings: GtConfigSetting[] = [];\r\n\tprivate _gtFields: GtConfigField<R, any>[] = [];\r\n\tprivate _gtData: Array<any>;\r\n\tprivate _gtTotals: any;\r\n\tprivate _gtRowComponent: Type<C>;\r\n\tpublic expandedRow: {\r\n\t\tcomponent: Type<C>;\r\n\t\tdata?: Array<any>;\r\n\t};\r\n\tpublic gtDefaultTexts: GtTexts = {\r\n\t\tloading: 'Loading...',\r\n\t\tnoData: 'No data',\r\n\t\tnoMatchingData: 'No data matching results found',\r\n\t\tnoVisibleColumnsHeading: 'No visible columns',\r\n\t\tnoVisibleColumns: 'Please select at least one column to be visible.',\r\n\t\ttableInfo:\r\n\t\t\t'Showing #recordFrom to #recordTo of #recordsAfterSearch entries.',\r\n\t\ttableInfoAfterSearch:\r\n\t\t\t'Showing  #recordFrom to #recordTo of #recordsAfterSearch entries (filtered from a total of #recordsAll entries).',\r\n\t\tcsvDownload: 'download',\r\n\t\tsortLabel: 'Sort:',\r\n\t\tpaginateNext: 'Next page',\r\n\t\tpaginatePrevious: 'Previous page',\r\n\t\tinlineEditEdited: 'Press enter to save'\r\n\t};\r\n\t@Input() gtTexts: GtTexts = this.gtDefaultTexts;\r\n\t@Input() gtClasses: string;\r\n\t@Output() gtEvent: EventEmitter<GtEvent> = new EventEmitter();\r\n\tpublic gtDefaultOptions: GtOptions = {\r\n\t\tcsvDelimiter: ';',\r\n\t\tstack: false,\r\n\t\tlazyLoad: false,\r\n\t\tcache: false,\r\n\t\tdebounceTime: 200,\r\n\t\thighlightSearch: false,\r\n\t\trowSelection: false,\r\n\t\trowSelectionAllowMultiple: true,\r\n\t\trowExpandAllowMultiple: true,\r\n\t\tnumberOfRows: 10,\r\n\t\treportColumnWidth: false,\r\n\t\tallowUnsorted: true,\r\n\t\tmutateData: true\r\n\t};\r\n\tprivate _gtOptions: GtOptions = this.gtDefaultOptions;\r\n\tpublic store: Array<any> = [];\r\n\tpublic loading = true;\r\n\tprivate debounceTimer: void = null;\r\n\tpublic loadingProperty: string;\r\n\tpublic lazyAllSelected = false;\r\n\r\n\t@Input()\r\n\tgtInfo: GtInformation = {\r\n\t\tpageCurrent: 1,\r\n\t\tpageTotal: 0,\r\n\t\trecordFrom: 0,\r\n\t\trecordTo: 0,\r\n\t\trecordLength: this.gtOptions.numberOfRows,\r\n\t\trecordsAll: 0,\r\n\t\trecordsAfterFilter: 0,\r\n\t\trecordsAfterSearch: 0\r\n\t};\r\n\r\n\tpublic refreshPipe = false;\r\n\tpublic refreshTotals = false;\r\n\tpublic refreshSorting = false;\r\n\tpublic refreshFilter = false;\r\n\tpublic refreshPageArray = false;\r\n\tprivate globalInlineEditListener: Function;\r\n\tpublic editedRows: {\r\n\t\t[key: string]: {\r\n\t\t\tchanges: { [key: string]: GtRenderField<GtRow, any> };\r\n\t\t\trow: GtRow;\r\n\t\t};\r\n\t} = {};\r\n\r\n\tpublic data: { exportData: Array<any> } = { exportData: [] }; // Store filtered data for export\r\n\r\n\tconstructor(private renderer: Renderer2, private gtMetaPipe: GtMetaPipe) {\r\n\t\tthis.gtEvent.subscribe(($event: GtEvent) => {\r\n\t\t\tif ($event.name === 'gt-info') {\r\n\t\t\t\tthis.updateRecordRange();\r\n\t\t\t}\r\n\t\t\tif ($event.name === 'gt-row-updated') {\r\n\t\t\t\tthis.updateTotals();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sort table by object key.\r\n\t * @param objectKey - name of key to sort on.\r\n\t * @param event - such as key press during sorting.\r\n\t */\r\n\tpublic gtSort = function(objectKey: string, event: any) {\r\n\t\tthis.inlineEditCancel(); // cancel inline editing\r\n\r\n\t\t// loop through current settings\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].objectKey === objectKey) {\r\n\t\t\t\t// check if sorting is disabled...\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') !== -1\r\n\t\t\t\t) {\r\n\t\t\t\t\t// ...if so, exit function without applying any sorting\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t/* check if sorting is undefined... */ typeof this._gtSettings[i]\r\n\t\t\t\t\t\t.sort === 'undefined'\r\n\t\t\t\t) {\r\n\t\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check length\r\n\t\tconst ctrlKey = event.metaKey || event.ctrlKey;\r\n\t\tconst sort = this.sortOrder.slice(0);\r\n\r\n\t\tlet match = -1;\r\n\t\tlet matchDesc = -1;\r\n\t\tlet pos = -1;\r\n\r\n\t\t// check if property already exits\r\n\t\tfor (let i = 0; i < sort.length; i++) {\r\n\t\t\tconst hit = sort[i].indexOf(objectKey);\r\n\t\t\tif (hit !== -1) {\r\n\t\t\t\tmatch = this.sortOrder.indexOf(objectKey);\r\n\t\t\t\tmatchDesc =\r\n\t\t\t\t\tmatch === -1 ? this.sortOrder.indexOf('-' + objectKey) : match;\r\n\t\t\t\tpos = Math.max(match, matchDesc);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if ctrl key or meta key is press together with sort...\r\n\t\tif (ctrlKey) {\r\n\t\t\tif (this.sortOrder[this.sortOrder.length - 1] === '$$gtInitialRowIndex') {\r\n\t\t\t\tthis.sortOrder.pop();\r\n\t\t\t}\r\n\t\t\tswitch (pos) {\r\n\t\t\t\t// ...and property is not sorted before...\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\t// ...add property to sorting\r\n\t\t\t\t\tthis.sortOrder.push(objectKey);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// ...and property is sorted before...\r\n\t\t\t\t\tif (match !== -1) {\r\n\t\t\t\t\t\t// ...change from asc to desc if sorted asc\r\n\t\t\t\t\t\tthis.sortOrder[pos] = '-' + objectKey;\r\n\t\t\t\t\t} else if (this.sortOrder.length > 1) {\r\n\t\t\t\t\t\t// ...remove sorting if sorted desc\r\n\t\t\t\t\t\tif (ctrlKey) {\r\n\t\t\t\t\t\t\tthis.sortOrder[pos] = objectKey;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.sortOrder.splice(pos, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (this.sortOrder.length === 1) {\r\n\t\t\t\t\t\t// ...set sorting to asc if only sorted property\r\n\t\t\t\t\t\tthis.sortOrder[pos] = objectKey;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t/* if ctrl key or meta key is not press together with sort... */\r\n\t\t\tswitch (pos) {\r\n\t\t\t\t// ...and property is not sorted before...\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\t// ...sort by property\r\n\t\t\t\t\tthis.sortOrder = [objectKey];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// ...change from desc to asc and vise versa\r\n\t\t\t\t\tthis.sortOrder =\r\n\t\t\t\t\t\tmatch !== -1\r\n\t\t\t\t\t\t\t? ['-' + objectKey]\r\n\t\t\t\t\t\t\t: ctrlKey || !this.gtOptions.allowUnsorted\r\n\t\t\t\t\t\t\t\t? [objectKey]\r\n\t\t\t\t\t\t\t\t: [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update settings object with new sorting information\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].objectKey === objectKey) {\r\n\t\t\t\tswitch (this._gtSettings[i].sort) {\r\n\t\t\t\t\t// if sorted asc...\r\n\t\t\t\t\tcase 'asc':\r\n\t\t\t\t\t\t// ...change to desc\r\n\t\t\t\t\t\tthis._gtSettings[i].sort = 'desc';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// if sorted desc...\r\n\t\t\t\t\tcase 'desc':\r\n\t\t\t\t\t\t// ...change to asc if it's the only sorted property otherwise remove sorting\r\n\t\t\t\t\t\tthis._gtSettings[i].sort =\r\n\t\t\t\t\t\t\t(this.sortOrder.length === 1 && sort.length < 2) ||\r\n\t\t\t\t\t\t\tctrlKey ||\r\n\t\t\t\t\t\t\t!this.gtOptions.allowUnsorted\r\n\t\t\t\t\t\t\t\t? 'asc'\r\n\t\t\t\t\t\t\t\t: 'enable';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// if sorting enabled...\r\n\t\t\t\t\tcase 'enable':\r\n\t\t\t\t\t\t// ...change to asc\r\n\t\t\t\t\t\tthis._gtSettings[i].sort = 'asc';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._gtSettings[i].sortOrder =\r\n\t\t\t\t\tthis._gtSettings[i].sort === 'enable'\r\n\t\t\t\t\t\t? this._gtSettings.length - 1\r\n\t\t\t\t\t\t: this.sortOrder.indexOf(objectKey) === -1\r\n\t\t\t\t\t\t\t? this.sortOrder.indexOf('-' + objectKey)\r\n\t\t\t\t\t\t\t: this.sortOrder.indexOf(objectKey);\r\n\t\t\t} else if (\r\n\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') === -1 &&\r\n\t\t\t\tthis.sortOrder.indexOf(this._gtSettings[i].objectKey) === -1 &&\r\n\t\t\t\tthis.sortOrder.indexOf('-' + this._gtSettings[i].objectKey) === -1\r\n\t\t\t) {\r\n\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t\tthis._gtSettings[i].sortOrder = this._gtSettings.length - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// refresh sorting pipe\r\n\t\tthis.refreshSorting = !this.refreshSorting;\r\n\t\tthis.refreshPageArray = !this.refreshPageArray;\r\n\r\n\t\t// sort by initial sort order as last resort\r\n\t\tthis.sortOrder.push('$$gtInitialRowIndex');\r\n\r\n\t\t// emit sort event\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-sorting-applied',\r\n\t\t\tvalue: this.sortOrder\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Change number of rows to be displayed.\r\n\t * @param rowLength - total number of rows.\r\n\t * @param reset - should page be reset to first page.\r\n\t */\r\n\tpublic changeRowLength = function(rowLength: any, reset?: boolean) {\r\n\t\tlet lengthValue = isNaN(parseInt(rowLength, 10))\r\n\t\t\t? 0\r\n\t\t\t: parseInt(rowLength, 10);\r\n\t\tlet newPosition = 1;\r\n\r\n\t\tif (!lengthValue && this.gtData) {\r\n\t\t\tlengthValue = this.gtData.length;\r\n\t\t}\r\n\r\n\t\t// if reset is not true and we're not lazy loading data...\r\n\t\tif (reset !== true && this._gtOptions.lazyLoad !== true) {\r\n\t\t\t// ...get current position in record set\r\n\t\t\tconst currentRecord =\r\n\t\t\t\tthis.gtInfo.recordLength * (this.gtInfo.pageCurrent - 1);\r\n\t\t\tconst currentPosition =\r\n\t\t\t\tthis._gtData.indexOf(this._gtData[currentRecord]) + 1;\r\n\r\n\t\t\t// ...get new position\r\n\t\t\tnewPosition = Math.ceil(currentPosition / lengthValue);\r\n\t\t}\r\n\r\n\t\t// change row length\r\n\t\tthis.gtInfo.recordLength = lengthValue;\r\n\r\n\t\t// go to new position\r\n\t\tthis.gtInfo.pageCurrent = newPosition;\r\n\r\n\t\t// if lazy loading data...\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\t// ...replace data with place holders for new data\r\n\t\t\tthis._gtData[0] = this.loadingContent(lengthValue);\r\n\r\n\t\t\t// ...empty current store\r\n\t\t\tthis.store = [];\r\n\t\t}\r\n\r\n\t\t// this.updateRecordRange();\r\n\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-length-changed',\r\n\t\t\tvalue: lengthValue\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Force a redraw of table rows.\r\n\t * As the table uses pure pipes, we need to force a redraw if an object in the array is changed to see the changes.\r\n\t */\r\n\tpublic redraw = function($event?: any) {\r\n\t\tthis.refreshSorting = !this.refreshSorting;\r\n\t\tthis.refreshPageArray = !this.refreshPageArray;\r\n\t\tthis.refreshPipe = !this.refreshPipe;\r\n\t};\r\n\r\n\t/** Update record range. */\r\n\tprivate updateRecordRange() {\r\n\t\tthis.gtInfo.recordFrom =\r\n\t\t\tthis.gtInfo.recordsAfterSearch === 0\r\n\t\t\t\t? 0\r\n\t\t\t\t: (this.gtInfo.pageCurrent - 1) * this.gtInfo.recordLength + 1;\r\n\t\tthis.gtInfo.recordTo =\r\n\t\t\tthis.gtInfo.recordsAfterSearch <\r\n\t\t\tthis.gtInfo.pageCurrent * this.gtInfo.recordLength\r\n\t\t\t\t? this.gtInfo.recordsAfterSearch\r\n\t\t\t\t: this.gtInfo.pageCurrent * this.gtInfo.recordLength;\r\n\t}\r\n\r\n\t/** Update totals. */\r\n\tprivate updateTotals() {\r\n\t\tthis.refreshTotals = !this.refreshTotals;\r\n\t}\r\n\r\n\t/** Go to next page. */\r\n\tpublic nextPage = function() {\r\n\t\tconst page =\r\n\t\t\tthis.gtInfo.pageCurrent === this.gtInfo.pageTotal\r\n\t\t\t\t? this.gtInfo.pageTotal\r\n\t\t\t\t: this.gtInfo.pageCurrent + 1;\r\n\t\tthis.goToPage(page);\r\n\t};\r\n\r\n\t/** Go to previous page. */\r\n\tpublic previousPage = function() {\r\n\t\tconst page =\r\n\t\t\tthis.gtInfo.pageCurrent === 1 ? 1 : this.gtInfo.pageCurrent - 1;\r\n\t\tthis.goToPage(page);\r\n\t};\r\n\r\n\t/** Request more data (used when lazy loading) */\r\n\tprivate getData = function() {\r\n\t\t// ...emit event requesting for more data\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-page-changed-lazy',\r\n\t\t\tvalue: {\r\n\t\t\t\tpageCurrent: this.gtInfo.pageCurrent,\r\n\t\t\t\trecordLength: this.gtInfo.recordLength\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Go to specific page.\r\n\t * @param page - page number.\r\n\t */\r\n\tpublic goToPage = function(page: number) {\r\n\t\tconst previousPage = this.gtInfo.pageCurrent;\r\n\t\tthis.gtInfo.pageCurrent = page;\r\n\t\tthis.inlineEditCancel(); // cancel inline edit\r\n\r\n\t\t// if lazy loading and if page contains no records...\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\t// ...if data for current page contains no entries...\r\n\t\t\tif (\r\n\t\t\t\tthis._gtOptions.cache === false ||\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].length === 0\r\n\t\t\t) {\r\n\t\t\t\t// ...create temporary content while waiting for data\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1] = this.loadingContent(\r\n\t\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t\t);\r\n\t\t\t\tthis.loading = true; // loading true\r\n\t\t\t}\r\n\t\t\t// ...if first entry in current page equals our loading placeholder...\r\n\t\t\tif (\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1][0][this.loadingProperty] ===\r\n\t\t\t\tthis.gtTexts.loading\r\n\t\t\t) {\r\n\t\t\t\t// ...get data\r\n\t\t\t\tclearTimeout(this.debounceTimer);\r\n\t\t\t\tthis.debounceTimer = setTimeout(() => {\r\n\t\t\t\t\tthis.getData();\r\n\t\t\t\t}, this._gtOptions.debounceTime);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.updateRecordRange();\r\n\r\n\t\t// ...emit page change event\r\n\t\tif (previousPage !== page) {\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-page-changed',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tpageCurrent: this.gtInfo.pageCurrent,\r\n\t\t\t\t\tpagePrevious: previousPage,\r\n\t\t\t\t\trecordLength: this.gtInfo.recordLength\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Get meta data for row.\r\n\t */\r\n\tpublic getRowState(row: R): GtRowMeta {\r\n\t\treturn typeof this.metaInfo[row.$$gtRowId] === 'undefined'\r\n\t\t\t? null\r\n\t\t\t: this.metaInfo[row.$$gtRowId];\r\n\t}\r\n\r\n\t/**\r\n\t * Expand all rows.\r\n\t * @param expandedRow - component to render when rows are expanded.\r\n\t */\r\n\tpublic expandAllRows(expandedRow: { component: Type<C>; data?: any }): void {\r\n\t\tthis.expandedRow = expandedRow;\r\n\t\tthis._toggleAllRowProperty('isOpen', true);\r\n\t}\r\n\r\n\t/**\r\n\t * Collapse all rows.\r\n\t */\r\n\tpublic collapseAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isOpen', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Select all rows.\r\n\t */\r\n\tpublic selectAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isSelected', true);\r\n\t}\r\n\r\n\t/**\r\n\t * Deselect all rows.\r\n\t */\r\n\tpublic deselectAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isSelected', false);\r\n\t}\r\n\t/**\r\n\t * Toggle all rows.\r\n\t */\r\n\tpublic toggleAllRows(): void {\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\tif (!this.lazyAllSelected || this.selectedRows.length === 0) {\r\n\t\t\t\tthis.selectAllRows();\r\n\t\t\t\tthis.lazyAllSelected = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.deselectAllRows();\r\n\t\t\t\tthis.lazyAllSelected = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.selectedRows.length !== this.gtData.length) {\r\n\t\t\t\tthis.selectAllRows();\r\n\t\t\t} else {\r\n\t\t\t\tthis.deselectAllRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle row collapsed state ie. expanded/open or collapsed/closed.\r\n\t * @param row - row object that should be expanded/collapsed.\r\n\t * @param expandedRow - component to render when row is expanded.\r\n\t */\r\n\tpublic toggleCollapse(\r\n\t\trow: GtRow,\r\n\t\texpandedRow?: { component: Type<C>; data?: any }\r\n\t) {\r\n\t\tif (expandedRow) {\r\n\t\t\tthis.expandedRow = expandedRow;\r\n\t\t}\r\n\t\tthis._toggleRowProperty(row, 'isOpen');\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle row selected state ie. selected or not.\r\n\t * @param row - row object that should be selected/deselected.\r\n\t */\r\n\tpublic toggleSelect(row: GtRow) {\r\n\t\tthis._toggleRowProperty(row, 'isSelected');\r\n\t}\r\n\r\n\tpublic rowClick(row: GtRow, $event: MouseEvent) {\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-clicked',\r\n\t\t\tvalue: { row: row, event: $event }\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update row data.\r\n\t * @param row - row object that has been edited.\r\n\t * @param oldValue - row object before edit.\r\n\t */\r\n\tpublic updateRow(row: GtRow, oldValue: GtRow) {\r\n\t\tthis._toggleRowProperty(row, 'isUpdated', oldValue);\r\n\t}\r\n\r\n\t/**\r\n\t * removes a row from the table\r\n\t * @param row - the row object to remove\r\n\t */\r\n\tpublic removeRow(row: GtRow) {\r\n\t\tif (this.isRowSelected(row)) {\r\n\t\t\tthis.toggleSelect(row);\r\n\t\t}\r\n\t\tconst index = this._gtData.indexOf(row);\r\n\t\tthis._gtData.splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * check if a row is selected\r\n\t * @param row - row object\r\n\t */\r\n\tpublic isRowSelected(row: GtRow): boolean {\r\n\t\treturn (\r\n\t\t\tthis.metaInfo[row.$$gtRowId] && this.metaInfo[row.$$gtRowId].isSelected\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Update meta info for all rows, ie. isSelected, isOpen.\r\n\t * @param array - array that holds rows that need to be updated.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param active - should rows be expanded/open, selected.\r\n\t * @param exception - update all rows except this one.\r\n\t */\r\n\tprivate _updateMetaInfo(\r\n\t\tarray: Array<GtRow>,\r\n\t\tproperty: string,\r\n\t\tactive: boolean,\r\n\t\texception?: GtRow\r\n\t) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (!this.metaInfo[array[i].$$gtRowId]) {\r\n\t\t\t\tthis.metaInfo[array[i].$$gtRowId] = {};\r\n\t\t\t}\r\n\t\t\tif (exception && array[i].$$gtRowId === exception.$$gtRowId) {\r\n\t\t\t} else {\r\n\t\t\t\tthis.metaInfo[array[i].$$gtRowId][property] = active;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Push selected/expanded lazy loaded rows to array with meta data.\r\n\t * @param target - array to which rows should be added.\r\n\t * @param source - array that holds rows that should be added.\r\n\t * @returns array with added rows.\r\n\t */\r\n\tprivate _pushLazyRows(\r\n\t\ttarget: Array<GtRow>,\r\n\t\tsource: Array<GtRow>\r\n\t): Array<GtRow> {\r\n\t\tconst UNIQUE_ROWS = target.map(row => row.$$gtRowId);\r\n\t\tfor (let i = 0; i < source.length; i++) {\r\n\t\t\t// only add if not already in list\r\n\t\t\tif (UNIQUE_ROWS.indexOf(source[i].$$gtRowId) === -1) {\r\n\t\t\t\ttarget.push(source[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle meta info for all rows, ie. isSelected, isOpen.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param active - should rows be expanded/open, selected.\r\n\t */\r\n\tprivate _toggleAllRowProperty(property: string, active: boolean) {\r\n\t\tlet eventName: string;\r\n\t\tlet eventValue: any;\r\n\t\tswitch (property) {\r\n\t\t\tcase 'isOpen':\r\n\t\t\t\t// check if multiple expanded rows are allowed...\r\n\t\t\t\tif (this._gtOptions.rowExpandAllowMultiple === false) {\r\n\t\t\t\t\t// ...if not, exit function\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'feature disabled: enable by setting \"rowExpandAllowMultiple = true\"'\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\teventName = 'expand-all';\r\n\t\t\t\t\tthis.openRows = this._gtOptions.lazyLoad\r\n\t\t\t\t\t\t? this._pushLazyRows(\r\n\t\t\t\t\t\t\t\tthis.openRows,\r\n\t\t\t\t\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].slice()\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: this._gtData.slice();\r\n\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventName = 'collapse-all';\r\n\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, active);\r\n\t\t\t\t\tthis.openRows = [];\r\n\t\t\t\t}\r\n\t\t\t\teventValue = {\r\n\t\t\t\t\texpandedRows: this.openRows,\r\n\t\t\t\t\tchangedRow: 'all'\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'isSelected':\r\n\t\t\t\t// check if multi row selection is allowed...\r\n\t\t\t\tif (this._gtOptions.rowSelectionAllowMultiple === false) {\r\n\t\t\t\t\t// ...if not, exit function\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'feature disabled: enable by setting \"rowSelectionAllowMultiple = true\"'\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\teventName = 'select-all';\r\n\t\t\t\t\tthis.selectedRows = this._gtOptions.lazyLoad\r\n\t\t\t\t\t\t? this._pushLazyRows(\r\n\t\t\t\t\t\t\t\tthis.selectedRows,\r\n\t\t\t\t\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].slice()\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: this._gtData.slice();\r\n\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventName = 'deselect-all';\r\n\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, active);\r\n\t\t\t\t\tthis.selectedRows = [];\r\n\t\t\t\t}\r\n\t\t\t\teventValue = {\r\n\t\t\t\t\tselectedRows: this.selectedRows,\r\n\t\t\t\t\tchangedRow: 'all'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-' + eventName,\r\n\t\t\tvalue: eventValue\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle meta info for row, ie. isSelected, isOpen.\r\n\t * @param row - row object.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param propertyValues - optional property values that can be passed.\r\n\t */\r\n\tprivate _toggleRowProperty(\r\n\t\trow: GtRow,\r\n\t\tproperty: string,\r\n\t\tpropertyValues?: any\r\n\t) {\r\n\t\tlet eventName: string;\r\n\t\tlet eventValue: any;\r\n\t\t// make sure gtRowId exists on row object\r\n\t\tif (typeof row.$$gtRowId !== 'undefined') {\r\n\t\t\t// check if meta info exists for row\r\n\t\t\tif (!this.metaInfo[row.$$gtRowId]) {\r\n\t\t\t\t// if not, add object to store meta info\r\n\t\t\t\tthis.metaInfo[row.$$gtRowId] = {};\r\n\t\t\t}\r\n\r\n\t\t\tswitch (property) {\r\n\t\t\t\tcase 'isOpen':\r\n\t\t\t\t\tconst opened = this.metaInfo[row.$$gtRowId][property];\r\n\r\n\t\t\t\t\t// check if multiple expanded rows are allowed...\r\n\t\t\t\t\tif (this._gtOptions.rowExpandAllowMultiple === false) {\r\n\t\t\t\t\t\t// ...if not, collapse all rows except current row\r\n\t\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, false, row);\r\n\t\t\t\t\t\tthis.openRows = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check if row is expanded\r\n\t\t\t\t\tif (!opened) {\r\n\t\t\t\t\t\teventName = 'expand';\r\n\t\t\t\t\t\t// add row to expanded rows\r\n\t\t\t\t\t\tthis.openRows.push(row);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\teventName = 'collapse';\r\n\t\t\t\t\t\t// loop through expanded rows...\r\n\t\t\t\t\t\tfor (let i = 0; i < this.openRows.length; i++) {\r\n\t\t\t\t\t\t\t// if expanded row equals passed row...\r\n\t\t\t\t\t\t\tif (this.openRows[i].$$gtRowId === row.$$gtRowId) {\r\n\t\t\t\t\t\t\t\t// ...remove row from expanded rows...\r\n\t\t\t\t\t\t\t\tthis.openRows.splice(i, 1);\r\n\r\n\t\t\t\t\t\t\t\t// ...and exit loop\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = {\r\n\t\t\t\t\t\texpandedRows: this.openRows,\r\n\t\t\t\t\t\tchangedRow: row\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'isSelected':\r\n\t\t\t\t\tconst selected = this.metaInfo[row.$$gtRowId][property];\r\n\r\n\t\t\t\t\t// check if multi row selection is allowed...\r\n\t\t\t\t\tif (this._gtOptions.rowSelectionAllowMultiple === false) {\r\n\t\t\t\t\t\t// ...if not, deselect all rows except current row\r\n\t\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, false, row);\r\n\t\t\t\t\t\tthis.selectedRows = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check if row is selected\r\n\t\t\t\t\tif (!selected) {\r\n\t\t\t\t\t\teventName = 'select';\r\n\t\t\t\t\t\t// add row to selected rows\r\n\t\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.gtOptions.lazyLoad && this.lazyAllSelected) {\r\n\t\t\t\t\t\t\tthis.lazyAllSelected = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\teventName = 'deselect';\r\n\t\t\t\t\t\t// loop through selected rows...\r\n\t\t\t\t\t\tfor (let i = 0; i < this.selectedRows.length; i++) {\r\n\t\t\t\t\t\t\t// if selected row equals passed row...\r\n\t\t\t\t\t\t\tif (this.selectedRows[i].$$gtRowId === row.$$gtRowId) {\r\n\t\t\t\t\t\t\t\t// ...remove row from selected rows...\r\n\t\t\t\t\t\t\t\tthis.selectedRows.splice(i, 1);\r\n\r\n\t\t\t\t\t\t\t\t// ...and exit loop\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = {\r\n\t\t\t\t\t\tselectedRows: this.selectedRows,\r\n\t\t\t\t\t\tchangedRow: row\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'isUpdated':\r\n\t\t\t\t\teventName = 'updated';\r\n\t\t\t\t\tconst oldValue = propertyValues;\r\n\t\t\t\t\t// check if edit object exists for row\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId][property] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property] = {\r\n\t\t\t\t\t\t\toriginalValue: oldValue,\r\n\t\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\t\tnewValue: row\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property].oldValue = oldValue;\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property].newValue = row;\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = this.metaInfo[row.$$gtRowId][property];\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\tthis.inlineEditCancel(row);\r\n\t\t\t\t\t// this.gtData = [...this.gtData.map((r) => { return{...r}; })];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-row-' + eventName,\r\n\t\t\t\tvalue: eventValue\r\n\t\t\t});\r\n\t\t\tif (property !== 'isUpdated') {\r\n\t\t\t\tthis.metaInfo[row.$$gtRowId][property] = !this.metaInfo[row.$$gtRowId][\r\n\t\t\t\t\tproperty\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update column.\r\n\t * @param $event - key up event.\r\n\t * @param row - row object.\r\n\t * @param column - column object.\r\n\t */\r\n\tpublic gtUpdateColumn(\r\n\t\t$event: KeyboardEvent,\r\n\t\trow: GtRow,\r\n\t\tcolumn: GtRenderField<any, any>\r\n\t) {\r\n\t\tthis._editRow(row, column);\r\n\t}\r\n\r\n\t/**\r\n\t * Dropdown select.\r\n\t * @param row - row object.\r\n\t * @param column - column object.\r\n\t */\r\n\tpublic gtDropdownSelect(row: GtRow, column: GtRenderField<any, any>) {\r\n\t\tconst oldValue = { ...row };\r\n\t\trow[column.objectKey] = column.renderValue;\r\n\t\tthis.updateRow(row, oldValue);\r\n\t}\r\n\r\n\tprivate _editRow(row: GtRow, column: GtRenderField<any, any>) {\r\n\t\tconst OBJECT_KEY = column.objectKey; // declare object key which contains changes\r\n\r\n\t\t// check if cell has changed value\r\n\t\tcolumn.edited = row[column.objectKey] !== column.renderValue;\r\n\t\t// check if row contains changes...\r\n\t\tif (!this.editedRows[row.$$gtRowId]) {\r\n\t\t\t// if not, create an object for the changed row\r\n\t\t\tthis.editedRows[row.$$gtRowId] = {\r\n\t\t\t\tchanges: {}, // create placeholder for changes\r\n\t\t\t\trow: row // store reference to the row that should be updated\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// store changed column under changes if it has been edited\r\n\t\tif (column.edited) {\r\n\t\t\tthis.editedRows[row.$$gtRowId].changes[OBJECT_KEY] = column;\r\n\t\t} else {\r\n\t\t\t// delete change object if column is unchanged\r\n\t\t\tdelete this.editedRows[row.$$gtRowId].changes[OBJECT_KEY];\r\n\t\t\t// check how many columns have been changed\r\n\t\t\tconst CHANGED_COLUMNS = Object.keys(\r\n\t\t\t\tthis.editedRows[row.$$gtRowId].changes\r\n\t\t\t).length;\r\n\t\t\tif (CHANGED_COLUMNS === 0) {\r\n\t\t\t\t// delete row from edited rows if no columns have been edited\r\n\t\t\t\tdelete this.editedRows[row.$$gtRowId];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if no listener is present...\r\n\t\tif (!this.globalInlineEditListener) {\r\n\t\t\t// ...listen for update event\r\n\t\t\tthis._listenForKeydownEvent();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Listen for key down event - listen for key down event during inline edit.\r\n\t */\r\n\tprivate _listenForKeydownEvent() {\r\n\t\t// add global listener for key down events\r\n\t\tthis.globalInlineEditListener = this.renderer.listen(\r\n\t\t\t'document',\r\n\t\t\t'keydown',\r\n\t\t\t$event => {\r\n\t\t\t\tswitch ($event.key) {\r\n\t\t\t\t\tcase 'Enter': // update data object\r\n\t\t\t\t\t\tthis.inlineEditUpdate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Escape': // cancel\r\n\t\t\t\t\t\tthis.inlineEditCancel();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t/**\r\n\t * Inline edit update - accept changes and update row values.\r\n\t */\r\n\tpublic inlineEditUpdate() {\r\n\t\t// loop through rows that have been edited\r\n\t\tObject.keys(this.editedRows).map(key => {\r\n\t\t\tconst ROW = this.editedRows[key].row; // row to update\r\n\t\t\tconst CHANGES = this.editedRows[key].changes; // changes to the row\r\n\r\n\t\t\t// loop through changes in row\r\n\t\t\tObject.keys(CHANGES).map(objectKey => {\r\n\t\t\t\tconst oldValue = { ...ROW };\r\n\t\t\t\tROW[objectKey] = CHANGES[objectKey].renderValue; // update data value\r\n\t\t\t\tthis.updateRow(ROW, oldValue); // update meta info for row and send event\r\n\t\t\t\tCHANGES[objectKey].edited = false; // disable edit mode\r\n\t\t\t});\r\n\t\t});\r\n\t\t// clear rows marked as edited as the rows have been updated\r\n\t\tthis.editedRows = {};\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n\t/**\r\n\t * Inline edit cancel - cancel and reset inline edits.\r\n\t */\r\n\tpublic inlineEditCancel(row?: GtRow) {\r\n\t\tif (row) {\r\n\t\t\tdelete this.editedRows[row.$$gtRowId];\r\n\t\t\t// remove listener\r\n\t\t\tthis._stopListeningForKeydownEvent();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// loop through rows that have been edited\r\n\t\tObject.keys(this.editedRows).map(key => {\r\n\t\t\tconst ROW = this.editedRows[key].row; // row to update\r\n\t\t\tconst CHANGES = this.editedRows[key].changes; // changes to the row\r\n\r\n\t\t\t// loop through changes in row\r\n\t\t\tObject.keys(CHANGES).map(objectKey => {\r\n\t\t\t\tCHANGES[objectKey].renderValue = ROW[objectKey]; // reset rendered value\r\n\t\t\t\tCHANGES[objectKey].edited = false; // disable edit mode\r\n\t\t\t});\r\n\t\t});\r\n\t\t// clear rows marked as edited as the rows have been updated\r\n\t\tthis.editedRows = {};\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n\t/**\r\n\t * Stop listening for key down event - stop listening for key down events passed during inline edit.\r\n\t */\r\n\tprivate _stopListeningForKeydownEvent() {\r\n\t\tif (this.globalInlineEditListener) {\r\n\t\t\tthis.globalInlineEditListener();\r\n\t\t\tthis.globalInlineEditListener = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Apply filter(s).\r\n\t * @param filter - object containing key value pairs, where value should be array of values.\r\n\t */\r\n\tpublic gtApplyFilter(filter: Object) {\r\n\t\tthis.gtInfo.filter = filter;\r\n\t\t// go to first page\r\n\t\tthis.goToPage(1);\r\n\t\tthis.updateTotals();\r\n\t}\r\n\r\n\t/** Clear/remove applied filter(s). */\r\n\tpublic gtClearFilter() {\r\n\t\tthis.gtInfo.filter = false;\r\n\t\tthis.updateTotals();\r\n\t\t// this.updateRecordRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Search\r\n\t * @param value - string containing one or more words\r\n\t */\r\n\tpublic gtSearch(value: string) {\r\n\t\tthis.gtInfo.searchTerms = value;\r\n\t\t// always go to first page when searching\r\n\t\tthis.goToPage(1);\r\n\t\tthis.updateTotals();\r\n\t}\r\n\r\n\t/**\r\n\t * Add rows\r\n\t * @param rows - rows to add\r\n\t * @returns new data array.\r\n\t */\r\n\tpublic gtAdd(rows: Array<R>): ReadonlyArray<R> {\r\n\t\tthis.gtData = [...this.gtData, ...rows];\r\n\t\treturn [...this.gtData];\r\n\t}\r\n\r\n\t/**\r\n\t * Delete row\r\n\t * @param objectKey - object key you want to find match with\r\n\t * @param value - the value that should be deleted\r\n\t * @param match - all: delete all matches, first: delete first match (default)\r\n\t * @returns new data array.\r\n\t */\r\n\tpublic gtDelete(\r\n\t\tobjectKey: string,\r\n\t\tvalue: string | number,\r\n\t\tmatch: 'first' | 'all' = 'first'\r\n\t): ReadonlyArray<R> {\r\n\t\tif (match === 'first') {\r\n\t\t\tfor (let i = 0; i < this.gtData.length; i++) {\r\n\t\t\t\tif (this.gtData[i][objectKey] === value) {\r\n\t\t\t\t\tif (this.isRowSelected(this.gtData[i])) {\r\n\t\t\t\t\t\tthis.toggleSelect(this.gtData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.gtData.splice(i, 1);\r\n\t\t\t\t\tthis.gtData = [...this.gtData];\r\n\t\t\t\t\tif (match === 'first') {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = this.gtData.length; i > 0; i--) {\r\n\t\t\t\tif (this.gtData[i - 1][objectKey] === value) {\r\n\t\t\t\t\tif (this.isRowSelected(this.gtData[i - 1])) {\r\n\t\t\t\t\t\tthis.toggleSelect(this.gtData[i - 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.gtData.splice(i - 1, 1);\r\n\t\t\t\t\tthis.gtData = [...this.gtData];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [...this.gtData];\r\n\t}\r\n\r\n\t/**\r\n\t * Create store to hold previously loaded records.\r\n\t * @param records - total number of records in store.\r\n\t * @param perPage - how many records to show per page.\r\n\t * @returns a nested array to hold records per page.\r\n\t */\r\n\tprivate createStore(records: number, perPage: number): Array<Array<any>> {\r\n\t\tconst stores = Math.ceil(records / perPage);\r\n\t\tconst store: Array<Array<any>> = [];\r\n\t\tfor (let i = 0; i < stores; i++) {\r\n\t\t\tstore[i] = [];\r\n\t\t}\r\n\t\treturn store;\r\n\t}\r\n\r\n\t/**\r\n\t * Create placeholders for rows while loading data from back-end.\r\n\t * @param perPage - how many records to show per page.\r\n\t * @returns an array containing empty records to be presented while fetching real data.\r\n\t */\r\n\tprivate loadingContent(perPage: number) {\r\n\t\t// create row object\r\n\t\tconst rowObject: Object = {\r\n\t\t\t$$loading: true\r\n\t\t};\r\n\t\tlet order = 0;\r\n\r\n\t\t// sort settings by column order\r\n\t\tthis._gtSettings.sort(this.getColumnOrder);\r\n\r\n\t\t// loop through all settings objects...\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t// ...if column is visible and enabled...\r\n\t\t\tif (setting.visible !== false && setting.enabled !== false) {\r\n\t\t\t\t// ...if first column, set value to loading text otherwise leave it empty\r\n\t\t\t\tif (order === 0) {\r\n\t\t\t\t\trowObject[setting.objectKey] = this.gtTexts.loading;\r\n\t\t\t\t\tthis.loadingProperty = setting.objectKey;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trowObject[setting.objectKey] = '';\r\n\t\t\t\t}\r\n\t\t\t\torder++;\r\n\t\t\t} else {\r\n\t\t\t\trowObject[setting.objectKey] = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// create content placeholder\r\n\t\tconst contentPlaceholder: Array<any> = [];\r\n\r\n\t\t// create equal number of rows as rows per page\r\n\t\tfor (let i = 0; i < perPage; i++) {\r\n\t\t\t// ...add temporary row object\r\n\t\t\tcontentPlaceholder.push(rowObject);\r\n\t\t}\r\n\t\treturn contentPlaceholder;\r\n\t}\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by sort order */\r\n\tprivate getSortOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.sortOrder < b.sortOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.sortOrder > b.sortOrder || typeof a.sortOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.columnOrder === undefined) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Create a deep copy of data */\r\n\tprivate cloneDeep = function(o: any) {\r\n\t\treturn JSON.parse(JSON.stringify(o));\r\n\t};\r\n\r\n\t/** Export data as CSV\r\n\t * @param fileName - optional file name (overrides default file name).\r\n\t * @param useBOM - use BOM (byte order marker).\r\n\t */\r\n\tpublic exportCSV(fileName?: string, useBOM: boolean = false) {\r\n\t\tconst data = this.data.exportData;\r\n\t\tlet csv = '';\r\n\t\tconst BOM = '\\uFEFF';\r\n\r\n\t\t// csv export headers\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].export !== false) {\r\n\t\t\t\tcsv += this.getProperty(this._gtFields, this._gtSettings[i].objectKey)\r\n\t\t\t\t\t.name;\r\n\r\n\t\t\t\tif (i < this._gtSettings.length - 1) {\r\n\t\t\t\t\tcsv += this._gtOptions.csvDelimiter;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// csv export body\r\n\t\tdata.forEach(row => {\r\n\t\t\tcsv += '\\n';\r\n\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\tif (this._gtSettings[i].export !== false) {\r\n\t\t\t\t\t// get field settings\r\n\t\t\t\t\tconst fieldSetting = this.getProperty(\r\n\t\t\t\t\t\tthis._gtFields,\r\n\t\t\t\t\t\tthis._gtSettings[i].objectKey\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// get export value, if export function is defined use it otherwise check for value function and as a last resort export raw data\r\n\t\t\t\t\tlet exportValue: string =\r\n\t\t\t\t\t\tfieldSetting.export && typeof fieldSetting.export === 'function'\r\n\t\t\t\t\t\t\t? fieldSetting.export(row)\r\n\t\t\t\t\t\t\t: fieldSetting.value && typeof fieldSetting.value === 'function'\r\n\t\t\t\t\t\t\t\t? fieldSetting.value(row)\r\n\t\t\t\t\t\t\t\t: row[this._gtSettings[i].objectKey];\r\n\r\n\t\t\t\t\t// escape export value using double quotes (\") if export value contains delimiter\r\n\t\t\t\t\texportValue =\r\n\t\t\t\t\t\ttypeof exportValue === 'string' &&\r\n\t\t\t\t\t\texportValue.indexOf(this._gtOptions.csvDelimiter) !== -1\r\n\t\t\t\t\t\t\t? '\"' + exportValue + '\"'\r\n\t\t\t\t\t\t\t: exportValue;\r\n\r\n\t\t\t\t\tcsv += exportValue;\r\n\t\t\t\t\tif (i < this._gtSettings.length - 1) {\r\n\t\t\t\t\t\tcsv += this._gtOptions.csvDelimiter;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst blob = new Blob([(useBOM ? BOM : '') + csv], {\r\n\t\t\ttype: 'text/csv;charset=utf-8'\r\n\t\t});\r\n\r\n\t\tif (window.navigator.msSaveOrOpenBlob) {\r\n\t\t\tnavigator.msSaveOrOpenBlob(\r\n\t\t\t\tblob,\r\n\t\t\t\tfileName ? fileName + '.csv' : this.gtTexts.csvDownload + '.csv'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst link = document.createElement('a');\r\n\t\t\tlink.style.display = 'none';\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tif (link.download !== undefined) {\r\n\t\t\t\tlink.setAttribute(\r\n\t\t\t\t\t'href',\r\n\t\t\t\t\t'data:text/csv;charset=utf-8,' +\r\n\t\t\t\t\t\tencodeURIComponent((useBOM ? BOM : '') + csv)\r\n\t\t\t\t); // URL.createObjectURL(blob));\r\n\t\t\t\tlink.setAttribute(\r\n\t\t\t\t\t'download',\r\n\t\t\t\t\tfileName ? fileName + '.csv' : this.gtTexts.csvDownload + '.csv'\r\n\t\t\t\t);\r\n\t\t\t\tdocument.body.appendChild(link);\r\n\t\t\t\tlink.click();\r\n\t\t\t} else {\r\n\t\t\t\tcsv = 'data:text/csv;charset=utf-8,' + (useBOM ? BOM : '') + csv;\r\n\t\t\t\twindow.open(encodeURIComponent(csv));\r\n\t\t\t}\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t}\r\n\r\n\t\t// emit export event\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-exported-csv',\r\n\t\t\tvalue: fileName ? fileName : this.gtTexts.csvDownload + '.csv'\r\n\t\t});\r\n\t}\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate restructureSorting = function() {\r\n\t\t/** Check and store sort order upon initialization.\r\n\t\t *  This is done by checking sort properties in the settings array of the table, if no sorting is defined\r\n\t\t *  we'll sort the data by the first visible and enabled column in the table(ascending). Please note that actually\r\n\t\t *  sorting have to be done server side when lazy loading data for obvious reasons.  */\r\n\t\t// create sorting array\r\n\t\tconst sorting = [];\r\n\t\tif (this._gtSettings) {\r\n\t\t\t// ...sort settings by sort order\r\n\t\t\tthis._gtSettings.sort(this.getSortOrder);\r\n\r\n\t\t\t// ...loop through settings\r\n\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t\t// ...if sorted ascending...\r\n\t\t\t\tif (setting.sort === 'asc') {\r\n\t\t\t\t\t// ... add to sorting\r\n\t\t\t\t\tsorting.push(setting.objectKey);\r\n\t\t\t\t} else if (setting.sort === 'desc') {\r\n\t\t\t\t\t/* ...else if sorted descending... */ // ... add to sorting\r\n\t\t\t\t\tsorting.push('-' + setting.objectKey);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...if no sorting applied...\r\n\t\t\tif (sorting.length === 0) {\r\n\t\t\t\tsorting.push('$$gtRowId');\r\n\t\t\t\t/*// ...sort settings by column order\r\n\t\t\t\tthis._gtSettings.sort(this.getColumnOrder);\r\n\r\n\t\t\t\t// ...loop through settings\r\n\t\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t\t\t// ...if column is enabled and visible...\r\n\t\t\t\t\tif (setting.enabled !== false && setting.visible !== false) {\r\n\t\t\t\t\t\t// ...add first match and exit function\r\n\t\t\t\t\t\tthis.sortOrder = [this._gtSettings[i].objectKey];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.sortOrder.length === 0) {\r\n\t\t\tthis.sortOrder = sorting;\r\n\t\t}\r\n\t};\r\n\r\n\tngOnInit() {\r\n\t\t// if number of row to display from start is set to null or 0...\r\n\t\tif (!this.gtOptions.numberOfRows) {\r\n\t\t\t// ...change row length\r\n\t\t\tthis.changeRowLength(this.gtOptions.numberOfRows);\r\n\t\t}\r\n\t\tthis.restructureSorting();\r\n\t}\r\n\r\n\t/**\r\n\t *  Extend object function.\r\n\t */\r\n\tprivate extend = function(a: Object, b: Object) {\r\n\t\tfor (const key in b) {\r\n\t\t\tif (b.hasOwnProperty(key)) {\r\n\t\t\t\ta[key] = b[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\t// if gt texts have changed...\r\n\t\tif (changes['gtTexts']) {\r\n\t\t\t// ...extend gtOptions default values with values passed into component\r\n\t\t\tthis.gtTexts = <GtTexts>this.extend(this.gtDefaultTexts, this.gtTexts);\r\n\t\t}\r\n\r\n\t\t// if lazy loading data and paging information is available...\r\n\t\tif (this.gtOptions.lazyLoad && this.gtInfo) {\r\n\t\t\t// ...calculate total number of pages\r\n\t\t\tthis.gtInfo.pageTotal = Math.ceil(\r\n\t\t\t\tthis.gtInfo.recordsAfterSearch / this.gtInfo.recordLength\r\n\t\t\t);\r\n\r\n\t\t\t// ...declare store position\r\n\t\t\tconst storePosition = this.gtInfo.pageCurrent - 1;\r\n\r\n\t\t\t// ...and if store is empty or page length has changed...\r\n\t\t\tif (\r\n\t\t\t\tthis.store.length === 0 ||\r\n\t\t\t\tthis.store[0].length !== this.gtInfo.recordLength\r\n\t\t\t) {\r\n\t\t\t\t// ...create store\r\n\t\t\t\tthis.store = this.createStore(\r\n\t\t\t\t\tthis.gtInfo.recordsAfterSearch,\r\n\t\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// ...store retrieved data in store at store position\r\n\t\t\tthis.store[storePosition] = this.gtData;\r\n\t\t\tthis.gtInfo.visibleRecords = [...this.gtData]; // add visible rows\r\n\r\n\t\t\t// replace data with store\r\n\t\t\tthis._gtData = this.store;\r\n\t\t\tthis.loading = false;\r\n\t\t\tthis.updateRecordRange();\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-info',\r\n\t\t\t\tvalue: this.gtInfo\r\n\t\t\t});\r\n\t\t} else if (\r\n\t\t\tthis._gtData &&\r\n\t\t\tthis._gtData.length >= 0 &&\r\n\t\t\tchanges['gtData'] &&\r\n\t\t\tchanges['gtData'].previousValue\r\n\t\t) {\r\n\t\t\tthis.loading = false;\r\n\t\t} else if (\r\n\t\t\tchanges['gtData'] &&\r\n\t\t\tchanges['gtData'].firstChange &&\r\n\t\t\tthis._gtData &&\r\n\t\t\tthis._gtData.length > 0\r\n\t\t) {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\ttrackByFn(index: number, item: GtRow) {\r\n\t\treturn item.$$gtRowId;\r\n\t}\r\n\r\n\ttrackByColumnFn(index: number, item: GtConfigField<any, any>) {\r\n\t\treturn item.objectKey;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tChangeDetectorRef,\r\n\tAfterViewChecked,\r\n\tInput\r\n} from '@angular/core';\r\nimport { GenericTableComponent } from './generic-table.component';\r\n\r\n@Component({\r\n\tselector: 'gt-table-info',\r\n\ttemplate: `<span *ngIf=\"genericTable.gtInfo\">{{(customText? customText:genericTable.gtTexts) | gtTableInfo:\r\n\t\tgenericTable.gtInfo:\r\n\t\tgenericTable.gtInfo.recordsAfterSearch:\r\n\t\tgenericTable.gtInfo.recordFrom:\r\n\t\tgenericTable.gtInfo.recordTo:\r\n\t\tgenericTable.gtInfo.recordsAll:\r\n\t\tgenericTable.gtTexts.loading:\r\n\t\tgenericTable.gtTexts.tableInfoAfterSearch}}</span>`\r\n})\r\nexport class GtTableInfoComponent implements AfterViewChecked {\r\n\t@Input() genericTable: GenericTableComponent<any, any>;\r\n\t@Input() customText: string;\r\n\r\n\tconstructor(private _changeDetectionRef: ChangeDetectorRef) {}\r\n\r\n\tngAfterViewChecked() {\r\n\t\tthis._changeDetectionRef.detectChanges();\r\n\t}\r\n}\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\nimport { GtTexts } from '../interfaces/gt-texts';\r\n\r\n@Pipe({\r\n\tname: 'gtTableInfo'\r\n})\r\nexport class TableInfoPipe implements PipeTransform {\r\n\ttransform(\r\n\t\ttexts: GtTexts | string,\r\n\t\tkeys: GtInformation,\r\n\t\trecordsAfterSearch: number,\r\n\t\trecordFrom: number,\r\n\t\trecordTo: number,\r\n\t\trecordsAll: number,\r\n\t\tloading: string,\r\n\t\ttableInfoAfterSearch: string\r\n\t): string {\r\n\t\tlet text = typeof texts === 'object' ? texts.tableInfo : '';\r\n\t\tif (keys.recordsAfterSearch !== keys.recordsAll) {\r\n\t\t\ttext = typeof texts === 'object' ? texts.tableInfoAfterSearch : '';\r\n\t\t}\r\n\t\tfor (const key in keys) {\r\n\t\t\tif (keys.hasOwnProperty(key)) {\r\n\t\t\t\tconst searchString = new RegExp('#' + key, 'g');\r\n\t\t\t\ttext = text.replace(searchString, keys[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GenericTableComponent } from './generic-table.component';\r\n\r\n@Component({\r\n\tselector: 'gt-pagination',\r\n\ttemplate: `<nav class=\"gt-pagination\" aria-label=\"Table navigation\" *ngIf=\"genericTable && genericTable.gtInfo && ready && genericTable.gtData?.length > 0\" [ngClass]=\"{'no-data':genericTable.gtInfo.pageTotal === 0}\">\r\n  <ul class=\"pagination\" [ngClass]=\"gtClasses\">\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.gtInfo.pageCurrent === 1 || genericTable.loading }\"><a class=\"page-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent > 1 && genericTable.previousPage()\" [attr.aria-label]=\"genericTable.gtTexts.paginatePrevious\"><span aria-hidden=\"true\">&laquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginatePrevious}}</span></a></li>\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.loading && genericTable.gtInfo.pageCurrent !== page, 'active' : genericTable.gtInfo.pageCurrent === page }\" *ngFor=\"let page of genericTable.gtInfo.pageTotal | gtPaginationPipe:genericTable.gtInfo.pageCurrent\"><a class=\"page-link\" [tabindex]=\"page === true ? -1:0\" href=\"javascript:void(0);\" (click)=\"page === true ? '':genericTable.goToPage(page)\">{{page === true ? '&hellip;':page}}</a></li>\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.gtInfo.pageCurrent === genericTable.gtInfo.pageTotal || genericTable.loading }\"><a class=\"page-link gt-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent !== genericTable.gtInfo.pageTotal && genericTable.nextPage()\" [attr.aria-label]=\"genericTable.gtTexts.paginateNext\"><span aria-hidden=\"true\">&raquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginateNext}}</span></a></li>\r\n  </ul>\r\n  </nav>\r\n    `,\r\n\tstyles: ['.gt-link {cursor: pointer;}']\r\n})\r\nexport class GtPaginationComponent {\r\n\tget genericTable(): GenericTableComponent<any, any> {\r\n\t\treturn this._genericTable;\r\n\t}\r\n\r\n\t@Input()\r\n\tset genericTable(value: GenericTableComponent<any, any>) {\r\n\t\tif (value) {\r\n\t\t\tvalue.gtEvent.subscribe((res: any) => {\r\n\t\t\t\tif (res.name === 'gt-info' && res.value.pageTotal > 0) {\r\n\t\t\t\t\tthis.ready = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._genericTable = value;\r\n\t}\r\n\r\n\tprivate _genericTable: GenericTableComponent<any, any>;\r\n\t@Input() gtClasses: string;\r\n\tpublic ready = false;\r\n}\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'gtPaginationPipe'\r\n})\r\nexport class PaginationPipe implements PipeTransform {\r\n\ttransform(totalPages: number, currentPage: number): Array<any> {\r\n\t\tif (totalPages === 0) {\r\n\t\t\treturn [1];\r\n\t\t}\r\n\t\tconst pagination: Array<any> = []; // create new empty array for pagination\r\n\t\tconst siblings = 2; // sibling elements ie. number of elements on each side of current page\r\n\t\tconst paginationLength =\r\n\t\t\ttotalPages < siblings * 2 + 1 ? totalPages : siblings * 2 + 1; // number of elements in pagination array\r\n\t\tconst start = currentPage <= siblings ? 1 : currentPage - siblings; // starting position for array\r\n\t\tconst modifier =\r\n\t\t\ttotalPages - (currentPage + siblings) <= 0\r\n\t\t\t\t? totalPages - (currentPage + siblings)\r\n\t\t\t\t: 0; // modifier for pagination values\r\n\t\tconst modifiedPosition = start + modifier <= 0 ? 1 : start + modifier;\r\n\r\n\t\t// push pages to pagination array\r\n\t\tfor (let i = 0; i < paginationLength; i++) {\r\n\t\t\tpagination.push(modifiedPosition + i);\r\n\t\t}\r\n\r\n\t\t// if first page is not included in pagination...\r\n\t\tif (pagination.indexOf(1) === -1) {\r\n\t\t\t// ...check if second page is in pagination...\r\n\t\t\tif (pagination.indexOf(2) === -1) {\r\n\t\t\t\t// ...if not check if total number of pages equals seven and number of siblings are two...\r\n\t\t\t\tif (totalPages === 7 && siblings === 2) {\r\n\t\t\t\t\t// ...add second page and don't convert page number to ellipsis\r\n\t\t\t\t\tpagination.unshift(2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ...if not, use this placeholder for ellipsis instead of actual page number\r\n\t\t\t\t\tpagination[0] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...add first page as first array item\r\n\t\t\tpagination.unshift(1);\r\n\t\t} else if (totalPages > paginationLength) {\r\n\t\t\t// if first page is included add extra page to keep number of items consistent\r\n\t\t\tpagination.splice(paginationLength, 0, paginationLength + 1);\r\n\t\t}\r\n\t\t// check if last page is included in pagination...\r\n\t\tif (pagination.indexOf(totalPages) === -1) {\r\n\t\t\t// ...if not, page next to last should either show ellipsis or actual page number for the page\r\n\t\t\tpagination[pagination.length - 1] =\r\n\t\t\t\tpagination[pagination.length - 1] === totalPages - 1\r\n\t\t\t\t\t? totalPages - 1\r\n\t\t\t\t\t: true;\r\n\r\n\t\t\t// ...add last page to pagination\r\n\t\t\tpagination.push(totalPages);\r\n\t\t}\r\n\r\n\t\treturn pagination;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GtExpandedRow } from './gt-expanding-row.component';\r\n\r\n@Component({\r\n\tselector: 'gt-drilldown',\r\n\ttemplate: `\r\n      <table class=\"table\">\r\n          <tr *ngFor=\"let row of data\" (click)=\"$rowClick(row, $event)\">\r\n              <!--<td *ngFor=\"let column of gtSettings\" [style.width]=\"columnWidth[column.objectKey]\">{{column.objectKey}}</td>-->\r\n              <td *ngFor=\"let column of row | gtRender:gtSettings:gtFields:null:null:gtOptions.highlightSearch:gtInfo.searchTerms;\"\r\n                  ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{(gtFields | gtProperty:column.objectKey:'inlineEdit') ? 'gt-inline-edit':''}} {{column.edited ? 'gt-edited':''}} {{ gtFields | gtColumnClass:row:column }}\" [style.width]=\"columnWidth[column.objectKey]\" [style.max-width]=\"columnWidth[column.objectKey]\">\r\n                        <span class=\"gt-row-label\"\r\n                              *ngIf=\"gtOptions.stack\">{{(gtFields | gtProperty:column.objectKey:'stackedHeading') ? (gtFields | gtProperty:column.objectKey:'stackedHeading') : (gtFields | gtProperty:column.objectKey:'name')}}</span>\r\n                  <gt-custom-component-factory *ngIf=\"column.columnComponent\" class=\"gt-row-content\"\r\n                                               [type]=\"column.columnComponent.type\"\r\n                                               [injector]=\"column.columnComponent.injector\" [row]=\"row\"\r\n                                               [column]=\"column\" (redrawEvent)=\"$redraw($event)\"\r\n                                               (click)=\"column.click ? column.click(row,column,$event):'';\"></gt-custom-component-factory>\r\n                  <span *ngIf=\"!column.columnComponent\"\r\n                        class=\"gt-row-content\" [innerHTML]=\"column.renderValue\"\r\n                        (click)=\"column.click ? column.click(row,column,$event):''\"></span>\r\n              </td>\r\n\r\n          </tr>\r\n      </table>\r\n  `,\r\n\tstyles: []\r\n})\r\nexport class GtDrilldownComponent extends GtExpandedRow<any> implements OnInit {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n\tname: 'gtHighlight'\r\n})\r\nexport class GtHighlightPipe implements PipeTransform {\r\n\tconstructor(private sanitizer: DomSanitizer) {}\r\n\r\n\ttransform(text: string, searchTerm: string): SafeHtml {\r\n\t\tconst haystackAlwaysString = text + '';\r\n\t\tlet highlightedText = haystackAlwaysString; // fallback\r\n\r\n\t\tlet searchPattern;\r\n\t\ttry {\r\n\t\t\tsearchPattern = new RegExp(\r\n\t\t\t\t'(' +\r\n\t\t\t\tsearchTerm\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.match(/\".*?\"|[^ ]+/g) // extract words\r\n\t\t\t\t\t.map(\r\n\t\t\t\t\t\tneedle => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.join('|') + // combine words\r\n\t\t\t\t\t')',\r\n\t\t\t\t'ig'\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(highlightedText);\r\n\t\t}\r\n\r\n\t\tconst containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\r\n\t\tconst containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\r\n\r\n\t\tif (containsTagMatches) {\r\n\t\t\t// tag exists in haystack\r\n\t\t\thighlightedText =\r\n\t\t\t\tcontainsTagMatches[1] +\r\n\t\t\t\tcontainsTagMatches[2].replace(\r\n\t\t\t\t\tsearchPattern,\r\n\t\t\t\t\t'<span class=\"gt-highlight-search\">$1</span>'\r\n\t\t\t\t) +\r\n\t\t\t\tcontainsTagMatches[3];\r\n\t\t} else {\r\n\t\t\thighlightedText = haystackAlwaysString.replace(\r\n\t\t\t\tsearchPattern,\r\n\t\t\t\t'<span class=\"gt-highlight-search\">$1</span>'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(highlightedText);\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtRenderField } from '../interfaces/gt-render-field';\r\nimport { GtHighlightPipe } from './gt-highlight.pipe';\r\n\r\n@Pipe({\r\n\tname: 'gtRender'\r\n})\r\nexport class GtRenderPipe<R extends GtRow> implements PipeTransform {\r\n\tconstructor(\r\n\t\tprivate sanitizer: DomSanitizer,\r\n\t\tprivate gtHighlightPipe: GtHighlightPipe\r\n\t) {}\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder || typeof a.columnOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t/** Sort by length */\r\n\tprivate getOrderByLength = function(a: any, b: any) {\r\n\t\treturn b.length - a.length;\r\n\t};\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\ttransform(\r\n\t\trow: any,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\tfields: Array<GtConfigField<R, any>>,\r\n\t\tupdated: boolean,\r\n\t\tloading: boolean,\r\n\t\thighlight: boolean = false,\r\n\t\tsearchString?: string\r\n\t): Array<GtRenderField<R, any>> {\r\n\t\t// let arr = [{\"temp\":123,\"name\":\"happy\"},{\"temp\":456,\"name\":\"dfgdfg\"},{\"temp\":789,\"name\":\"asdasd\"}];\r\n\t\t// console.log(arr,arr.map(function(item){return item.temp}));\r\n\t\t// console.log(settings.map('objectKey'));\r\n\r\n\t\t// console.log('render');\r\n\t\tconst columns: Array<string> = [];\r\n\t\tfor (let i = 0; i < settings.length; i++) {\r\n\t\t\tif (settings[i].visible !== false && settings[i].enabled !== false) {\r\n\t\t\t\tcolumns.push(settings[i].objectKey);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\t// console.log(!row[fields[i].objectKey]);\r\n\t\t\tif (\r\n\t\t\t\tfields[i].value &&\r\n\t\t\t\ttypeof fields[i].value === 'function' &&\r\n\t\t\t\t!row.hasOwnProperty(fields[i].objectKey)\r\n\t\t\t) {\r\n\t\t\t\trow[fields[i].objectKey] = loading ? '' : fields[i].value(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(row);\r\n\t\tconst keys: Array<any> = [];\r\n\t\tfor (const key in row) {\r\n\t\t\t// console.log(key);\r\n\t\t\tif (columns.indexOf(key) !== -1) {\r\n\t\t\t\tlet fieldSetting;\r\n\t\t\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\t\t\tif (fields[i].objectKey === key) {\r\n\t\t\t\t\t\tfieldSetting = fields[i];\r\n\t\t\t\t\t\t// console.log(fieldSetting);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst columnObject: GtRenderField<R, any> = {\r\n\t\t\t\t\tobjectKey: key,\r\n\t\t\t\t\tsortValue: row[key]\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// add component if defined\r\n\t\t\t\tif (fieldSetting.columnComponent) {\r\n\t\t\t\t\tcolumnObject.columnComponent = fieldSetting.columnComponent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (loading) {\r\n\t\t\t\t\tcolumnObject.renderValue = row[key] !== null ? row[key] : '';\r\n\t\t\t\t} else if (\r\n\t\t\t\t\thighlight &&\r\n\t\t\t\t\tsearchString &&\r\n\t\t\t\t\tthis.getProperty(settings, key).search !== false\r\n\t\t\t\t) {\r\n\t\t\t\t\tcolumnObject.renderValue =\r\n\t\t\t\t\t\tfieldSetting.render && typeof fieldSetting.render === 'function'\r\n\t\t\t\t\t\t\t? this.gtHighlightPipe.transform(\r\n\t\t\t\t\t\t\t\t\tfieldSetting.render(row),\r\n\t\t\t\t\t\t\t\t\tsearchString\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t: this.gtHighlightPipe.transform(\r\n\t\t\t\t\t\t\t\t\trow[key] !== null ? row[key] : '',\r\n\t\t\t\t\t\t\t\t\tsearchString\r\n\t\t\t\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcolumnObject.renderValue =\r\n\t\t\t\t\t\tfieldSetting.render && typeof fieldSetting.render === 'function'\r\n\t\t\t\t\t\t\t? this.sanitizer.bypassSecurityTrustHtml(fieldSetting.render(row))\r\n\t\t\t\t\t\t\t: row[key] !== null\r\n\t\t\t\t\t\t\t\t? row[key]\r\n\t\t\t\t\t\t\t\t: '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fieldSetting.click && typeof fieldSetting.click === 'function') {\r\n\t\t\t\t\tcolumnObject.click = fieldSetting.click;\r\n\t\t\t\t}\r\n\t\t\t\tif (fieldSetting.expand) {\r\n\t\t\t\t\tcolumnObject.expand = fieldSetting.expand;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.push(columnObject);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tkeys.sort(function(a: any, b: any) {\r\n\t\t\treturn columns.indexOf(a.objectKey) < columns.indexOf(b.objectKey)\r\n\t\t\t\t? -1\r\n\t\t\t\t: 1;\r\n\t\t});\r\n\t\treturn keys;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtVisible'\r\n})\r\nexport class GtVisiblePipe<R extends GtRow> implements PipeTransform {\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: any, b: any) {\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder || typeof a.columnOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\ttransform(\r\n\t\tarray: Array<any>,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\trefreshPipe?: boolean\r\n\t): Array<GtConfigField<R, any>> | Array<GtConfigSetting> {\r\n\t\tconst visibleColumns = settings\r\n\t\t\t.sort(this.getColumnOrder)\r\n\t\t\t.map((setting: GtConfigSetting) => {\r\n\t\t\t\tif (setting.visible !== false && setting.enabled !== false) {\r\n\t\t\t\t\treturn setting.objectKey;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn array\r\n\t\t\t.filter((column: any) => {\r\n\t\t\t\treturn visibleColumns.indexOf(column.objectKey) !== -1;\r\n\t\t\t})\r\n\t\t\t.sort(function(a, b) {\r\n\t\t\t\treturn visibleColumns.indexOf(a.objectKey) <\r\n\t\t\t\t\tvisibleColumns.indexOf(b.objectKey)\r\n\t\t\t\t\t? -1\r\n\t\t\t\t\t: 1;\r\n\t\t\t});\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'dashCase'\r\n})\r\nexport class DashCasePipe implements PipeTransform {\r\n\ttransform(string: string): string {\r\n\t\treturn string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtProperty'\r\n})\r\nexport class GtPropertyPipe<R extends GtRow> implements PipeTransform {\r\n\ttransform(\r\n\t\tconfig: GtConfigField<R, any>[] | GtConfigSetting[],\r\n\t\tobjectKey: string,\r\n\t\tproperty: string,\r\n\t\trefresh?: boolean\r\n\t): any {\r\n\t\tlet output = null;\r\n\t\ttry {\r\n\t\t\tfor (let i = 0; i < config.length; i++) {\r\n\t\t\t\tif (config[i].objectKey === objectKey) {\r\n\t\t\t\t\toutput = config[i][property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'cannot read property: \"' +\r\n\t\t\t\t\tproperty +\r\n\t\t\t\t\t'\" on missing key: \"' +\r\n\t\t\t\t\tobjectKey +\r\n\t\t\t\t\t'\" in config.',\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform, EventEmitter } from '@angular/core';\r\nimport { GtInformation, GtEvent } from '..';\r\n\r\n@Pipe({\r\n\tname: 'gtChunk'\r\n})\r\nexport class GtChunkPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tarray: any[],\r\n\t\tgtInfo: GtInformation,\r\n\t\tchunkSize: number,\r\n\t\tpage: number,\r\n\t\trefreshPageArray: boolean,\r\n\t\trefreshData: number,\r\n\t\tgtEvent: EventEmitter<GtEvent>,\r\n\t\tdata: { exportData: Array<any> }\r\n\t): any[] {\r\n\t\tif (!Array.isArray(array)) {\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\tdata.exportData = array; // store data for export\r\n\r\n\t\tconst PAGES = [];\r\n\t\tconst ENTRIES = array.length;\r\n\r\n\t\tfor (let i = 0; i < ENTRIES; i += chunkSize) {\r\n\t\t\tPAGES.push(array.slice(i, i + chunkSize));\r\n\t\t}\r\n\t\tgtInfo.visibleRecords = !PAGES[page - 1] ? [] : [...PAGES[page - 1]]; // add visible rows\r\n\t\tgtInfo.pageTotal = PAGES.length; // add number of pages\r\n\r\n\t\tsetTimeout(\r\n\t\t\t() =>\r\n\t\t\t\tgtEvent.emit({\r\n\t\t\t\t\tname: 'gt-info',\r\n\t\t\t\t\tvalue: gtInfo\r\n\t\t\t\t}),\r\n\t\t\t0\r\n\t\t);\r\n\t\treturn PAGES[page - 1];\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform, EventEmitter, Output } from '@angular/core';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\n\r\n@Pipe({\r\n\tname: 'gtFilter'\r\n})\r\nexport class GtFilterPipe implements PipeTransform {\r\n\t// @Output() filterInfo = new EventEmitter();\r\n\r\n\ttransform(\r\n\t\tallRows: any[],\r\n\t\tfilterBy: Object,\r\n\t\tgtInfo: GtInformation,\r\n\t\trefreshFilter: boolean,\r\n\t\trefreshData: number\r\n\t): any[] {\r\n\t\t// console.log(allRows,filterBy);\r\n\t\tgtInfo.recordsAll = allRows.length;\r\n\t\tif (!Array.isArray(allRows) || !filterBy) {\r\n\t\t\t// gtInfo.filtered = false;\r\n\r\n\t\t\tconst length = allRows === null ? 0 : allRows.length;\r\n\t\t\tgtInfo.recordsAfterFilter = length;\r\n\t\t\treturn allRows;\r\n\t\t}\r\n\r\n\t\tconst output = [];\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tconst rowObject = allRows[i];\r\n\t\t\tlet match = true;\r\n\r\n\t\t\tfor (const property in filterBy) {\r\n\t\t\t\tif (filterBy.hasOwnProperty(property)) {\r\n\t\t\t\t\t// console.log(property);\r\n\t\t\t\t\t// console.log(filter[property].indexOf(obj[property]));\r\n\t\t\t\t\tif (filterBy[property].indexOf(rowObject[property]) === -1) {\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (match) {\r\n\t\t\t\toutput.push(rowObject);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgtInfo.recordsAfterFilter = output.length; // .emit(output.length);\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtOrderBy'\r\n})\r\nexport class GtOrderByPipe<R extends GtRow> implements PipeTransform {\r\n\tstatic _orderByComparator(a: any, b: any): number {\r\n\t\t// sort boolean values as strings\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\ta = a.toString();\r\n\t\t}\r\n\t\tif (typeof b === 'boolean') {\r\n\t\t\tb = b.toString();\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tisNaN(parseFloat(a)) ||\r\n\t\t\t!isFinite(a) ||\r\n\t\t\t(isNaN(parseFloat(b)) || !isFinite(b))\r\n\t\t) {\r\n\t\t\tif (\r\n\t\t\t\tb === null ||\r\n\t\t\t\t(typeof b === 'undefined' && (a !== null && typeof a !== 'undefined'))\r\n\t\t\t) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\ta === null ||\r\n\t\t\t\t(typeof a === 'undefined' && (b !== null && typeof b !== 'undefined'))\r\n\t\t\t) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\t// isn't a number so lowercase the string to properly compare\r\n\t\t\ttry {\r\n\t\t\t\tif (a.toLowerCase() < b.toLowerCase()) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (a.toLowerCase() > b.toLowerCase()) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// parse strings as numbers to compare properly\r\n\t\t\tif (parseFloat(a) < parseFloat(b)) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (parseFloat(a) > parseFloat(b)) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0; // equal each other\r\n\t}\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/** Return sort function */\r\n\tprivate getSortFunction(field: any) {\r\n\t\tif (!field) {\r\n\t\t\t// console.log('error trying to sort undefined field');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (typeof field.sort === 'function') {\r\n\t\t\treturn field.sort;\r\n\t\t} else if (typeof field.value === 'function') {\r\n\t\t\treturn field.value;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\ttransform(\r\n\t\tinput: any,\r\n\t\tsortByProperties: Array<string>,\r\n\t\tfields: GtConfigField<R, any>[],\r\n\t\trefreshSorting: boolean,\r\n\t\trefreshData: number\r\n\t): any {\r\n\t\tif (!Array.isArray(input) || input === null) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\tif (\r\n\t\t\t!Array.isArray(sortByProperties) ||\r\n\t\t\t(Array.isArray(sortByProperties) && sortByProperties.length === 1)\r\n\t\t) {\r\n\t\t\tconst propertyToCheck: string = sortByProperties[0];\r\n\t\t\tconst desc = propertyToCheck.substr(0, 1) === '-';\r\n\r\n\t\t\t// basic array\r\n\t\t\tif (\r\n\t\t\t\t!propertyToCheck ||\r\n\t\t\t\tpropertyToCheck === '-' ||\r\n\t\t\t\tpropertyToCheck === '+'\r\n\t\t\t) {\r\n\t\t\t\treturn !desc ? input.sort() : input.sort().reverse();\r\n\t\t\t} else {\r\n\t\t\t\tconst property: string =\r\n\t\t\t\t\tpropertyToCheck.substr(0, 1) === '+' ||\r\n\t\t\t\t\tpropertyToCheck.substr(0, 1) === '-'\r\n\t\t\t\t\t\t? propertyToCheck.substr(1)\r\n\t\t\t\t\t\t: propertyToCheck;\r\n\r\n\t\t\t\t// check if custom sort function is defined\r\n\t\t\t\tconst sortFunction: any = this.getSortFunction(\r\n\t\t\t\t\tthis.getProperty(fields, property)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// console.log(property);\r\n\t\t\t\treturn input.sort(function(a: any, b: any) {\r\n\t\t\t\t\t// use custom sort function if one is defined\r\n\t\t\t\t\tconst propertyA =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +a.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: a[property]\r\n\t\t\t\t\t\t\t: sortFunction(a);\r\n\t\t\t\t\tconst propertyB =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +b.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: b[property]\r\n\t\t\t\t\t\t\t: sortFunction(b);\r\n\r\n\t\t\t\t\t// if both values are undefined...\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof propertyA === 'undefined' &&\r\n\t\t\t\t\t\ttypeof propertyB === 'undefined'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// ...skip comparison\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn !desc\r\n\t\t\t\t\t\t? GtOrderByPipe._orderByComparator(propertyA, propertyB)\r\n\t\t\t\t\t\t: -GtOrderByPipe._orderByComparator(propertyA, propertyB);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// loop over property of the array in order and sort\r\n\t\t\treturn input.sort((a: any, b: any) => {\r\n\t\t\t\t// console.log('multiple');\r\n\t\t\t\tfor (let i = 0; i < sortByProperties.length; i++) {\r\n\t\t\t\t\tconst desc = sortByProperties[i].substr(0, 1) === '-';\r\n\t\t\t\t\tconst property =\r\n\t\t\t\t\t\tsortByProperties[i].substr(0, 1) === '+' ||\r\n\t\t\t\t\t\tsortByProperties[i].substr(0, 1) === '-'\r\n\t\t\t\t\t\t\t? sortByProperties[i].substr(1)\r\n\t\t\t\t\t\t\t: sortByProperties[i];\r\n\r\n\t\t\t\t\t// console.log(property);\r\n\t\t\t\t\t// check if custom sort function is defined\r\n\t\t\t\t\tconst sortFunction: any = this.getSortFunction(\r\n\t\t\t\t\t\tthis.getProperty(fields, property)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// use custom sort function if one is defined\r\n\t\t\t\t\tconst propertyA =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +a.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: a[property]\r\n\t\t\t\t\t\t\t: sortFunction(a);\r\n\t\t\t\t\tconst propertyB =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +b.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: b[property]\r\n\t\t\t\t\t\t\t: sortFunction(b);\r\n\r\n\t\t\t\t\tconst comparison = !desc\r\n\t\t\t\t\t\t? GtOrderByPipe._orderByComparator(propertyA, propertyB)\r\n\t\t\t\t\t\t: -GtOrderByPipe._orderByComparator(propertyA, propertyB);\r\n\r\n\t\t\t\t\t// don't return 0 yet in case of needing to sort by next property\r\n\t\t\t\t\tif (comparison !== 0) {\r\n\t\t\t\t\t\treturn comparison;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0; // equal each other\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\n\r\n@Pipe({\r\n\tname: 'gtSearch'\r\n})\r\nexport class GtSearchPipe<R extends GtRow> implements PipeTransform {\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\ttransform(\r\n\t\tallRows: any,\r\n\t\tsearchTerms: string,\r\n\t\tgtInfo: GtInformation,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\tfields: Array<GtConfigField<R, any>>,\r\n\t\trefreshData: number\r\n\t): any {\r\n\t\t//  if no search terms are defined...\r\n\t\tif (!searchTerms || searchTerms.replace(/\"/g, '').length === 0) {\r\n\t\t\t// ...return all rows\r\n\t\t\tconst length = allRows === null ? 0 : allRows.length;\r\n\t\t\tgtInfo.recordsAfterSearch = length;\r\n\t\t\treturn allRows;\r\n\t\t}\r\n\r\n\t\tconst searchFunction: any = {};\r\n\t\tconst fieldsTemp: Array<any> = [];\r\n\r\n\t\tfor (let k = 0; k < fields.length; k++) {\r\n\t\t\tconst field = fields[k];\r\n\r\n\t\t\t// check if field should be included in global search\r\n\t\t\tconst include =\r\n\t\t\t\tthis.getProperty(settings, field.objectKey).search === false\r\n\t\t\t\t\t? false\r\n\t\t\t\t\t: true;\r\n\r\n\t\t\t// if include...\r\n\t\t\tif (include) {\r\n\t\t\t\t// ...and if search function is defined...\r\n\t\t\t\tif (typeof field.search === 'function') {\r\n\t\t\t\t\t// ...add it as search function for field\r\n\t\t\t\t\tsearchFunction[field.objectKey] = field.search;\r\n\t\t\t\t}\r\n\t\t\t\t// ...if no search function is defined but value function is defined...\r\n\t\t\t\telse if (typeof field.value === 'function') {\r\n\t\t\t\t\t// ...add it as search function for field\r\n\t\t\t\t\tsearchFunction[field.objectKey] = field.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ...push it to our fields array\r\n\t\t\t\tfieldsTemp.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst filteredRows: Array<any> = [];\r\n\t\tsearchTerms = typeof searchTerms === 'undefined' ? '' : searchTerms;\r\n\t\tconst searchTermsArray = searchTerms.toLowerCase().match(/(\".*\"|[^\\s]+)/g);\r\n\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tconst row = allRows[i];\r\n\t\t\tlet string = '';\r\n\r\n\t\t\tfor (let j = 0; j < fieldsTemp.length; j++) {\r\n\t\t\t\tconst separator = j === 0 ? '' : ' & ';\r\n\t\t\t\tstring += searchFunction[fieldsTemp[j].objectKey]\r\n\t\t\t\t\t? separator + searchFunction[fieldsTemp[j].objectKey](row, j)\r\n\t\t\t\t\t: separator + row[fieldsTemp[j].objectKey];\r\n\t\t\t}\r\n\t\t\tstring = string.toLowerCase();\r\n\t\t\tlet match: Boolean = true;\r\n\r\n\t\t\tfor (let k = 0; k < searchTermsArray.length; k++) {\r\n\t\t\t\tconst term = searchTermsArray[k].replace(/\"/g, '');\r\n\t\t\t\tmatch = string.indexOf(term) !== -1;\r\n\r\n\t\t\t\tif (!match) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (match) {\r\n\t\t\t\tfilteredRows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgtInfo.recordsAfterSearch = filteredRows.length;\r\n\t\t// gtInfo.refresh(filteredRows.length,gt);\r\n\t\treturn filteredRows;\r\n\t}\r\n}\r\n","import {\r\n\tComponentFactory,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tDirective,\r\n\tEventEmitter,\r\n\tInjector,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n\tType,\r\n\tViewContainerRef\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[gtComponentAnchor]'\r\n})\r\nexport class ComponentAnchorDirective<C> implements OnInit {\r\n\t@Input() ctor: Type<C>;\r\n\t@Input() injector: Injector;\r\n\t@Output() instance: EventEmitter<C> = new EventEmitter<C>();\r\n\r\n\tconstructor(\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\tprivate viewContainer: ViewContainerRef\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tconst factory: ComponentFactory<\r\n\t\t\tC\r\n\t\t> = this.componentFactoryResolver.resolveComponentFactory(this.ctor);\r\n\t\tconst component: ComponentRef<C> = this.viewContainer.createComponent(\r\n\t\t\tfactory,\r\n\t\t\t0,\r\n\t\t\tthis.injector\r\n\t\t);\r\n\t\tthis.instance.emit(component.instance);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInjector,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n\tType\r\n} from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\nexport abstract class GtCustomComponent<R> implements OnInit {\r\n\trow: R;\r\n\tcolumn: any;\r\n\tredrawEvent = new EventEmitter<{ row: R; column: any }>();\r\n\tsearchTerms: string;\r\n\t$searchTerms: ReplaySubject<string> = new ReplaySubject(1);\r\n\r\n\tprotected $redraw($event?: any) {\r\n\t\tthis.redrawEvent.emit({ row: this.row, column: this.column });\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.$searchTerms.subscribe(terms => (this.searchTerms = terms));\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'gt-custom-component-factory',\r\n\ttemplate: `<div gtComponentAnchor [ctor]=\"type\"\r\n                    [injector]=\"injector\"\r\n                    (instance)=\"instance($event)\"></div>`\r\n})\r\nexport class GtCustomComponentFactory<R, C extends GtCustomComponent<R>> {\r\n\t@Input()\r\n\tset searchTerms(value: string) {\r\n\t\tthis.$searchTerms.next(value);\r\n\t}\r\n\t@Input() type: Type<C>;\r\n\t@Input() injector: Injector;\r\n\t@Input() row: R;\r\n\t@Input() column: any;\r\n\t$searchTerms: ReplaySubject<string> = new ReplaySubject(1);\r\n\t@Output() redrawEvent = new EventEmitter<{ row: R; column: any }>();\r\n\r\n\tinstance(instance: C) {\r\n\t\tinstance.row = this.row;\r\n\t\tinstance.column = this.column;\r\n\t\tinstance.$searchTerms = this.$searchTerms;\r\n\t\tinstance.redrawEvent.subscribe(this.redrawEvent);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInput,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tOutput,\r\n\tRenderer2\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport * as Tether from 'tether';\r\n\r\n@Component({\r\n\tselector: 'gt-dropdown',\r\n\ttemplate: `\r\n    <div class=\"dropdown gt-dropdown\" [ngClass]=\"{'show':active}\" [attr.id]=\"id\">\r\n      <div class=\"dropdown-toggle\" (click)=\"toggleDropdown()\" [attr.aria-expanded]=\"active\">{{selected}}</div>\r\n      <div class=\"gt-dropdown-menu dropdown-menu\" *ngIf=\"active\" [ngClass]=\"{'show':active}\" [attr.id]=\"id+'_menu'\">\r\n        <button *ngFor=\"let option of options;\" class=\"dropdown-item\" (click)=\"select(option)\" [ngClass]=\"{'active':option === selected}\">{{option}}</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n\tstyles: [\r\n\t\t`\r\n    .gt-dropdown .dropdown-toggle {\r\n      cursor: pointer;\r\n    }\r\n    .gt-dropdown .dropdown-toggle::after {\r\n      transition: opacity 0.4s ease-in-out;\r\n      opacity: 0;\r\n    }\r\n    .gt-dropdown .dropdown-toggle:hover::after {\r\n      opacity: 1;\r\n    }\r\n  `\r\n\t]\r\n})\r\nexport class GtDropdownComponent implements OnInit, OnDestroy {\r\n\tget selected() {\r\n\t\treturn this._selected;\r\n\t}\r\n\r\n\t_selected: any;\r\n\t@Input()\r\n\tset selected(selection) {\r\n\t\tthis._selected = selection;\r\n\t}\r\n\t@Input() options: Array<any>;\r\n\t@Input() id: string;\r\n\t@Output() selectedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n\tactive = false; // is dropdown active or not\r\n\tstate: Subject<boolean> = new Subject(); // current state of dropdown\r\n\ttether: any;\r\n\tclickListener: Function;\r\n\tkeyupListener: Function;\r\n\r\n\tconstructor(private renderer: Renderer2) {}\r\n\r\n\tselect(option: any) {\r\n\t\tthis.active = false;\r\n\t\tthis.state.next(this.active);\r\n\t\tif (this._selected !== option) {\r\n\t\t\tthis.selectedChange.emit(option);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleDropdown() {\r\n\t\tthis.active = !this.active;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.state.next(this.active);\r\n\t\t}, 0);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.state.subscribe(state => {\r\n\t\t\tif (state) {\r\n\t\t\t\tthis.tether = new Tether({\r\n\t\t\t\t\telement: '#' + this.id + '_menu',\r\n\t\t\t\t\ttarget: '#' + this.id,\r\n\t\t\t\t\tattachment: 'top left',\r\n\t\t\t\t\ttargetAttachment: 'bottom left',\r\n\t\t\t\t\tconstraints: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tto: 'window',\r\n\t\t\t\t\t\t\tattachment: 'together'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.tether.position();\r\n\r\n\t\t\t\t// set up click listener and listen for click outside dropdown\r\n\t\t\t\tthis.clickListener = this.renderer.listen(\r\n\t\t\t\t\t'document',\r\n\t\t\t\t\t'click',\r\n\t\t\t\t\t(event: MouseEvent) => {\r\n\t\t\t\t\t\tthis.active = false;\r\n\t\t\t\t\t\tthis.state.next(this.active);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// set up keyboard listener and listen for escape key up\r\n\t\t\t\tthis.keyupListener = this.renderer.listen(\r\n\t\t\t\t\t'document',\r\n\t\t\t\t\t'keyup',\r\n\t\t\t\t\t(event: KeyboardEvent) => {\r\n\t\t\t\t\t\tswitch (event.key) {\r\n\t\t\t\t\t\t\tcase 'Escape':\r\n\t\t\t\t\t\t\t\tthis.active = false;\r\n\t\t\t\t\t\t\t\tthis.state.next(this.active);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tether.destroy();\r\n\t\t\t\tthis.removeListeners();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.removeListeners();\r\n\t}\r\n\r\n\tremoveListeners() {\r\n\t\tif (this.clickListener) {\r\n\t\t\tthis.clickListener();\r\n\t\t}\r\n\t\tif (this.keyupListener) {\r\n\t\t\tthis.keyupListener();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'gtTotals'\r\n})\r\nexport class GtTotalsPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tvalue: string | number | Function,\r\n\t\tdata: Array<any>,\r\n\t\tobjectKey: string,\r\n\t\trefresh: boolean\r\n\t): any {\r\n\t\tlet output;\r\n\r\n\t\tif (data.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'function') {\r\n\t\t\toutput = value(data, objectKey);\r\n\t\t} else if (value) {\r\n\t\t\toutput = value;\r\n\t\t} else {\r\n\t\t\toutput = '';\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigTotal } from '../interfaces/gt-config-total';\r\n\r\n@Pipe({\r\n\tname: 'gtTotalsPosition'\r\n})\r\nexport class GtTotalsPositionPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tarray: Array<GtConfigTotal>,\r\n\t\tposition: 'header' | 'footer' = 'header'\r\n\t): Array<any> {\r\n\t\treturn array.filter(total => {\r\n\t\t\t// if no position is defined assume position to be header\r\n\t\t\tconst totalPosition = total.position ? total.position : 'header';\r\n\t\t\treturn totalPosition === position;\r\n\t\t});\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\n\r\n@Pipe({\r\n\tname: 'gtRowClass'\r\n})\r\nexport class GtRowClassPipe implements PipeTransform {\r\n\ttransform(array: Array<any>, gtFields: Array<GtConfigField<any, any>>): any {\r\n\t\tif (array) {\r\n\t\t\t// find columns with rowClass property defined\r\n\t\t\tconst COLUMNS_WITH_CLASS = gtFields\r\n\t\t\t\t.map(column => column)\r\n\t\t\t\t.filter(column => column.rowClass);\r\n\t\t\tCOLUMNS_WITH_CLASS.map(column => {\r\n\t\t\t\t// for each column with rowClass property defined...\r\n\t\t\t\tarray.map(row => {\r\n\t\t\t\t\t// loop through rows and set row class\r\n\t\t\t\t\tif (typeof column.rowClass === 'function') {\r\n\t\t\t\t\t\t// if row class is a function, try using the function...\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (row.$$gtRowClass) {\r\n\t\t\t\t\t\t\t\trow.$$gtRowClass = row.$$gtRowClass.concat(\r\n\t\t\t\t\t\t\t\t\t' ' + column.rowClass(row, column)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trow.$$gtRowClass = column.rowClass(row, column);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'Error when trying to get row class name using formula.',\r\n\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if not a function, return plain string value\r\n\t\t\t\t\t\tif (row.$$gtRowClass) {\r\n\t\t\t\t\t\t\trow.$$gtRowClass = row.$$gtRowClass.concat(' ' + column.rowClass);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow.$$gtRowClass = column.rowClass;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtColumnClass'\r\n})\r\nexport class GtColumnClassPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tgtFields: Array<GtConfigField<any, any>>,\r\n\t\tcolumn: GtConfigField<GtRow, any>,\r\n\t\trow?: GtRow\r\n\t): any {\r\n\t\t// find columns with columnClass property defined\r\n\t\tconst COLUMN_WITH_CLASS = gtFields\r\n\t\t\t.map(field => field)\r\n\t\t\t.filter(\r\n\t\t\t\tfield => field.columnClass && field.objectKey === column.objectKey\r\n\t\t\t)[0];\r\n\t\tif (!COLUMN_WITH_CLASS) {\r\n\t\t\treturn;\r\n\t\t} else if (typeof COLUMN_WITH_CLASS.columnClass === 'function') {\r\n\t\t\t// if column class is a function, try using the function...\r\n\t\t\ttry {\r\n\t\t\t\treturn COLUMN_WITH_CLASS.columnClass(row, column);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'Error when trying to get column class name using formula.',\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// if not a function, return plain string value\r\n\t\t\treturn COLUMN_WITH_CLASS.columnClass;\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tChangeDetectorRef,\r\n\tDirective,\r\n\tElementRef,\r\n\tHostListener,\r\n\tInput,\r\n\tOnInit\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[gtColumnWidth]'\r\n})\r\nexport class GtColumnWidthDirective implements OnInit {\r\n\t@Input() objectKey: string;\r\n\t@Input() widths: Object;\r\n\t@HostListener('window:resize', ['$event'])\r\n\tpublic onResize($event: any) {\r\n\t\tthis.checkSize();\r\n\t}\r\n\tconstructor(\r\n\t\tprivate hostElement: ElementRef,\r\n\t\tprivate cdRef: ChangeDetectorRef\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tthis.checkSize();\r\n\t}\r\n\r\n\tcheckSize() {\r\n\t\tthis.widths[this.objectKey] = window\r\n\t\t\t.getComputedStyle(this.hostElement.nativeElement, null)\r\n\t\t\t.getPropertyValue('width');\r\n\t\tthis.cdRef.detectChanges();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tHostBinding,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput\r\n} from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'gt-checkbox',\r\n\ttemplate: `\r\n    <label class=\"custom-control custom-checkbox p-0\" (click)=\"$event.stopPropagation()\">\r\n      <input #checkbox type=\"checkbox\" class=\"custom-control-input\" [(checked)]=\"checked\" (change)=\"toggle($event);\">\r\n      <span class=\"custom-control-label\"></span>\r\n    </label>\r\n  `,\r\n\tstyles: []\r\n})\r\nexport class GtCheckboxComponent implements OnInit {\r\n\tget initialValue(): boolean {\r\n\t\treturn this._initialValue;\r\n\t}\r\n\r\n\t@HostBinding('class') class = 'd-flex justify-content-end';\r\n\r\n\t@Input()\r\n\tset initialValue(value: boolean) {\r\n\t\tthis._initialValue = value;\r\n\t}\r\n\tget checked(): boolean {\r\n\t\treturn this._checked;\r\n\t}\r\n\r\n\t@Input()\r\n\tset checked(value: boolean) {\r\n\t\tthis._checked = value;\r\n\t}\r\n\r\n\tprivate _checked: boolean;\r\n\tprivate _initialValue: boolean;\r\n\t@Output() changed: EventEmitter<boolean> = new EventEmitter();\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n\r\n\ttoggle(checked: boolean) {\r\n\t\tthis.changed.emit(this.checked);\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Pipe({\r\n\tname: 'gtIsObservable'\r\n})\r\nexport class GtIsObservablePipe implements PipeTransform {\r\n\ttransform(input: any): boolean {\r\n\t\treturn input instanceof Observable;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Pipe({\r\n\tname: 'gtIsEditable'\r\n})\r\nexport class GtIsEditablePipe implements PipeTransform {\r\n\ttransform(property: any, row: any, refreshPipe: boolean): boolean {\r\n\t\tif (typeof property === 'function') {\r\n\t\t\treturn property(row);\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GenericTableComponent } from './components/generic-table.component';\r\nimport { GtRenderPipe } from './pipes/gt-render.pipe';\r\nimport { GtVisiblePipe } from './pipes/gt-visible.pipe';\r\nimport { DashCasePipe } from './pipes/dash-case.pipe';\r\nimport { GtPropertyPipe } from './pipes/gt-property.pipe';\r\nimport { GtChunkPipe } from './pipes/gt-chunk.pipe';\r\nimport { GtFilterPipe } from './pipes/gt-filter.pipe';\r\nimport { GtOrderByPipe } from './pipes/gt-order-by.pipe';\r\nimport { GtExpandingRowComponent } from './components/gt-expanding-row.component';\r\nimport { GtSearchPipe } from './pipes/gt-search.pipe';\r\nimport { ComponentAnchorDirective } from './directives/component-anchor.directive';\r\nimport {\r\n\tGtPaginationComponent,\r\n\tPaginationPipe\r\n} from './components/gt-pagination.component';\r\nimport {\r\n\tGtTableInfoComponent,\r\n\tTableInfoPipe\r\n} from './components/gt-table-info.component';\r\nimport { GtCustomComponentFactory } from './components/gt-custom-component-factory';\r\nimport { GtMetaPipe } from './pipes/gt-meta.pipe';\r\nimport { GtDropdownComponent } from './components/gt-dropdown.component';\r\nimport { GtTotalsPipe } from './pipes/gt-totals.pipe';\r\nimport { GtTotalsPositionPipe } from './pipes/gt-totals-position.pipe';\r\nimport { GtRowClassPipe } from './pipes/gt-row-class.pipe';\r\nimport { GtColumnClassPipe } from './pipes/gt-column-class.pipe';\r\nimport { GtColumnWidthDirective } from './directives/gt-column-width.directive';\r\nimport { GtDrilldownComponent } from './components/gt-drilldown.component';\r\nimport { GtCheckboxComponent } from './components/gt-checkbox/gt-checkbox.component';\r\nimport { GtHighlightPipe } from './pipes/gt-highlight.pipe';\r\nimport { GtIsObservablePipe } from './pipes/gt-is-observable.pipe';\r\nimport { GtIsEditablePipe } from './pipes/gt-is-editable.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tComponentAnchorDirective,\r\n\t\tGenericTableComponent,\r\n\t\tGtPaginationComponent,\r\n\t\tGtVisiblePipe,\r\n\t\tGtRenderPipe,\r\n\t\tDashCasePipe,\r\n\t\tGtPropertyPipe,\r\n\t\tGtChunkPipe,\r\n\t\tGtFilterPipe,\r\n\t\tGtOrderByPipe,\r\n\t\tGtExpandingRowComponent,\r\n\t\tGtCustomComponentFactory,\r\n\t\tGtSearchPipe,\r\n\t\tPaginationPipe,\r\n\t\tGtTableInfoComponent,\r\n\t\tTableInfoPipe,\r\n\t\tGtMetaPipe,\r\n\t\tGtTotalsPipe,\r\n\t\tGtTotalsPositionPipe,\r\n\t\tGtRowClassPipe,\r\n\t\tGtColumnClassPipe,\r\n\t\tGtHighlightPipe,\r\n\t\tGtIsObservablePipe,\r\n\t\tGtIsEditablePipe,\r\n\t\tGtDropdownComponent,\r\n\t\tGtColumnWidthDirective,\r\n\t\tGtDrilldownComponent,\r\n\t\tGtCheckboxComponent\r\n\t],\r\n\timports: [CommonModule, FormsModule],\r\n\texports: [\r\n\t\tGenericTableComponent,\r\n\t\tGtPaginationComponent,\r\n\t\tGtTableInfoComponent,\r\n\t\tGtPropertyPipe,\r\n\t\tGtHighlightPipe,\r\n\t\tGtExpandingRowComponent,\r\n\t\tGtDropdownComponent,\r\n\t\tGtDrilldownComponent,\r\n\t\tGtCheckboxComponent\r\n\t],\r\n\tentryComponents: [GtDrilldownComponent, GtCheckboxComponent],\r\n\tproviders: [GtMetaPipe, GtHighlightPipe],\r\n\tbootstrap: []\r\n})\r\nexport class GenericTableModule {}\r\n"],"names":["EventEmitter","Component","Input","Output","Pipe","Renderer2","ChangeDetectorRef","tslib_1.__extends","DomSanitizer","Directive","ComponentFactoryResolver","ViewContainerRef","ReplaySubject","Subject","ElementRef","HostListener","HostBinding","Observable","NgModule","CommonModule","FormsModule"],"mappings":"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"}
