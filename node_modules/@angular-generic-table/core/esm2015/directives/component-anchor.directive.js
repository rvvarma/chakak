/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ComponentFactoryResolver, Directive, EventEmitter, Injector, Input, Output, Type, ViewContainerRef } from '@angular/core';
/**
 * @template C
 */
export class ComponentAnchorDirective {
    /**
     * @param {?} componentFactoryResolver
     * @param {?} viewContainer
     */
    constructor(componentFactoryResolver, viewContainer) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.viewContainer = viewContainer;
        this.instance = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        const /** @type {?} */ factory = this.componentFactoryResolver.resolveComponentFactory(this.ctor);
        const /** @type {?} */ component = this.viewContainer.createComponent(factory, 0, this.injector);
        this.instance.emit(component.instance);
    }
}
ComponentAnchorDirective.decorators = [
    { type: Directive, args: [{
                selector: '[gtComponentAnchor]'
            },] },
];
/** @nocollapse */
ComponentAnchorDirective.ctorParameters = () => [
    { type: ComponentFactoryResolver, },
    { type: ViewContainerRef, },
];
ComponentAnchorDirective.propDecorators = {
    "ctor": [{ type: Input },],
    "injector": [{ type: Input },],
    "instance": [{ type: Output },],
};
function ComponentAnchorDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ComponentAnchorDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ComponentAnchorDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    ComponentAnchorDirective.propDecorators;
    /** @type {?} */
    ComponentAnchorDirective.prototype.ctor;
    /** @type {?} */
    ComponentAnchorDirective.prototype.injector;
    /** @type {?} */
    ComponentAnchorDirective.prototype.instance;
    /** @type {?} */
    ComponentAnchorDirective.prototype.componentFactoryResolver;
    /** @type {?} */
    ComponentAnchorDirective.prototype.viewContainer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWFuY2hvci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1nZW5lcmljLXRhYmxlL2NvcmUvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL2NvbXBvbmVudC1hbmNob3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBRU4sd0JBQXdCLEVBRXhCLFNBQVMsRUFDVCxZQUFZLEVBQ1osUUFBUSxFQUNSLEtBQUssRUFFTCxNQUFNLEVBQ04sSUFBSSxFQUNKLGdCQUFnQixFQUNoQixNQUFNLGVBQWUsQ0FBQzs7OztBQUt2QixNQUFNOzs7OztJQUtMLFlBQ1MsMEJBQ0E7UUFEQSw2QkFBd0IsR0FBeEIsd0JBQXdCO1FBQ3hCLGtCQUFhLEdBQWIsYUFBYTt3QkFKZ0IsSUFBSSxZQUFZLEVBQUs7S0FLdkQ7Ozs7SUFFSixRQUFRO1FBQ1AsdUJBQU0sT0FBTyxHQUVULElBQUksQ0FBQyx3QkFBd0IsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckUsdUJBQU0sU0FBUyxHQUFvQixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FDcEUsT0FBTyxFQUNQLENBQUMsRUFDRCxJQUFJLENBQUMsUUFBUSxDQUNiLENBQUM7UUFDRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDdkM7OztZQXZCRCxTQUFTLFNBQUM7Z0JBQ1YsUUFBUSxFQUFFLHFCQUFxQjthQUMvQjs7OztZQWRBLHdCQUF3QjtZQVN4QixnQkFBZ0I7OztxQkFPZixLQUFLO3lCQUNMLEtBQUs7eUJBQ0wsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcblx0Q29tcG9uZW50RmFjdG9yeSxcclxuXHRDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXHJcblx0Q29tcG9uZW50UmVmLFxyXG5cdERpcmVjdGl2ZSxcclxuXHRFdmVudEVtaXR0ZXIsXHJcblx0SW5qZWN0b3IsXHJcblx0SW5wdXQsXHJcblx0T25Jbml0LFxyXG5cdE91dHB1dCxcclxuXHRUeXBlLFxyXG5cdFZpZXdDb250YWluZXJSZWZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG5cdHNlbGVjdG9yOiAnW2d0Q29tcG9uZW50QW5jaG9yXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbXBvbmVudEFuY2hvckRpcmVjdGl2ZTxDPiBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0QElucHV0KCkgY3RvcjogVHlwZTxDPjtcclxuXHRASW5wdXQoKSBpbmplY3RvcjogSW5qZWN0b3I7XHJcblx0QE91dHB1dCgpIGluc3RhbmNlOiBFdmVudEVtaXR0ZXI8Qz4gPSBuZXcgRXZlbnRFbWl0dGVyPEM+KCk7XHJcblxyXG5cdGNvbnN0cnVjdG9yKFxyXG5cdFx0cHJpdmF0ZSBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcclxuXHRcdHByaXZhdGUgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZlxyXG5cdCkge31cclxuXHJcblx0bmdPbkluaXQoKTogdm9pZCB7XHJcblx0XHRjb25zdCBmYWN0b3J5OiBDb21wb25lbnRGYWN0b3J5PFxyXG5cdFx0XHRDXHJcblx0XHQ+ID0gdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodGhpcy5jdG9yKTtcclxuXHRcdGNvbnN0IGNvbXBvbmVudDogQ29tcG9uZW50UmVmPEM+ID0gdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUNvbXBvbmVudChcclxuXHRcdFx0ZmFjdG9yeSxcclxuXHRcdFx0MCxcclxuXHRcdFx0dGhpcy5pbmplY3RvclxyXG5cdFx0KTtcclxuXHRcdHRoaXMuaW5zdGFuY2UuZW1pdChjb21wb25lbnQuaW5zdGFuY2UpO1xyXG5cdH1cclxufVxyXG4iXX0=