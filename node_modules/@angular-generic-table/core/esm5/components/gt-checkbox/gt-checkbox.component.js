/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
var GtCheckboxComponent = /** @class */ (function () {
    function GtCheckboxComponent() {
        this.class = 'd-flex justify-content-end';
        this.changed = new EventEmitter();
    }
    Object.defineProperty(GtCheckboxComponent.prototype, "initialValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._initialValue;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._initialValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GtCheckboxComponent.prototype, "checked", {
        get: /**
         * @return {?}
         */
        function () {
            return this._checked;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._checked = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    GtCheckboxComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} checked
     * @return {?}
     */
    GtCheckboxComponent.prototype.toggle = /**
     * @param {?} checked
     * @return {?}
     */
    function (checked) {
        this.changed.emit(this.checked);
    };
    GtCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'gt-checkbox',
                    template: "\n    <label class=\"custom-control custom-checkbox p-0\" (click)=\"$event.stopPropagation()\">\n      <input #checkbox type=\"checkbox\" class=\"custom-control-input\" [(checked)]=\"checked\" (change)=\"toggle($event);\">\n      <span class=\"custom-control-label\"></span>\n    </label>\n  ",
                    styles: []
                },] },
    ];
    /** @nocollapse */
    GtCheckboxComponent.ctorParameters = function () { return []; };
    GtCheckboxComponent.propDecorators = {
        "class": [{ type: HostBinding, args: ['class',] },],
        "initialValue": [{ type: Input },],
        "checked": [{ type: Input },],
        "changed": [{ type: Output },],
    };
    return GtCheckboxComponent;
}());
export { GtCheckboxComponent };
function GtCheckboxComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtCheckboxComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtCheckboxComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    GtCheckboxComponent.propDecorators;
    /** @type {?} */
    GtCheckboxComponent.prototype.class;
    /** @type {?} */
    GtCheckboxComponent.prototype._checked;
    /** @type {?} */
    GtCheckboxComponent.prototype._initialValue;
    /** @type {?} */
    GtCheckboxComponent.prototype.changed;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtY2hlY2tib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFuZ3VsYXItZ2VuZXJpYy10YWJsZS9jb3JlLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9ndC1jaGVja2JveC9ndC1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBRUwsTUFBTSxFQUNOLE1BQU0sZUFBZSxDQUFDOztJQW9DdEI7cUJBbkI4Qiw0QkFBNEI7dUJBaUJmLElBQUksWUFBWSxFQUFFO0tBRTdDO0lBdkJoQixzQkFBSSw2Q0FBWTs7OztRQUFoQjtZQUNDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztTQUMxQjs7Ozs7a0JBS2dCLEtBQWM7WUFDOUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7Ozs7T0FOM0I7SUFRRCxzQkFBSSx3Q0FBTzs7OztRQUFYO1lBQ0MsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ3JCOzs7OztrQkFHVyxLQUFjO1lBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDOzs7O09BSnRCOzs7O0lBYUQsc0NBQVE7OztJQUFSLGVBQWE7Ozs7O0lBRWIsb0NBQU07Ozs7SUFBTixVQUFPLE9BQWdCO1FBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNoQzs7Z0JBeENELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLHNTQUtSO29CQUNGLE1BQU0sRUFBRSxFQUFFO2lCQUNWOzs7OzswQkFNQyxXQUFXLFNBQUMsT0FBTztpQ0FFbkIsS0FBSzs0QkFRTCxLQUFLOzRCQU9MLE1BQU07OzhCQXpDUjs7U0FtQmEsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuXHRDb21wb25lbnQsXHJcblx0RXZlbnRFbWl0dGVyLFxyXG5cdEhvc3RCaW5kaW5nLFxyXG5cdElucHV0LFxyXG5cdE9uSW5pdCxcclxuXHRPdXRwdXRcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAnZ3QtY2hlY2tib3gnLFxyXG5cdHRlbXBsYXRlOiBgXHJcbiAgICA8bGFiZWwgY2xhc3M9XCJjdXN0b20tY29udHJvbCBjdXN0b20tY2hlY2tib3ggcC0wXCIgKGNsaWNrKT1cIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiPlxyXG4gICAgICA8aW5wdXQgI2NoZWNrYm94IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIiBbKGNoZWNrZWQpXT1cImNoZWNrZWRcIiAoY2hhbmdlKT1cInRvZ2dsZSgkZXZlbnQpO1wiPlxyXG4gICAgICA8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWxhYmVsXCI+PC9zcGFuPlxyXG4gICAgPC9sYWJlbD5cclxuICBgLFxyXG5cdHN0eWxlczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIEd0Q2hlY2tib3hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cdGdldCBpbml0aWFsVmFsdWUoKTogYm9vbGVhbiB7XHJcblx0XHRyZXR1cm4gdGhpcy5faW5pdGlhbFZhbHVlO1xyXG5cdH1cclxuXHJcblx0QEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzID0gJ2QtZmxleCBqdXN0aWZ5LWNvbnRlbnQtZW5kJztcclxuXHJcblx0QElucHV0KClcclxuXHRzZXQgaW5pdGlhbFZhbHVlKHZhbHVlOiBib29sZWFuKSB7XHJcblx0XHR0aGlzLl9pbml0aWFsVmFsdWUgPSB2YWx1ZTtcclxuXHR9XHJcblx0Z2V0IGNoZWNrZWQoKTogYm9vbGVhbiB7XHJcblx0XHRyZXR1cm4gdGhpcy5fY2hlY2tlZDtcclxuXHR9XHJcblxyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGNoZWNrZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuXHRcdHRoaXMuX2NoZWNrZWQgPSB2YWx1ZTtcclxuXHR9XHJcblxyXG5cdHByaXZhdGUgX2NoZWNrZWQ6IGJvb2xlYW47XHJcblx0cHJpdmF0ZSBfaW5pdGlhbFZhbHVlOiBib29sZWFuO1xyXG5cdEBPdXRwdXQoKSBjaGFuZ2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge31cclxuXHJcblx0bmdPbkluaXQoKSB7fVxyXG5cclxuXHR0b2dnbGUoY2hlY2tlZDogYm9vbGVhbikge1xyXG5cdFx0dGhpcy5jaGFuZ2VkLmVtaXQodGhpcy5jaGVja2VkKTtcclxuXHR9XHJcbn1cclxuIl19