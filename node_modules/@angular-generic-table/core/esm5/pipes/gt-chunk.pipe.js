/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
var GtChunkPipe = /** @class */ (function () {
    function GtChunkPipe() {
    }
    /**
     * @param {?} array
     * @param {?} gtInfo
     * @param {?} chunkSize
     * @param {?} page
     * @param {?} refreshPageArray
     * @param {?} refreshData
     * @param {?} gtEvent
     * @param {?} data
     * @return {?}
     */
    GtChunkPipe.prototype.transform = /**
     * @param {?} array
     * @param {?} gtInfo
     * @param {?} chunkSize
     * @param {?} page
     * @param {?} refreshPageArray
     * @param {?} refreshData
     * @param {?} gtEvent
     * @param {?} data
     * @return {?}
     */
    function (array, gtInfo, chunkSize, page, refreshPageArray, refreshData, gtEvent, data) {
        if (!Array.isArray(array)) {
            return array;
        }
        data.exportData = array; // store data for export
        var /** @type {?} */ PAGES = [];
        var /** @type {?} */ ENTRIES = array.length;
        for (var /** @type {?} */ i = 0; i < ENTRIES; i += chunkSize) {
            PAGES.push(array.slice(i, i + chunkSize));
        }
        gtInfo.visibleRecords = !PAGES[page - 1] ? [] : tslib_1.__spread(PAGES[page - 1]); // add visible rows
        gtInfo.pageTotal = PAGES.length; // add number of pages
        setTimeout(function () {
            return gtEvent.emit({
                name: 'gt-info',
                value: gtInfo
            });
        }, 0);
        return PAGES[page - 1];
    };
    GtChunkPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'gtChunk'
                },] },
    ];
    return GtChunkPipe;
}());
export { GtChunkPipe };
function GtChunkPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtChunkPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtChunkPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtY2h1bmsucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bhbmd1bGFyLWdlbmVyaWMtdGFibGUvY29yZS8iLCJzb3VyY2VzIjpbInBpcGVzL2d0LWNodW5rLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUErQixNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0lBT2pFLCtCQUFTOzs7Ozs7Ozs7OztJQUFULFVBQ0MsS0FBWSxFQUNaLE1BQXFCLEVBQ3JCLFNBQWlCLEVBQ2pCLElBQVksRUFDWixnQkFBeUIsRUFDekIsV0FBbUIsRUFDbkIsT0FBOEIsRUFDOUIsSUFBZ0M7UUFFaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxLQUFLLENBQUM7U0FDYjtRQUNELElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXhCLHFCQUFNLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDakIscUJBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFFN0IsS0FBSyxxQkFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLEVBQUUsQ0FBQyxJQUFJLFNBQVMsRUFBRTtZQUM1QyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsTUFBTSxDQUFDLGNBQWMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLGtCQUFLLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyRSxNQUFNLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFFaEMsVUFBVSxDQUNUO1lBQ0MsT0FBQSxPQUFPLENBQUMsSUFBSSxDQUFDO2dCQUNaLElBQUksRUFBRSxTQUFTO2dCQUNmLEtBQUssRUFBRSxNQUFNO2FBQ2IsQ0FBQztRQUhGLENBR0UsRUFDSCxDQUFDLENBQ0QsQ0FBQztRQUNGLE9BQU8sS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztLQUN2Qjs7Z0JBckNELElBQUksU0FBQztvQkFDTCxJQUFJLEVBQUUsU0FBUztpQkFDZjs7c0JBTEQ7O1NBTWEsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBHdEluZm9ybWF0aW9uLCBHdEV2ZW50IH0gZnJvbSAnLi4nO1xyXG5cclxuQFBpcGUoe1xyXG5cdG5hbWU6ICdndENodW5rJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgR3RDaHVua1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuXHR0cmFuc2Zvcm0oXHJcblx0XHRhcnJheTogYW55W10sXHJcblx0XHRndEluZm86IEd0SW5mb3JtYXRpb24sXHJcblx0XHRjaHVua1NpemU6IG51bWJlcixcclxuXHRcdHBhZ2U6IG51bWJlcixcclxuXHRcdHJlZnJlc2hQYWdlQXJyYXk6IGJvb2xlYW4sXHJcblx0XHRyZWZyZXNoRGF0YTogbnVtYmVyLFxyXG5cdFx0Z3RFdmVudDogRXZlbnRFbWl0dGVyPEd0RXZlbnQ+LFxyXG5cdFx0ZGF0YTogeyBleHBvcnREYXRhOiBBcnJheTxhbnk+IH1cclxuXHQpOiBhbnlbXSB7XHJcblx0XHRpZiAoIUFycmF5LmlzQXJyYXkoYXJyYXkpKSB7XHJcblx0XHRcdHJldHVybiBhcnJheTtcclxuXHRcdH1cclxuXHRcdGRhdGEuZXhwb3J0RGF0YSA9IGFycmF5OyAvLyBzdG9yZSBkYXRhIGZvciBleHBvcnRcclxuXHJcblx0XHRjb25zdCBQQUdFUyA9IFtdO1xyXG5cdFx0Y29uc3QgRU5UUklFUyA9IGFycmF5Lmxlbmd0aDtcclxuXHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IEVOVFJJRVM7IGkgKz0gY2h1bmtTaXplKSB7XHJcblx0XHRcdFBBR0VTLnB1c2goYXJyYXkuc2xpY2UoaSwgaSArIGNodW5rU2l6ZSkpO1xyXG5cdFx0fVxyXG5cdFx0Z3RJbmZvLnZpc2libGVSZWNvcmRzID0gIVBBR0VTW3BhZ2UgLSAxXSA/IFtdIDogWy4uLlBBR0VTW3BhZ2UgLSAxXV07IC8vIGFkZCB2aXNpYmxlIHJvd3NcclxuXHRcdGd0SW5mby5wYWdlVG90YWwgPSBQQUdFUy5sZW5ndGg7IC8vIGFkZCBudW1iZXIgb2YgcGFnZXNcclxuXHJcblx0XHRzZXRUaW1lb3V0KFxyXG5cdFx0XHQoKSA9PlxyXG5cdFx0XHRcdGd0RXZlbnQuZW1pdCh7XHJcblx0XHRcdFx0XHRuYW1lOiAnZ3QtaW5mbycsXHJcblx0XHRcdFx0XHR2YWx1ZTogZ3RJbmZvXHJcblx0XHRcdFx0fSksXHJcblx0XHRcdDBcclxuXHRcdCk7XHJcblx0XHRyZXR1cm4gUEFHRVNbcGFnZSAtIDFdO1xyXG5cdH1cclxufVxyXG4iXX0=