{"version":3,"file":"angular-generic-table-core.js.map","sources":["ng://@angular-generic-table/core/components/gt-expanding-row.component.ts","ng://@angular-generic-table/core/pipes/gt-meta.pipe.ts","ng://@angular-generic-table/core/components/generic-table.component.ts","ng://@angular-generic-table/core/components/gt-table-info.component.ts","ng://@angular-generic-table/core/components/gt-pagination.component.ts","ng://@angular-generic-table/core/components/gt-drilldown.component.ts","ng://@angular-generic-table/core/pipes/gt-highlight.pipe.ts","ng://@angular-generic-table/core/pipes/gt-render.pipe.ts","ng://@angular-generic-table/core/pipes/gt-visible.pipe.ts","ng://@angular-generic-table/core/pipes/dash-case.pipe.ts","ng://@angular-generic-table/core/pipes/gt-property.pipe.ts","ng://@angular-generic-table/core/pipes/gt-chunk.pipe.ts","ng://@angular-generic-table/core/pipes/gt-filter.pipe.ts","ng://@angular-generic-table/core/pipes/gt-order-by.pipe.ts","ng://@angular-generic-table/core/pipes/gt-search.pipe.ts","ng://@angular-generic-table/core/directives/component-anchor.directive.ts","ng://@angular-generic-table/core/components/gt-custom-component-factory.ts","ng://@angular-generic-table/core/components/gt-dropdown.component.ts","ng://@angular-generic-table/core/pipes/gt-totals.pipe.ts","ng://@angular-generic-table/core/pipes/gt-totals-position.pipe.ts","ng://@angular-generic-table/core/pipes/gt-row-class.pipe.ts","ng://@angular-generic-table/core/pipes/gt-column-class.pipe.ts","ng://@angular-generic-table/core/directives/gt-column-width.directive.ts","ng://@angular-generic-table/core/components/gt-checkbox/gt-checkbox.component.ts","ng://@angular-generic-table/core/pipes/gt-is-observable.pipe.ts","ng://@angular-generic-table/core/pipes/gt-is-editable.pipe.ts","ng://@angular-generic-table/core/core.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { GtRow, GtConfigField, GtConfigSetting, GtEvent } from '..';\r\n\r\nexport class GtExpandedRow<R extends GtRow> {\r\n\trow: R;\r\n\tcolumnWidth: Object;\r\n\tgtSettings: Array<GtConfigSetting>;\r\n\tgtFields: Array<GtConfigField<R, any>>;\r\n\tgtOptions: any;\r\n\tgtInfo: any;\r\n\tdata: any;\r\n\tredrawEvent = new EventEmitter<R>();\r\n\tgtEvent: EventEmitter<GtEvent>;\r\n\ttoggleRowEvent = new EventEmitter<R>();\r\n\r\n\tpublic $hide(): void {\r\n\t\tthis.toggleRowEvent.emit(this.row);\r\n\t}\r\n\r\n\tpublic $redraw($event?: any): void {\r\n\t\tthis.redrawEvent.emit(this.row);\r\n\t}\r\n\tpublic $rowClick(row: GtRow, $event: MouseEvent) {\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-clicked',\r\n\t\t\tvalue: { row: row, event: $event }\r\n\t\t});\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'gt-expanding-row',\r\n\ttemplate: `\r\n        <div gtComponentAnchor\r\n             [ctor]=\"type\" (instance)=\"newInstance($event)\"></div>`\r\n})\r\nexport class GtExpandingRowComponent<\r\n\tR extends GtRow,\r\n\tC extends GtExpandedRow<R>\r\n> {\r\n\t@Input() type: Type<C>;\r\n\t@Input() row: R;\r\n\t@Input() columnWidth: Object;\r\n\t@Input() gtSettings: Array<GtConfigSetting>;\r\n\t@Input() gtFields: Array<GtConfigField<R, any>>;\r\n\t@Input() gtOptions: any;\r\n\t@Input() gtInfo: any;\r\n\t@Input() data: any;\r\n\r\n\t@Output() redrawEvent = new EventEmitter<R>();\r\n\t@Output() toggleRowEvent = new EventEmitter<R>();\r\n\t@Input() gtEvent: any;\r\n\r\n\tnewInstance(instance: C): void {\r\n\t\tinstance.row = this.row;\r\n\t\tinstance.columnWidth = this.columnWidth;\r\n\t\tinstance.gtSettings = this.gtSettings;\r\n\t\tinstance.gtFields = this.gtFields;\r\n\t\tinstance.gtOptions = this.gtOptions;\r\n\t\tinstance.gtInfo = this.gtInfo;\r\n\t\tinstance.data =\r\n\t\t\ttypeof this.data === 'function' ? this.data(this.row) : this.data;\r\n\t\tinstance.redrawEvent.subscribe(this.redrawEvent);\r\n\t\tinstance.toggleRowEvent.subscribe(this.toggleRowEvent);\r\n\t\tinstance.gtEvent = this.gtEvent;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtRowMeta } from '../interfaces/gt-row-meta';\r\n\r\n@Pipe({\r\n\tname: 'gtMeta'\r\n})\r\nexport class GtMetaPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tallRows: Array<GtRow>,\r\n\t\trowIndex?: string,\r\n\t\tpage?: number,\r\n\t\trecordLength?: number\r\n\t): Array<GtRow> {\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tif (!allRows[i].$$gtRowId) {\r\n\t\t\t\tallRows[i].$$gtRowId = rowIndex\r\n\t\t\t\t\t? allRows[i][rowIndex]\r\n\t\t\t\t\t: page\r\n\t\t\t\t\t\t? page * recordLength +\r\n\t\t\t\t\t\t  i +\r\n\t\t\t\t\t\t  '_' +\r\n\t\t\t\t\t\t  Math.random()\r\n\t\t\t\t\t\t\t\t.toString(36)\r\n\t\t\t\t\t\t\t\t.substr(2, 16)\r\n\t\t\t\t\t\t: i +\r\n\t\t\t\t\t\t  '_' +\r\n\t\t\t\t\t\t  Math.random()\r\n\t\t\t\t\t\t\t\t.toString(36)\r\n\t\t\t\t\t\t\t\t.substr(2, 16);\r\n\t\t\t}\r\n\t\t\tif (!allRows[i].$$gtInitialRowIndex) {\r\n\t\t\t\tallRows[i].$$gtInitialRowIndex = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allRows;\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tOnChanges,\r\n\tOutput,\r\n\tInput,\r\n\tEventEmitter,\r\n\tType,\r\n\tSimpleChanges,\r\n\tRenderer2,\r\n\tOnDestroy\r\n} from '@angular/core';\r\nimport {\r\n\tGtConfig,\r\n\tGtConfigField,\r\n\tGtConfigSetting,\r\n\tGtTexts,\r\n\tGtInformation,\r\n\tGtExpandedRow,\r\n\tGtRow,\r\n\tGtOptions,\r\n\tGtRowMeta,\r\n\tGtRenderField,\r\n\tGtEvent\r\n} from '..';\r\nimport { GtMetaPipe } from '../pipes/gt-meta.pipe';\r\n\r\n@Component({\r\n\tselector: 'generic-table',\r\n\ttemplate: `<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"gtFields && gtSettings && (gtFields | gtVisible:gtSettings:refreshPipe).length > 0\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-sort-label\" *ngIf=\"gtOptions.stack\">{{gtTexts.sortLabel}}</th>\r\n    <th *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe\"\r\n        ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{column.sortEnabled ? 'sort-'+column.sort:''}} {{column.sortEnabled && column.sortOrder >= 0  ? 'sort-order-'+column.sortOrder:''}} {{ gtFields | gtColumnClass:column }}\"\r\n        (click)=\"column.sortEnabled ? gtSort(column.objectKey,$event):'';\">\r\n      <span *ngIf=\"!(gtFields | gtProperty:column.objectKey:'header')\">{{gtFields | gtProperty:column.objectKey:'name'}}</span>\r\n      <gt-custom-component-factory *ngIf=\"(gtFields | gtProperty:column.objectKey:'header')\"\r\n                                   [type]=\"(gtFields | gtProperty:column.objectKey:'header')?.type\"\r\n                                   [injector]=\"(gtFields | gtProperty:column.objectKey:'header')?.injector\"\r\n                                   [column]=\"gtFields | gtProperty:column.objectKey:'name'\"></gt-custom-component-factory>\r\n      <gt-checkbox *ngIf=\"(gtFields | gtProperty:column.objectKey:'columnComponent')?.type === 'checkbox'\" [checked]=\"(gtOptions.lazyLoad ? lazyAllSelected:selectedRows.length === gtData.length)\" (changed)=\"toggleAllRows()\"></gt-checkbox>\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <ng-template\r\n    [ngIf]=\"gtTotals && (gtOptions.lazyLoad === false ? (gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length).length > 0 : gtData.length > 0)\">\r\n    <thead class=\"gt-totals\">\r\n    <tr *ngFor=\"let total of gtTotals | gtTotalsPosition\">\r\n      <td *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe;let i = index;\"\r\n          ngClass=\"{{column.objectKey +'-totals-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{ gtFields | gtColumnClass:column }}\">\r\n        <span *ngIf=\"i === 0\" class=\"float-left\">{{total.name}}</span><span\r\n        [innerHTML]=\"total.fields[column.objectKey] | gtTotals:(total.update === false || gtOptions.lazyLoad === true) ? gtData:(gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length):column.objectKey:refreshTotals\"></span>\r\n      </td>\r\n    </tr>\r\n    </thead>\r\n    <tfoot class=\"gt-totals\">\r\n    <tr *ngFor=\"let total of gtTotals | gtTotalsPosition:'footer'\">\r\n      <td *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe;let i = index;\"\r\n          ngClass=\"{{column.objectKey +'-totals-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{ gtFields | gtColumnClass:column }}\">\r\n        <span *ngIf=\"i === 0\" class=\"float-left\">{{total.name}}</span><span\r\n        [innerHTML]=\"total.fields[column.objectKey] | gtTotals:(total.update === false || gtOptions.lazyLoad === true) ? gtData:(gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length):column.objectKey:refreshTotals\"></span>\r\n      </td>\r\n    </tr>\r\n    </tfoot>\r\n  </ng-template>\r\n  <tbody *ngIf=\"gtData && gtInfo\">\r\n  <ng-template class=\"table-rows\" ngFor let-row let-last=\"last\" [ngForTrackBy]=\"trackByFn\"\r\n               [ngForOf]=\"gtOptions.lazyLoad && gtInfo ? (gtData[gtInfo.pageCurrent-1]) : (gtData | gtFilter:gtInfo.filter:gtInfo:refreshFilter:gtData.length | gtSearch:gtInfo.searchTerms:gtInfo:gtSettings:gtFields:gtData.length | gtOrderBy:sortOrder:gtFields:refreshSorting:gtData.length | gtChunk:gtInfo:gtInfo.recordLength:gtInfo.pageCurrent:refreshPageArray:gtData.length:gtEvent:data | gtRowClass:gtFields)\">\r\n    <tr [ngClass]=\"{'row-selected':metaInfo[row.$$gtRowId]?.isSelected, 'row-open':metaInfo[row.$$gtRowId]?.isOpen, 'row-loading':loading, 'row-expandable':gtRowComponent}\"\r\n        class=\"{{row.$$gtRowClass}}\"\r\n        (click)=\"gtOptions.rowSelection ? toggleSelect(row):rowClick(row, $event)\">\r\n      <td *ngFor=\"let column of row | gtRender:gtSettings:gtFields:refreshPipe:loading:gtOptions.highlightSearch:gtInfo.searchTerms;trackBy:trackByColumnFn\"\r\n          ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{(gtFields | gtProperty:column.objectKey:'inlineEdit') ? 'gt-inline-edit':''}} {{column.edited ? 'gt-edited':''}} {{ gtFields | gtColumnClass:column:row }}\">\r\n                        <span class=\"gt-row-label\"\r\n                              *ngIf=\"gtOptions.stack\">{{(gtFields | gtProperty:column.objectKey:'stackedHeading') ? (gtFields | gtProperty:column.objectKey:'stackedHeading') : (gtFields | gtProperty:column.objectKey:'name')}}</span>\r\n        <gt-custom-component-factory *ngIf=\"column.columnComponent && column.columnComponent.type !== 'checkbox'\" class=\"gt-row-content\"\r\n                                     [type]=\"column.columnComponent.type\"\r\n                                     [injector]=\"column.columnComponent.injector\" [row]=\"row\"\r\n                                     [column]=\"column\" (redrawEvent)=\"redraw($event)\"\r\n                                     [searchTerms]=\"gtInfo.searchTerms\"  (searchEvent)=\"redraw($event)\"\r\n                                     (click)=\"column.click ? column.click(row,column,$event):'';column.expand ? toggleCollapse(row, column.expand):''\"></gt-custom-component-factory>\r\n        <span *ngIf=\"!column.columnComponent && (!(gtFields | gtProperty:column.objectKey:'inlineEdit') || ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | async) || (!((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsEditable:row:refreshPipe)))\"\r\n              class=\"gt-row-content\" [innerHTML]=\"column.renderValue\"\r\n              (click)=\"column.click ? column.click(row,column,$event):'';column.expand ? toggleCollapse(row, column.expand):''\"></span>\r\n        <ng-template\r\n          [ngIf]=\"!column.columnComponent && (((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsObservable) && ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | async) || ((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active | gtIsEditable:row:refreshPipe))\">\r\n          <ng-template [ngIf]=\"([true,'email','number','password', 'text'].indexOf((gtFields | gtProperty:column.objectKey:'inlineEdit').type) !== -1) || !(gtFields | gtProperty:column.objectKey:'inlineEdit').type\">\r\n            <input class=\"inline-edit\" [attr.type]=\"!(gtFields | gtProperty:column.objectKey:'inlineEdit').type ? 'text' : !((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable) ? (gtFields | gtProperty:column.objectKey:'inlineEdit').type:(gtFields | gtProperty:column.objectKey:'inlineEdit').type | async\" [(ngModel)]=\"column.renderValue\"\r\n                   (input)=\"gtUpdateColumn($event,row, column)\">\r\n            <span class=\"gt-inline-edit-notice\">{{gtTexts.inlineEditEdited}}</span>\r\n          </ng-template>\r\n          <gt-dropdown\r\n            *ngIf=\"(((gtFields | gtProperty:column.objectKey:'inlineEdit').type) && ((gtFields | gtProperty:column.objectKey:'inlineEdit').type).length > 0) || ((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable)\"\r\n            [options]=\"!((gtFields | gtProperty:column.objectKey:'inlineEdit').type | gtIsObservable) ? (gtFields | gtProperty:column.objectKey:'inlineEdit').type : (gtFields | gtProperty:column.objectKey:'inlineEdit').type | async\"\r\n            [id]=\"'_' + row.$$gtRowId + '_' + column.objectKey\"\r\n            [(selected)]=\"column.renderValue\" (selectedChange)=\"gtDropdownSelect(row, column)\">Add\r\n            inline editing module\r\n          </gt-dropdown>\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"!column.columnComponent && !((gtFields | gtProperty:column.objectKey:'inlineEdit')?.active) \">\r\n          <ng-template\r\n            [ngIf]=\"[true,'email','number','password'].indexOf(gtFields | gtProperty:column.objectKey:'inlineEdit') !== -1\">\r\n            <input class=\"inline-edit\" [attr.type]=\"(gtFields | gtProperty:column.objectKey:'inlineEdit') === true ? 'text':(gtFields | gtProperty:column.objectKey:'inlineEdit')\" [(ngModel)]=\"column.renderValue\"\r\n                   (input)=\"gtUpdateColumn($event,row, column)\">\r\n            <span class=\"gt-inline-edit-notice\">{{gtTexts.inlineEditEdited}}</span>\r\n          </ng-template>\r\n          <gt-dropdown\r\n            *ngIf=\"(gtFields | gtProperty:column.objectKey:'inlineEdit') && [true,'email','number','password'].indexOf(gtFields | gtProperty:column.objectKey:'inlineEdit') === -1\"\r\n            [options]=\"gtFields | gtProperty:column.objectKey:'inlineEdit'\"\r\n            [id]=\"'_' + row.$$gtRowId + '_' + column.objectKey\"\r\n            [(selected)]=\"column.renderValue\" (selectedChange)=\"gtDropdownSelect(row, column)\">Add\r\n            inline editing module\r\n          </gt-dropdown>\r\n        </ng-template>\r\n        <gt-checkbox *ngIf=\"column.columnComponent && column.columnComponent.type === 'checkbox'\" [checked]=\"metaInfo[row.$$gtRowId]?.isSelected\" (changed)=\"toggleSelect(row)\"></gt-checkbox>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"row-expanded\" *ngIf=\"metaInfo[row.$$gtRowId]?.isOpen\">\r\n      <td [attr.colspan]=\"(gtFields | gtVisible:gtSettings:refreshPipe).length\">\r\n        <gt-expanding-row [row]=\"row\"\r\n                          [type]=\"expandedRow.component ? expandedRow.component:gtRowComponent\"\r\n                          [columnWidth]=\"columnWidth\"\r\n                          [gtFields]=\"gtFields\"\r\n                          [gtOptions]=\"gtOptions\"\r\n                          [gtEvent]=\"gtEvent\"\r\n                          [gtInfo]=\"gtInfo\"\r\n                          [gtSettings]=\"gtSettings\"\r\n                          [data]=\"expandedRow.data ? expandedRow.data:row\"\r\n                          (redrawEvent)=\"redraw($event)\"\r\n                          (toggleRowEvent)=\"toggleCollapse($event)\"></gt-expanding-row>\r\n      </td>\r\n    </tr>\r\n    <tr *ngIf=\"gtOptions.reportColumnWidth && last\">\r\n      <td style=\"padding: 0; border:none;\"\r\n          *ngFor=\"let column of gtSettings | gtVisible:gtSettings:refreshPipe\" gtColumnWidth\r\n          [objectKey]=\"column.objectKey\" [widths]=\"columnWidth\"></td>\r\n    </tr>\r\n  </ng-template>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && (gtInfo.searchTerms || gtInfo.filter) && !loading\">\r\n    <td class=\"gt-no-matching-results\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">\r\n      {{gtTexts.noMatchingData}}\r\n    </td>\r\n  </tr>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && !(gtInfo.searchTerms || gtInfo.filter) && !loading\">\r\n    <td class=\"gt-no-results\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">{{gtTexts.noData}}\r\n    </td>\r\n  </tr>\r\n  <tr *ngIf=\"gtInfo.pageTotal === 0 && loading\">\r\n    <td class=\"gt-loading-data\" [attr.colspan]=\"(gtFields | gtVisible:gtSettings).length\">{{gtTexts.loading}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"gtFields && gtSettings && (gtFields | gtVisible:gtSettings:refreshPipe).length === 0\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-no-visible-columns\">{{gtTexts.noVisibleColumnsHeading}}</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td class=\"gt-no-visible-columns\">{{gtTexts.noVisibleColumns}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<table class=\"table\" ngClass=\"{{gtClasses}} {{gtOptions.stack ? 'table-stacked':''}}\"\r\n       *ngIf=\"!gtFields || !gtSettings\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"gt-loading-config\">&nbsp;</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td class=\"gt-loading-config\">&nbsp;</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n`\r\n})\r\nexport class GenericTableComponent<R extends GtRow, C extends GtExpandedRow<R>>\r\n\timplements OnInit, OnChanges, OnDestroy {\r\n\tget gtRowComponent(): Type<C> {\r\n\t\treturn this._gtRowComponent;\r\n\t}\r\n\r\n\tget hasEdits(): boolean {\r\n\t\treturn Object.keys(this.editedRows).length > 0;\r\n\t}\r\n\r\n\tget gtOptions(): GtOptions {\r\n\t\treturn this._gtOptions;\r\n\t}\r\n\r\n\tget gtTotals(): any {\r\n\t\treturn this._gtTotals;\r\n\t}\r\n\r\n\tget gtFields(): GtConfigField<R, any>[] {\r\n\t\treturn this._gtFields;\r\n\t}\r\n\r\n\tget gtSettings(): GtConfigSetting[] {\r\n\t\treturn this._gtSettings;\r\n\t}\r\n\r\n\tget gtData(): Array<any> {\r\n\t\treturn this._gtData;\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtOptions(value: GtOptions) {\r\n\t\tthis._gtOptions = value;\r\n\r\n\t\t// if number of rows is passed and if number of rows differs from current record length...\r\n\t\tif (\r\n\t\t\tthis.gtOptions.numberOfRows &&\r\n\t\t\tthis.gtInfo.recordLength !== this.gtOptions.numberOfRows\r\n\t\t) {\r\n\t\t\t// ...update record length and redraw table\r\n\t\t\tthis.gtInfo.recordLength = this.gtOptions.numberOfRows;\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\r\n\t\t// ...extend gtOptions default values with values passed into component\r\n\t\tthis._gtOptions = <GtOptions>this.extend(\r\n\t\t\tthis.gtDefaultOptions,\r\n\t\t\tthis._gtOptions\r\n\t\t);\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtTotals(value: any) {\r\n\t\tthis._gtTotals = value;\r\n\t}\r\n\t@Input()\r\n\tset gtFields(value: GtConfigField<R, any>[]) {\r\n\t\tthis._gtFields = value;\r\n\t\tconst COLUMNS_WITH_CLASS_NAMES = this._gtFields\r\n\t\t\t.map(column => column)\r\n\t\t\t.filter(column => column.classNames);\r\n\t\t// TODO: remove deprecated warning when setting has been removed\r\n\t\tif (COLUMNS_WITH_CLASS_NAMES.length > 0) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'Field setting \"classNames\" have been deprecated in favor for \"columnClass\" and will be removed in the future, please update field settings for column with object key: ' +\r\n\t\t\t\t\tCOLUMNS_WITH_CLASS_NAMES[0].objectKey\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t@Input()\r\n\tset gtSettings(value: GtConfigSetting[]) {\r\n\t\tthis._gtSettings = value;\r\n\r\n\t\t// loop through current settings\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t// set sort enabled/disabled setting\r\n\t\t\tthis._gtSettings[i].sortEnabled =\r\n\t\t\t\tthis._gtSettings[i].sortEnabled !== false\r\n\t\t\t\t\t? (this._gtSettings[i].sortEnabled = !(\r\n\t\t\t\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') !== -1\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: false;\r\n\r\n\t\t\t// check if sorting is undefined...\r\n\t\t\tif (typeof this._gtSettings[i].sort === 'undefined') {\r\n\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t}\r\n\r\n\t\t\t// check if column order is undefined...\r\n\t\t\tif (\r\n\t\t\t\ttypeof this._gtSettings[i].columnOrder === 'undefined' &&\r\n\t\t\t\tthis._gtSettings[i].enabled !== false\r\n\t\t\t) {\r\n\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\tthis._gtSettings[i].columnOrder = this._gtSettings[i - 1]\r\n\t\t\t\t\t? this._gtSettings[i - 1].columnOrder + 1\r\n\t\t\t\t\t: 0;\r\n\t\t\t}\r\n\r\n\t\t\t// check if column lock settings are undefined...\r\n\t\t\tif (typeof this._gtSettings[i].lockSettings === 'undefined') {\r\n\t\t\t\t// ...if so, set lock settings to false unless field is disabled (enable === false)\r\n\t\t\t\tthis._gtSettings[i].lockSettings =\r\n\t\t\t\t\tthis._gtSettings[i].enabled === false || false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.restructureSorting();\r\n\t}\r\n\t@Input()\r\n\tset gtData(initialData: Array<any>) {\r\n\t\tconst data = this._gtOptions.mutateData\r\n\t\t\t? [...initialData]\r\n\t\t\t: this.cloneDeep(initialData);\r\n\t\tif (this.gtOptions.lazyLoad && this.gtInfo) {\r\n\t\t\tthis.gtMetaPipe.transform(\r\n\t\t\t\tdata,\r\n\t\t\t\tthis.gtOptions.rowIndex,\r\n\t\t\t\tthis.gtInfo.pageCurrent - 1,\r\n\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t);\r\n\t\t\tif (this.lazyAllSelected) {\r\n\t\t\t\tconst UNIQUE_ROWS = this.selectedRows.map(row => row.$$gtRowId);\r\n\t\t\t\tdata.map(row => {\r\n\t\t\t\t\tif (UNIQUE_ROWS.indexOf(row.$$gtRowId) === -1) {\r\n\t\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis._updateMetaInfo(this.selectedRows, 'isSelected', true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gtMetaPipe.transform(data, this.gtOptions.rowIndex);\r\n\t\t}\r\n\t\tif (this.gtOptions.rowSelectionInitialState) {\r\n\t\t\tdata.map(row => {\r\n\t\t\t\tconst selected =\r\n\t\t\t\t\ttypeof this.gtOptions.rowSelectionInitialState === 'function'\r\n\t\t\t\t\t\t? this.gtOptions.rowSelectionInitialState(row)\r\n\t\t\t\t\t\t: this.gtOptions.rowSelectionInitialState;\r\n\t\t\t\tif (selected) {\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId] = { isSelected: true };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId].isSelected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (\r\n\t\t\tthis.gtOptions.rowExpandInitialState &&\r\n\t\t\tthis.gtOptions.rowExpandInitialComponent\r\n\t\t) {\r\n\t\t\tdata.map(row => {\r\n\t\t\t\tconst expanded =\r\n\t\t\t\t\ttypeof this.gtOptions.rowExpandInitialState === 'function'\r\n\t\t\t\t\t\t? this.gtOptions.rowExpandInitialState(row)\r\n\t\t\t\t\t\t: this.gtOptions.rowExpandInitialState;\r\n\t\t\t\tthis.expandedRow = this.gtOptions.rowExpandInitialComponent;\r\n\r\n\t\t\t\tif (expanded) {\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId] = { isOpen: true };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId].isOpen = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._gtData = data;\r\n\t}\r\n\r\n\t@Input()\r\n\tset gtRowComponent(value: Type<C>) {\r\n\t\tconsole.warn(\r\n\t\t\t'GtRowComponent has been deprecated and support will be removed in a future release, see https://github.com/hjalmers/angular-generic-table/issues/34'\r\n\t\t);\r\n\t\tthis._gtRowComponent = value;\r\n\t}\r\n\r\n\tpublic columnWidth: Object = {};\r\n\tpublic configObject: GtConfig<R>;\r\n\tpublic sortOrder: Array<any> = [];\r\n\tpublic metaInfo: { [gtRowId: string]: GtRowMeta } = {};\r\n\tpublic selectedRows: Array<GtRow> = [];\r\n\tpublic openRows: Array<GtRow> = [];\r\n\tprivate _gtSettings: GtConfigSetting[] = [];\r\n\tprivate _gtFields: GtConfigField<R, any>[] = [];\r\n\tprivate _gtData: Array<any>;\r\n\tprivate _gtTotals: any;\r\n\tprivate _gtRowComponent: Type<C>;\r\n\tpublic expandedRow: {\r\n\t\tcomponent: Type<C>;\r\n\t\tdata?: Array<any>;\r\n\t};\r\n\tpublic gtDefaultTexts: GtTexts = {\r\n\t\tloading: 'Loading...',\r\n\t\tnoData: 'No data',\r\n\t\tnoMatchingData: 'No data matching results found',\r\n\t\tnoVisibleColumnsHeading: 'No visible columns',\r\n\t\tnoVisibleColumns: 'Please select at least one column to be visible.',\r\n\t\ttableInfo:\r\n\t\t\t'Showing #recordFrom to #recordTo of #recordsAfterSearch entries.',\r\n\t\ttableInfoAfterSearch:\r\n\t\t\t'Showing  #recordFrom to #recordTo of #recordsAfterSearch entries (filtered from a total of #recordsAll entries).',\r\n\t\tcsvDownload: 'download',\r\n\t\tsortLabel: 'Sort:',\r\n\t\tpaginateNext: 'Next page',\r\n\t\tpaginatePrevious: 'Previous page',\r\n\t\tinlineEditEdited: 'Press enter to save'\r\n\t};\r\n\t@Input() gtTexts: GtTexts = this.gtDefaultTexts;\r\n\t@Input() gtClasses: string;\r\n\t@Output() gtEvent: EventEmitter<GtEvent> = new EventEmitter();\r\n\tpublic gtDefaultOptions: GtOptions = {\r\n\t\tcsvDelimiter: ';',\r\n\t\tstack: false,\r\n\t\tlazyLoad: false,\r\n\t\tcache: false,\r\n\t\tdebounceTime: 200,\r\n\t\thighlightSearch: false,\r\n\t\trowSelection: false,\r\n\t\trowSelectionAllowMultiple: true,\r\n\t\trowExpandAllowMultiple: true,\r\n\t\tnumberOfRows: 10,\r\n\t\treportColumnWidth: false,\r\n\t\tallowUnsorted: true,\r\n\t\tmutateData: true\r\n\t};\r\n\tprivate _gtOptions: GtOptions = this.gtDefaultOptions;\r\n\tpublic store: Array<any> = [];\r\n\tpublic loading = true;\r\n\tprivate debounceTimer: void = null;\r\n\tpublic loadingProperty: string;\r\n\tpublic lazyAllSelected = false;\r\n\r\n\t@Input()\r\n\tgtInfo: GtInformation = {\r\n\t\tpageCurrent: 1,\r\n\t\tpageTotal: 0,\r\n\t\trecordFrom: 0,\r\n\t\trecordTo: 0,\r\n\t\trecordLength: this.gtOptions.numberOfRows,\r\n\t\trecordsAll: 0,\r\n\t\trecordsAfterFilter: 0,\r\n\t\trecordsAfterSearch: 0\r\n\t};\r\n\r\n\tpublic refreshPipe = false;\r\n\tpublic refreshTotals = false;\r\n\tpublic refreshSorting = false;\r\n\tpublic refreshFilter = false;\r\n\tpublic refreshPageArray = false;\r\n\tprivate globalInlineEditListener: Function;\r\n\tpublic editedRows: {\r\n\t\t[key: string]: {\r\n\t\t\tchanges: { [key: string]: GtRenderField<GtRow, any> };\r\n\t\t\trow: GtRow;\r\n\t\t};\r\n\t} = {};\r\n\r\n\tpublic data: { exportData: Array<any> } = { exportData: [] }; // Store filtered data for export\r\n\r\n\tconstructor(private renderer: Renderer2, private gtMetaPipe: GtMetaPipe) {\r\n\t\tthis.gtEvent.subscribe(($event: GtEvent) => {\r\n\t\t\tif ($event.name === 'gt-info') {\r\n\t\t\t\tthis.updateRecordRange();\r\n\t\t\t}\r\n\t\t\tif ($event.name === 'gt-row-updated') {\r\n\t\t\t\tthis.updateTotals();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sort table by object key.\r\n\t * @param objectKey - name of key to sort on.\r\n\t * @param event - such as key press during sorting.\r\n\t */\r\n\tpublic gtSort = function(objectKey: string, event: any) {\r\n\t\tthis.inlineEditCancel(); // cancel inline editing\r\n\r\n\t\t// loop through current settings\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].objectKey === objectKey) {\r\n\t\t\t\t// check if sorting is disabled...\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') !== -1\r\n\t\t\t\t) {\r\n\t\t\t\t\t// ...if so, exit function without applying any sorting\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t/* check if sorting is undefined... */ typeof this._gtSettings[i]\r\n\t\t\t\t\t\t.sort === 'undefined'\r\n\t\t\t\t) {\r\n\t\t\t\t\t// ...is so, set sorting property to enable\r\n\t\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check length\r\n\t\tconst ctrlKey = event.metaKey || event.ctrlKey;\r\n\t\tconst sort = this.sortOrder.slice(0);\r\n\r\n\t\tlet match = -1;\r\n\t\tlet matchDesc = -1;\r\n\t\tlet pos = -1;\r\n\r\n\t\t// check if property already exits\r\n\t\tfor (let i = 0; i < sort.length; i++) {\r\n\t\t\tconst hit = sort[i].indexOf(objectKey);\r\n\t\t\tif (hit !== -1) {\r\n\t\t\t\tmatch = this.sortOrder.indexOf(objectKey);\r\n\t\t\t\tmatchDesc =\r\n\t\t\t\t\tmatch === -1 ? this.sortOrder.indexOf('-' + objectKey) : match;\r\n\t\t\t\tpos = Math.max(match, matchDesc);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if ctrl key or meta key is press together with sort...\r\n\t\tif (ctrlKey) {\r\n\t\t\tif (this.sortOrder[this.sortOrder.length - 1] === '$$gtInitialRowIndex') {\r\n\t\t\t\tthis.sortOrder.pop();\r\n\t\t\t}\r\n\t\t\tswitch (pos) {\r\n\t\t\t\t// ...and property is not sorted before...\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\t// ...add property to sorting\r\n\t\t\t\t\tthis.sortOrder.push(objectKey);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// ...and property is sorted before...\r\n\t\t\t\t\tif (match !== -1) {\r\n\t\t\t\t\t\t// ...change from asc to desc if sorted asc\r\n\t\t\t\t\t\tthis.sortOrder[pos] = '-' + objectKey;\r\n\t\t\t\t\t} else if (this.sortOrder.length > 1) {\r\n\t\t\t\t\t\t// ...remove sorting if sorted desc\r\n\t\t\t\t\t\tif (ctrlKey) {\r\n\t\t\t\t\t\t\tthis.sortOrder[pos] = objectKey;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.sortOrder.splice(pos, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (this.sortOrder.length === 1) {\r\n\t\t\t\t\t\t// ...set sorting to asc if only sorted property\r\n\t\t\t\t\t\tthis.sortOrder[pos] = objectKey;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t/* if ctrl key or meta key is not press together with sort... */\r\n\t\t\tswitch (pos) {\r\n\t\t\t\t// ...and property is not sorted before...\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\t// ...sort by property\r\n\t\t\t\t\tthis.sortOrder = [objectKey];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// ...change from desc to asc and vise versa\r\n\t\t\t\t\tthis.sortOrder =\r\n\t\t\t\t\t\tmatch !== -1\r\n\t\t\t\t\t\t\t? ['-' + objectKey]\r\n\t\t\t\t\t\t\t: ctrlKey || !this.gtOptions.allowUnsorted\r\n\t\t\t\t\t\t\t\t? [objectKey]\r\n\t\t\t\t\t\t\t\t: [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update settings object with new sorting information\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].objectKey === objectKey) {\r\n\t\t\t\tswitch (this._gtSettings[i].sort) {\r\n\t\t\t\t\t// if sorted asc...\r\n\t\t\t\t\tcase 'asc':\r\n\t\t\t\t\t\t// ...change to desc\r\n\t\t\t\t\t\tthis._gtSettings[i].sort = 'desc';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// if sorted desc...\r\n\t\t\t\t\tcase 'desc':\r\n\t\t\t\t\t\t// ...change to asc if it's the only sorted property otherwise remove sorting\r\n\t\t\t\t\t\tthis._gtSettings[i].sort =\r\n\t\t\t\t\t\t\t(this.sortOrder.length === 1 && sort.length < 2) ||\r\n\t\t\t\t\t\t\tctrlKey ||\r\n\t\t\t\t\t\t\t!this.gtOptions.allowUnsorted\r\n\t\t\t\t\t\t\t\t? 'asc'\r\n\t\t\t\t\t\t\t\t: 'enable';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// if sorting enabled...\r\n\t\t\t\t\tcase 'enable':\r\n\t\t\t\t\t\t// ...change to asc\r\n\t\t\t\t\t\tthis._gtSettings[i].sort = 'asc';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._gtSettings[i].sortOrder =\r\n\t\t\t\t\tthis._gtSettings[i].sort === 'enable'\r\n\t\t\t\t\t\t? this._gtSettings.length - 1\r\n\t\t\t\t\t\t: this.sortOrder.indexOf(objectKey) === -1\r\n\t\t\t\t\t\t\t? this.sortOrder.indexOf('-' + objectKey)\r\n\t\t\t\t\t\t\t: this.sortOrder.indexOf(objectKey);\r\n\t\t\t} else if (\r\n\t\t\t\tthis._gtSettings[i].sort &&\r\n\t\t\t\tthis._gtSettings[i].sort.indexOf('disable') === -1 &&\r\n\t\t\t\tthis.sortOrder.indexOf(this._gtSettings[i].objectKey) === -1 &&\r\n\t\t\t\tthis.sortOrder.indexOf('-' + this._gtSettings[i].objectKey) === -1\r\n\t\t\t) {\r\n\t\t\t\tthis._gtSettings[i].sort = 'enable';\r\n\t\t\t\tthis._gtSettings[i].sortOrder = this._gtSettings.length - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// refresh sorting pipe\r\n\t\tthis.refreshSorting = !this.refreshSorting;\r\n\t\tthis.refreshPageArray = !this.refreshPageArray;\r\n\r\n\t\t// sort by initial sort order as last resort\r\n\t\tthis.sortOrder.push('$$gtInitialRowIndex');\r\n\r\n\t\t// emit sort event\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-sorting-applied',\r\n\t\t\tvalue: this.sortOrder\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Change number of rows to be displayed.\r\n\t * @param rowLength - total number of rows.\r\n\t * @param reset - should page be reset to first page.\r\n\t */\r\n\tpublic changeRowLength = function(rowLength: any, reset?: boolean) {\r\n\t\tlet lengthValue = isNaN(parseInt(rowLength, 10))\r\n\t\t\t? 0\r\n\t\t\t: parseInt(rowLength, 10);\r\n\t\tlet newPosition = 1;\r\n\r\n\t\tif (!lengthValue && this.gtData) {\r\n\t\t\tlengthValue = this.gtData.length;\r\n\t\t}\r\n\r\n\t\t// if reset is not true and we're not lazy loading data...\r\n\t\tif (reset !== true && this._gtOptions.lazyLoad !== true) {\r\n\t\t\t// ...get current position in record set\r\n\t\t\tconst currentRecord =\r\n\t\t\t\tthis.gtInfo.recordLength * (this.gtInfo.pageCurrent - 1);\r\n\t\t\tconst currentPosition =\r\n\t\t\t\tthis._gtData.indexOf(this._gtData[currentRecord]) + 1;\r\n\r\n\t\t\t// ...get new position\r\n\t\t\tnewPosition = Math.ceil(currentPosition / lengthValue);\r\n\t\t}\r\n\r\n\t\t// change row length\r\n\t\tthis.gtInfo.recordLength = lengthValue;\r\n\r\n\t\t// go to new position\r\n\t\tthis.gtInfo.pageCurrent = newPosition;\r\n\r\n\t\t// if lazy loading data...\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\t// ...replace data with place holders for new data\r\n\t\t\tthis._gtData[0] = this.loadingContent(lengthValue);\r\n\r\n\t\t\t// ...empty current store\r\n\t\t\tthis.store = [];\r\n\t\t}\r\n\r\n\t\t// this.updateRecordRange();\r\n\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-length-changed',\r\n\t\t\tvalue: lengthValue\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Force a redraw of table rows.\r\n\t * As the table uses pure pipes, we need to force a redraw if an object in the array is changed to see the changes.\r\n\t */\r\n\tpublic redraw = function($event?: any) {\r\n\t\tthis.refreshSorting = !this.refreshSorting;\r\n\t\tthis.refreshPageArray = !this.refreshPageArray;\r\n\t\tthis.refreshPipe = !this.refreshPipe;\r\n\t};\r\n\r\n\t/** Update record range. */\r\n\tprivate updateRecordRange() {\r\n\t\tthis.gtInfo.recordFrom =\r\n\t\t\tthis.gtInfo.recordsAfterSearch === 0\r\n\t\t\t\t? 0\r\n\t\t\t\t: (this.gtInfo.pageCurrent - 1) * this.gtInfo.recordLength + 1;\r\n\t\tthis.gtInfo.recordTo =\r\n\t\t\tthis.gtInfo.recordsAfterSearch <\r\n\t\t\tthis.gtInfo.pageCurrent * this.gtInfo.recordLength\r\n\t\t\t\t? this.gtInfo.recordsAfterSearch\r\n\t\t\t\t: this.gtInfo.pageCurrent * this.gtInfo.recordLength;\r\n\t}\r\n\r\n\t/** Update totals. */\r\n\tprivate updateTotals() {\r\n\t\tthis.refreshTotals = !this.refreshTotals;\r\n\t}\r\n\r\n\t/** Go to next page. */\r\n\tpublic nextPage = function() {\r\n\t\tconst page =\r\n\t\t\tthis.gtInfo.pageCurrent === this.gtInfo.pageTotal\r\n\t\t\t\t? this.gtInfo.pageTotal\r\n\t\t\t\t: this.gtInfo.pageCurrent + 1;\r\n\t\tthis.goToPage(page);\r\n\t};\r\n\r\n\t/** Go to previous page. */\r\n\tpublic previousPage = function() {\r\n\t\tconst page =\r\n\t\t\tthis.gtInfo.pageCurrent === 1 ? 1 : this.gtInfo.pageCurrent - 1;\r\n\t\tthis.goToPage(page);\r\n\t};\r\n\r\n\t/** Request more data (used when lazy loading) */\r\n\tprivate getData = function() {\r\n\t\t// ...emit event requesting for more data\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-page-changed-lazy',\r\n\t\t\tvalue: {\r\n\t\t\t\tpageCurrent: this.gtInfo.pageCurrent,\r\n\t\t\t\trecordLength: this.gtInfo.recordLength\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Go to specific page.\r\n\t * @param page - page number.\r\n\t */\r\n\tpublic goToPage = function(page: number) {\r\n\t\tconst previousPage = this.gtInfo.pageCurrent;\r\n\t\tthis.gtInfo.pageCurrent = page;\r\n\t\tthis.inlineEditCancel(); // cancel inline edit\r\n\r\n\t\t// if lazy loading and if page contains no records...\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\t// ...if data for current page contains no entries...\r\n\t\t\tif (\r\n\t\t\t\tthis._gtOptions.cache === false ||\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].length === 0\r\n\t\t\t) {\r\n\t\t\t\t// ...create temporary content while waiting for data\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1] = this.loadingContent(\r\n\t\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t\t);\r\n\t\t\t\tthis.loading = true; // loading true\r\n\t\t\t}\r\n\t\t\t// ...if first entry in current page equals our loading placeholder...\r\n\t\t\tif (\r\n\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1][0][this.loadingProperty] ===\r\n\t\t\t\tthis.gtTexts.loading\r\n\t\t\t) {\r\n\t\t\t\t// ...get data\r\n\t\t\t\tclearTimeout(this.debounceTimer);\r\n\t\t\t\tthis.debounceTimer = setTimeout(() => {\r\n\t\t\t\t\tthis.getData();\r\n\t\t\t\t}, this._gtOptions.debounceTime);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.updateRecordRange();\r\n\r\n\t\t// ...emit page change event\r\n\t\tif (previousPage !== page) {\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-page-changed',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tpageCurrent: this.gtInfo.pageCurrent,\r\n\t\t\t\t\tpagePrevious: previousPage,\r\n\t\t\t\t\trecordLength: this.gtInfo.recordLength\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Get meta data for row.\r\n\t */\r\n\tpublic getRowState(row: R): GtRowMeta {\r\n\t\treturn typeof this.metaInfo[row.$$gtRowId] === 'undefined'\r\n\t\t\t? null\r\n\t\t\t: this.metaInfo[row.$$gtRowId];\r\n\t}\r\n\r\n\t/**\r\n\t * Expand all rows.\r\n\t * @param expandedRow - component to render when rows are expanded.\r\n\t */\r\n\tpublic expandAllRows(expandedRow: { component: Type<C>; data?: any }): void {\r\n\t\tthis.expandedRow = expandedRow;\r\n\t\tthis._toggleAllRowProperty('isOpen', true);\r\n\t}\r\n\r\n\t/**\r\n\t * Collapse all rows.\r\n\t */\r\n\tpublic collapseAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isOpen', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Select all rows.\r\n\t */\r\n\tpublic selectAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isSelected', true);\r\n\t}\r\n\r\n\t/**\r\n\t * Deselect all rows.\r\n\t */\r\n\tpublic deselectAllRows(): void {\r\n\t\tthis._toggleAllRowProperty('isSelected', false);\r\n\t}\r\n\t/**\r\n\t * Toggle all rows.\r\n\t */\r\n\tpublic toggleAllRows(): void {\r\n\t\tif (this._gtOptions.lazyLoad) {\r\n\t\t\tif (!this.lazyAllSelected || this.selectedRows.length === 0) {\r\n\t\t\t\tthis.selectAllRows();\r\n\t\t\t\tthis.lazyAllSelected = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.deselectAllRows();\r\n\t\t\t\tthis.lazyAllSelected = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.selectedRows.length !== this.gtData.length) {\r\n\t\t\t\tthis.selectAllRows();\r\n\t\t\t} else {\r\n\t\t\t\tthis.deselectAllRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle row collapsed state ie. expanded/open or collapsed/closed.\r\n\t * @param row - row object that should be expanded/collapsed.\r\n\t * @param expandedRow - component to render when row is expanded.\r\n\t */\r\n\tpublic toggleCollapse(\r\n\t\trow: GtRow,\r\n\t\texpandedRow?: { component: Type<C>; data?: any }\r\n\t) {\r\n\t\tif (expandedRow) {\r\n\t\t\tthis.expandedRow = expandedRow;\r\n\t\t}\r\n\t\tthis._toggleRowProperty(row, 'isOpen');\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle row selected state ie. selected or not.\r\n\t * @param row - row object that should be selected/deselected.\r\n\t */\r\n\tpublic toggleSelect(row: GtRow) {\r\n\t\tthis._toggleRowProperty(row, 'isSelected');\r\n\t}\r\n\r\n\tpublic rowClick(row: GtRow, $event: MouseEvent) {\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-clicked',\r\n\t\t\tvalue: { row: row, event: $event }\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update row data.\r\n\t * @param row - row object that has been edited.\r\n\t * @param oldValue - row object before edit.\r\n\t */\r\n\tpublic updateRow(row: GtRow, oldValue: GtRow) {\r\n\t\tthis._toggleRowProperty(row, 'isUpdated', oldValue);\r\n\t}\r\n\r\n\t/**\r\n\t * removes a row from the table\r\n\t * @param row - the row object to remove\r\n\t */\r\n\tpublic removeRow(row: GtRow) {\r\n\t\tif (this.isRowSelected(row)) {\r\n\t\t\tthis.toggleSelect(row);\r\n\t\t}\r\n\t\tconst index = this._gtData.indexOf(row);\r\n\t\tthis._gtData.splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * check if a row is selected\r\n\t * @param row - row object\r\n\t */\r\n\tpublic isRowSelected(row: GtRow): boolean {\r\n\t\treturn (\r\n\t\t\tthis.metaInfo[row.$$gtRowId] && this.metaInfo[row.$$gtRowId].isSelected\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Update meta info for all rows, ie. isSelected, isOpen.\r\n\t * @param array - array that holds rows that need to be updated.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param active - should rows be expanded/open, selected.\r\n\t * @param exception - update all rows except this one.\r\n\t */\r\n\tprivate _updateMetaInfo(\r\n\t\tarray: Array<GtRow>,\r\n\t\tproperty: string,\r\n\t\tactive: boolean,\r\n\t\texception?: GtRow\r\n\t) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (!this.metaInfo[array[i].$$gtRowId]) {\r\n\t\t\t\tthis.metaInfo[array[i].$$gtRowId] = {};\r\n\t\t\t}\r\n\t\t\tif (exception && array[i].$$gtRowId === exception.$$gtRowId) {\r\n\t\t\t} else {\r\n\t\t\t\tthis.metaInfo[array[i].$$gtRowId][property] = active;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Push selected/expanded lazy loaded rows to array with meta data.\r\n\t * @param target - array to which rows should be added.\r\n\t * @param source - array that holds rows that should be added.\r\n\t * @returns array with added rows.\r\n\t */\r\n\tprivate _pushLazyRows(\r\n\t\ttarget: Array<GtRow>,\r\n\t\tsource: Array<GtRow>\r\n\t): Array<GtRow> {\r\n\t\tconst UNIQUE_ROWS = target.map(row => row.$$gtRowId);\r\n\t\tfor (let i = 0; i < source.length; i++) {\r\n\t\t\t// only add if not already in list\r\n\t\t\tif (UNIQUE_ROWS.indexOf(source[i].$$gtRowId) === -1) {\r\n\t\t\t\ttarget.push(source[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle meta info for all rows, ie. isSelected, isOpen.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param active - should rows be expanded/open, selected.\r\n\t */\r\n\tprivate _toggleAllRowProperty(property: string, active: boolean) {\r\n\t\tlet eventName: string;\r\n\t\tlet eventValue: any;\r\n\t\tswitch (property) {\r\n\t\t\tcase 'isOpen':\r\n\t\t\t\t// check if multiple expanded rows are allowed...\r\n\t\t\t\tif (this._gtOptions.rowExpandAllowMultiple === false) {\r\n\t\t\t\t\t// ...if not, exit function\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'feature disabled: enable by setting \"rowExpandAllowMultiple = true\"'\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\teventName = 'expand-all';\r\n\t\t\t\t\tthis.openRows = this._gtOptions.lazyLoad\r\n\t\t\t\t\t\t? this._pushLazyRows(\r\n\t\t\t\t\t\t\t\tthis.openRows,\r\n\t\t\t\t\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].slice()\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: this._gtData.slice();\r\n\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventName = 'collapse-all';\r\n\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, active);\r\n\t\t\t\t\tthis.openRows = [];\r\n\t\t\t\t}\r\n\t\t\t\teventValue = {\r\n\t\t\t\t\texpandedRows: this.openRows,\r\n\t\t\t\t\tchangedRow: 'all'\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'isSelected':\r\n\t\t\t\t// check if multi row selection is allowed...\r\n\t\t\t\tif (this._gtOptions.rowSelectionAllowMultiple === false) {\r\n\t\t\t\t\t// ...if not, exit function\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'feature disabled: enable by setting \"rowSelectionAllowMultiple = true\"'\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\teventName = 'select-all';\r\n\t\t\t\t\tthis.selectedRows = this._gtOptions.lazyLoad\r\n\t\t\t\t\t\t? this._pushLazyRows(\r\n\t\t\t\t\t\t\t\tthis.selectedRows,\r\n\t\t\t\t\t\t\t\tthis._gtData[this.gtInfo.pageCurrent - 1].slice()\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: this._gtData.slice();\r\n\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventName = 'deselect-all';\r\n\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, active);\r\n\t\t\t\t\tthis.selectedRows = [];\r\n\t\t\t\t}\r\n\t\t\t\teventValue = {\r\n\t\t\t\t\tselectedRows: this.selectedRows,\r\n\t\t\t\t\tchangedRow: 'all'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-row-' + eventName,\r\n\t\t\tvalue: eventValue\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle meta info for row, ie. isSelected, isOpen.\r\n\t * @param row - row object.\r\n\t * @param property - name of property that should be changed/toggled.\r\n\t * @param propertyValues - optional property values that can be passed.\r\n\t */\r\n\tprivate _toggleRowProperty(\r\n\t\trow: GtRow,\r\n\t\tproperty: string,\r\n\t\tpropertyValues?: any\r\n\t) {\r\n\t\tlet eventName: string;\r\n\t\tlet eventValue: any;\r\n\t\t// make sure gtRowId exists on row object\r\n\t\tif (typeof row.$$gtRowId !== 'undefined') {\r\n\t\t\t// check if meta info exists for row\r\n\t\t\tif (!this.metaInfo[row.$$gtRowId]) {\r\n\t\t\t\t// if not, add object to store meta info\r\n\t\t\t\tthis.metaInfo[row.$$gtRowId] = {};\r\n\t\t\t}\r\n\r\n\t\t\tswitch (property) {\r\n\t\t\t\tcase 'isOpen':\r\n\t\t\t\t\tconst opened = this.metaInfo[row.$$gtRowId][property];\r\n\r\n\t\t\t\t\t// check if multiple expanded rows are allowed...\r\n\t\t\t\t\tif (this._gtOptions.rowExpandAllowMultiple === false) {\r\n\t\t\t\t\t\t// ...if not, collapse all rows except current row\r\n\t\t\t\t\t\tthis._updateMetaInfo(this.openRows, property, false, row);\r\n\t\t\t\t\t\tthis.openRows = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check if row is expanded\r\n\t\t\t\t\tif (!opened) {\r\n\t\t\t\t\t\teventName = 'expand';\r\n\t\t\t\t\t\t// add row to expanded rows\r\n\t\t\t\t\t\tthis.openRows.push(row);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\teventName = 'collapse';\r\n\t\t\t\t\t\t// loop through expanded rows...\r\n\t\t\t\t\t\tfor (let i = 0; i < this.openRows.length; i++) {\r\n\t\t\t\t\t\t\t// if expanded row equals passed row...\r\n\t\t\t\t\t\t\tif (this.openRows[i].$$gtRowId === row.$$gtRowId) {\r\n\t\t\t\t\t\t\t\t// ...remove row from expanded rows...\r\n\t\t\t\t\t\t\t\tthis.openRows.splice(i, 1);\r\n\r\n\t\t\t\t\t\t\t\t// ...and exit loop\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = {\r\n\t\t\t\t\t\texpandedRows: this.openRows,\r\n\t\t\t\t\t\tchangedRow: row\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'isSelected':\r\n\t\t\t\t\tconst selected = this.metaInfo[row.$$gtRowId][property];\r\n\r\n\t\t\t\t\t// check if multi row selection is allowed...\r\n\t\t\t\t\tif (this._gtOptions.rowSelectionAllowMultiple === false) {\r\n\t\t\t\t\t\t// ...if not, deselect all rows except current row\r\n\t\t\t\t\t\tthis._updateMetaInfo(this.selectedRows, property, false, row);\r\n\t\t\t\t\t\tthis.selectedRows = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check if row is selected\r\n\t\t\t\t\tif (!selected) {\r\n\t\t\t\t\t\teventName = 'select';\r\n\t\t\t\t\t\t// add row to selected rows\r\n\t\t\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.gtOptions.lazyLoad && this.lazyAllSelected) {\r\n\t\t\t\t\t\t\tthis.lazyAllSelected = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\teventName = 'deselect';\r\n\t\t\t\t\t\t// loop through selected rows...\r\n\t\t\t\t\t\tfor (let i = 0; i < this.selectedRows.length; i++) {\r\n\t\t\t\t\t\t\t// if selected row equals passed row...\r\n\t\t\t\t\t\t\tif (this.selectedRows[i].$$gtRowId === row.$$gtRowId) {\r\n\t\t\t\t\t\t\t\t// ...remove row from selected rows...\r\n\t\t\t\t\t\t\t\tthis.selectedRows.splice(i, 1);\r\n\r\n\t\t\t\t\t\t\t\t// ...and exit loop\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = {\r\n\t\t\t\t\t\tselectedRows: this.selectedRows,\r\n\t\t\t\t\t\tchangedRow: row\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'isUpdated':\r\n\t\t\t\t\teventName = 'updated';\r\n\t\t\t\t\tconst oldValue = propertyValues;\r\n\t\t\t\t\t// check if edit object exists for row\r\n\t\t\t\t\tif (typeof this.metaInfo[row.$$gtRowId][property] === 'undefined') {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property] = {\r\n\t\t\t\t\t\t\toriginalValue: oldValue,\r\n\t\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\t\tnewValue: row\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property].oldValue = oldValue;\r\n\t\t\t\t\t\tthis.metaInfo[row.$$gtRowId][property].newValue = row;\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventValue = this.metaInfo[row.$$gtRowId][property];\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\tthis.inlineEditCancel(row);\r\n\t\t\t\t\t// this.gtData = [...this.gtData.map((r) => { return{...r}; })];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-row-' + eventName,\r\n\t\t\t\tvalue: eventValue\r\n\t\t\t});\r\n\t\t\tif (property !== 'isUpdated') {\r\n\t\t\t\tthis.metaInfo[row.$$gtRowId][property] = !this.metaInfo[row.$$gtRowId][\r\n\t\t\t\t\tproperty\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update column.\r\n\t * @param $event - key up event.\r\n\t * @param row - row object.\r\n\t * @param column - column object.\r\n\t */\r\n\tpublic gtUpdateColumn(\r\n\t\t$event: KeyboardEvent,\r\n\t\trow: GtRow,\r\n\t\tcolumn: GtRenderField<any, any>\r\n\t) {\r\n\t\tthis._editRow(row, column);\r\n\t}\r\n\r\n\t/**\r\n\t * Dropdown select.\r\n\t * @param row - row object.\r\n\t * @param column - column object.\r\n\t */\r\n\tpublic gtDropdownSelect(row: GtRow, column: GtRenderField<any, any>) {\r\n\t\tconst oldValue = { ...row };\r\n\t\trow[column.objectKey] = column.renderValue;\r\n\t\tthis.updateRow(row, oldValue);\r\n\t}\r\n\r\n\tprivate _editRow(row: GtRow, column: GtRenderField<any, any>) {\r\n\t\tconst OBJECT_KEY = column.objectKey; // declare object key which contains changes\r\n\r\n\t\t// check if cell has changed value\r\n\t\tcolumn.edited = row[column.objectKey] !== column.renderValue;\r\n\t\t// check if row contains changes...\r\n\t\tif (!this.editedRows[row.$$gtRowId]) {\r\n\t\t\t// if not, create an object for the changed row\r\n\t\t\tthis.editedRows[row.$$gtRowId] = {\r\n\t\t\t\tchanges: {}, // create placeholder for changes\r\n\t\t\t\trow: row // store reference to the row that should be updated\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// store changed column under changes if it has been edited\r\n\t\tif (column.edited) {\r\n\t\t\tthis.editedRows[row.$$gtRowId].changes[OBJECT_KEY] = column;\r\n\t\t} else {\r\n\t\t\t// delete change object if column is unchanged\r\n\t\t\tdelete this.editedRows[row.$$gtRowId].changes[OBJECT_KEY];\r\n\t\t\t// check how many columns have been changed\r\n\t\t\tconst CHANGED_COLUMNS = Object.keys(\r\n\t\t\t\tthis.editedRows[row.$$gtRowId].changes\r\n\t\t\t).length;\r\n\t\t\tif (CHANGED_COLUMNS === 0) {\r\n\t\t\t\t// delete row from edited rows if no columns have been edited\r\n\t\t\t\tdelete this.editedRows[row.$$gtRowId];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if no listener is present...\r\n\t\tif (!this.globalInlineEditListener) {\r\n\t\t\t// ...listen for update event\r\n\t\t\tthis._listenForKeydownEvent();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Listen for key down event - listen for key down event during inline edit.\r\n\t */\r\n\tprivate _listenForKeydownEvent() {\r\n\t\t// add global listener for key down events\r\n\t\tthis.globalInlineEditListener = this.renderer.listen(\r\n\t\t\t'document',\r\n\t\t\t'keydown',\r\n\t\t\t$event => {\r\n\t\t\t\tswitch ($event.key) {\r\n\t\t\t\t\tcase 'Enter': // update data object\r\n\t\t\t\t\t\tthis.inlineEditUpdate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Escape': // cancel\r\n\t\t\t\t\t\tthis.inlineEditCancel();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t/**\r\n\t * Inline edit update - accept changes and update row values.\r\n\t */\r\n\tpublic inlineEditUpdate() {\r\n\t\t// loop through rows that have been edited\r\n\t\tObject.keys(this.editedRows).map(key => {\r\n\t\t\tconst ROW = this.editedRows[key].row; // row to update\r\n\t\t\tconst CHANGES = this.editedRows[key].changes; // changes to the row\r\n\r\n\t\t\t// loop through changes in row\r\n\t\t\tObject.keys(CHANGES).map(objectKey => {\r\n\t\t\t\tconst oldValue = { ...ROW };\r\n\t\t\t\tROW[objectKey] = CHANGES[objectKey].renderValue; // update data value\r\n\t\t\t\tthis.updateRow(ROW, oldValue); // update meta info for row and send event\r\n\t\t\t\tCHANGES[objectKey].edited = false; // disable edit mode\r\n\t\t\t});\r\n\t\t});\r\n\t\t// clear rows marked as edited as the rows have been updated\r\n\t\tthis.editedRows = {};\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n\t/**\r\n\t * Inline edit cancel - cancel and reset inline edits.\r\n\t */\r\n\tpublic inlineEditCancel(row?: GtRow) {\r\n\t\tif (row) {\r\n\t\t\tdelete this.editedRows[row.$$gtRowId];\r\n\t\t\t// remove listener\r\n\t\t\tthis._stopListeningForKeydownEvent();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// loop through rows that have been edited\r\n\t\tObject.keys(this.editedRows).map(key => {\r\n\t\t\tconst ROW = this.editedRows[key].row; // row to update\r\n\t\t\tconst CHANGES = this.editedRows[key].changes; // changes to the row\r\n\r\n\t\t\t// loop through changes in row\r\n\t\t\tObject.keys(CHANGES).map(objectKey => {\r\n\t\t\t\tCHANGES[objectKey].renderValue = ROW[objectKey]; // reset rendered value\r\n\t\t\t\tCHANGES[objectKey].edited = false; // disable edit mode\r\n\t\t\t});\r\n\t\t});\r\n\t\t// clear rows marked as edited as the rows have been updated\r\n\t\tthis.editedRows = {};\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n\t/**\r\n\t * Stop listening for key down event - stop listening for key down events passed during inline edit.\r\n\t */\r\n\tprivate _stopListeningForKeydownEvent() {\r\n\t\tif (this.globalInlineEditListener) {\r\n\t\t\tthis.globalInlineEditListener();\r\n\t\t\tthis.globalInlineEditListener = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Apply filter(s).\r\n\t * @param filter - object containing key value pairs, where value should be array of values.\r\n\t */\r\n\tpublic gtApplyFilter(filter: Object) {\r\n\t\tthis.gtInfo.filter = filter;\r\n\t\t// go to first page\r\n\t\tthis.goToPage(1);\r\n\t\tthis.updateTotals();\r\n\t}\r\n\r\n\t/** Clear/remove applied filter(s). */\r\n\tpublic gtClearFilter() {\r\n\t\tthis.gtInfo.filter = false;\r\n\t\tthis.updateTotals();\r\n\t\t// this.updateRecordRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Search\r\n\t * @param value - string containing one or more words\r\n\t */\r\n\tpublic gtSearch(value: string) {\r\n\t\tthis.gtInfo.searchTerms = value;\r\n\t\t// always go to first page when searching\r\n\t\tthis.goToPage(1);\r\n\t\tthis.updateTotals();\r\n\t}\r\n\r\n\t/**\r\n\t * Add rows\r\n\t * @param rows - rows to add\r\n\t * @returns new data array.\r\n\t */\r\n\tpublic gtAdd(rows: Array<R>): ReadonlyArray<R> {\r\n\t\tthis.gtData = [...this.gtData, ...rows];\r\n\t\treturn [...this.gtData];\r\n\t}\r\n\r\n\t/**\r\n\t * Delete row\r\n\t * @param objectKey - object key you want to find match with\r\n\t * @param value - the value that should be deleted\r\n\t * @param match - all: delete all matches, first: delete first match (default)\r\n\t * @returns new data array.\r\n\t */\r\n\tpublic gtDelete(\r\n\t\tobjectKey: string,\r\n\t\tvalue: string | number,\r\n\t\tmatch: 'first' | 'all' = 'first'\r\n\t): ReadonlyArray<R> {\r\n\t\tif (match === 'first') {\r\n\t\t\tfor (let i = 0; i < this.gtData.length; i++) {\r\n\t\t\t\tif (this.gtData[i][objectKey] === value) {\r\n\t\t\t\t\tif (this.isRowSelected(this.gtData[i])) {\r\n\t\t\t\t\t\tthis.toggleSelect(this.gtData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.gtData.splice(i, 1);\r\n\t\t\t\t\tthis.gtData = [...this.gtData];\r\n\t\t\t\t\tif (match === 'first') {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = this.gtData.length; i > 0; i--) {\r\n\t\t\t\tif (this.gtData[i - 1][objectKey] === value) {\r\n\t\t\t\t\tif (this.isRowSelected(this.gtData[i - 1])) {\r\n\t\t\t\t\t\tthis.toggleSelect(this.gtData[i - 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.gtData.splice(i - 1, 1);\r\n\t\t\t\t\tthis.gtData = [...this.gtData];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [...this.gtData];\r\n\t}\r\n\r\n\t/**\r\n\t * Create store to hold previously loaded records.\r\n\t * @param records - total number of records in store.\r\n\t * @param perPage - how many records to show per page.\r\n\t * @returns a nested array to hold records per page.\r\n\t */\r\n\tprivate createStore(records: number, perPage: number): Array<Array<any>> {\r\n\t\tconst stores = Math.ceil(records / perPage);\r\n\t\tconst store: Array<Array<any>> = [];\r\n\t\tfor (let i = 0; i < stores; i++) {\r\n\t\t\tstore[i] = [];\r\n\t\t}\r\n\t\treturn store;\r\n\t}\r\n\r\n\t/**\r\n\t * Create placeholders for rows while loading data from back-end.\r\n\t * @param perPage - how many records to show per page.\r\n\t * @returns an array containing empty records to be presented while fetching real data.\r\n\t */\r\n\tprivate loadingContent(perPage: number) {\r\n\t\t// create row object\r\n\t\tconst rowObject: Object = {\r\n\t\t\t$$loading: true\r\n\t\t};\r\n\t\tlet order = 0;\r\n\r\n\t\t// sort settings by column order\r\n\t\tthis._gtSettings.sort(this.getColumnOrder);\r\n\r\n\t\t// loop through all settings objects...\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t// ...if column is visible and enabled...\r\n\t\t\tif (setting.visible !== false && setting.enabled !== false) {\r\n\t\t\t\t// ...if first column, set value to loading text otherwise leave it empty\r\n\t\t\t\tif (order === 0) {\r\n\t\t\t\t\trowObject[setting.objectKey] = this.gtTexts.loading;\r\n\t\t\t\t\tthis.loadingProperty = setting.objectKey;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trowObject[setting.objectKey] = '';\r\n\t\t\t\t}\r\n\t\t\t\torder++;\r\n\t\t\t} else {\r\n\t\t\t\trowObject[setting.objectKey] = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// create content placeholder\r\n\t\tconst contentPlaceholder: Array<any> = [];\r\n\r\n\t\t// create equal number of rows as rows per page\r\n\t\tfor (let i = 0; i < perPage; i++) {\r\n\t\t\t// ...add temporary row object\r\n\t\t\tcontentPlaceholder.push(rowObject);\r\n\t\t}\r\n\t\treturn contentPlaceholder;\r\n\t}\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by sort order */\r\n\tprivate getSortOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.sortOrder < b.sortOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.sortOrder > b.sortOrder || typeof a.sortOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.columnOrder === undefined) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Create a deep copy of data */\r\n\tprivate cloneDeep = function(o: any) {\r\n\t\treturn JSON.parse(JSON.stringify(o));\r\n\t};\r\n\r\n\t/** Export data as CSV\r\n\t * @param fileName - optional file name (overrides default file name).\r\n\t * @param useBOM - use BOM (byte order marker).\r\n\t */\r\n\tpublic exportCSV(fileName?: string, useBOM: boolean = false) {\r\n\t\tconst data = this.data.exportData;\r\n\t\tlet csv = '';\r\n\t\tconst BOM = '\\uFEFF';\r\n\r\n\t\t// csv export headers\r\n\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\tif (this._gtSettings[i].export !== false) {\r\n\t\t\t\tcsv += this.getProperty(this._gtFields, this._gtSettings[i].objectKey)\r\n\t\t\t\t\t.name;\r\n\r\n\t\t\t\tif (i < this._gtSettings.length - 1) {\r\n\t\t\t\t\tcsv += this._gtOptions.csvDelimiter;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// csv export body\r\n\t\tdata.forEach(row => {\r\n\t\t\tcsv += '\\n';\r\n\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\tif (this._gtSettings[i].export !== false) {\r\n\t\t\t\t\t// get field settings\r\n\t\t\t\t\tconst fieldSetting = this.getProperty(\r\n\t\t\t\t\t\tthis._gtFields,\r\n\t\t\t\t\t\tthis._gtSettings[i].objectKey\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// get export value, if export function is defined use it otherwise check for value function and as a last resort export raw data\r\n\t\t\t\t\tlet exportValue: string =\r\n\t\t\t\t\t\tfieldSetting.export && typeof fieldSetting.export === 'function'\r\n\t\t\t\t\t\t\t? fieldSetting.export(row)\r\n\t\t\t\t\t\t\t: fieldSetting.value && typeof fieldSetting.value === 'function'\r\n\t\t\t\t\t\t\t\t? fieldSetting.value(row)\r\n\t\t\t\t\t\t\t\t: row[this._gtSettings[i].objectKey];\r\n\r\n\t\t\t\t\t// escape export value using double quotes (\") if export value contains delimiter\r\n\t\t\t\t\texportValue =\r\n\t\t\t\t\t\ttypeof exportValue === 'string' &&\r\n\t\t\t\t\t\texportValue.indexOf(this._gtOptions.csvDelimiter) !== -1\r\n\t\t\t\t\t\t\t? '\"' + exportValue + '\"'\r\n\t\t\t\t\t\t\t: exportValue;\r\n\r\n\t\t\t\t\tcsv += exportValue;\r\n\t\t\t\t\tif (i < this._gtSettings.length - 1) {\r\n\t\t\t\t\t\tcsv += this._gtOptions.csvDelimiter;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst blob = new Blob([(useBOM ? BOM : '') + csv], {\r\n\t\t\ttype: 'text/csv;charset=utf-8'\r\n\t\t});\r\n\r\n\t\tif (window.navigator.msSaveOrOpenBlob) {\r\n\t\t\tnavigator.msSaveOrOpenBlob(\r\n\t\t\t\tblob,\r\n\t\t\t\tfileName ? fileName + '.csv' : this.gtTexts.csvDownload + '.csv'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst link = document.createElement('a');\r\n\t\t\tlink.style.display = 'none';\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tif (link.download !== undefined) {\r\n\t\t\t\tlink.setAttribute(\r\n\t\t\t\t\t'href',\r\n\t\t\t\t\t'data:text/csv;charset=utf-8,' +\r\n\t\t\t\t\t\tencodeURIComponent((useBOM ? BOM : '') + csv)\r\n\t\t\t\t); // URL.createObjectURL(blob));\r\n\t\t\t\tlink.setAttribute(\r\n\t\t\t\t\t'download',\r\n\t\t\t\t\tfileName ? fileName + '.csv' : this.gtTexts.csvDownload + '.csv'\r\n\t\t\t\t);\r\n\t\t\t\tdocument.body.appendChild(link);\r\n\t\t\t\tlink.click();\r\n\t\t\t} else {\r\n\t\t\t\tcsv = 'data:text/csv;charset=utf-8,' + (useBOM ? BOM : '') + csv;\r\n\t\t\t\twindow.open(encodeURIComponent(csv));\r\n\t\t\t}\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t}\r\n\r\n\t\t// emit export event\r\n\t\tthis.gtEvent.emit({\r\n\t\t\tname: 'gt-exported-csv',\r\n\t\t\tvalue: fileName ? fileName : this.gtTexts.csvDownload + '.csv'\r\n\t\t});\r\n\t}\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate restructureSorting = function() {\r\n\t\t/** Check and store sort order upon initialization.\r\n\t\t *  This is done by checking sort properties in the settings array of the table, if no sorting is defined\r\n\t\t *  we'll sort the data by the first visible and enabled column in the table(ascending). Please note that actually\r\n\t\t *  sorting have to be done server side when lazy loading data for obvious reasons.  */\r\n\t\t// create sorting array\r\n\t\tconst sorting = [];\r\n\t\tif (this._gtSettings) {\r\n\t\t\t// ...sort settings by sort order\r\n\t\t\tthis._gtSettings.sort(this.getSortOrder);\r\n\r\n\t\t\t// ...loop through settings\r\n\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t\t// ...if sorted ascending...\r\n\t\t\t\tif (setting.sort === 'asc') {\r\n\t\t\t\t\t// ... add to sorting\r\n\t\t\t\t\tsorting.push(setting.objectKey);\r\n\t\t\t\t} else if (setting.sort === 'desc') {\r\n\t\t\t\t\t/* ...else if sorted descending... */ // ... add to sorting\r\n\t\t\t\t\tsorting.push('-' + setting.objectKey);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...if no sorting applied...\r\n\t\t\tif (sorting.length === 0) {\r\n\t\t\t\tsorting.push('$$gtRowId');\r\n\t\t\t\t/*// ...sort settings by column order\r\n\t\t\t\tthis._gtSettings.sort(this.getColumnOrder);\r\n\r\n\t\t\t\t// ...loop through settings\r\n\t\t\t\tfor (let i = 0; i < this._gtSettings.length; i++) {\r\n\t\t\t\t\tconst setting = this._gtSettings[i];\r\n\r\n\t\t\t\t\t// ...if column is enabled and visible...\r\n\t\t\t\t\tif (setting.enabled !== false && setting.visible !== false) {\r\n\t\t\t\t\t\t// ...add first match and exit function\r\n\t\t\t\t\t\tthis.sortOrder = [this._gtSettings[i].objectKey];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.sortOrder.length === 0) {\r\n\t\t\tthis.sortOrder = sorting;\r\n\t\t}\r\n\t};\r\n\r\n\tngOnInit() {\r\n\t\t// if number of row to display from start is set to null or 0...\r\n\t\tif (!this.gtOptions.numberOfRows) {\r\n\t\t\t// ...change row length\r\n\t\t\tthis.changeRowLength(this.gtOptions.numberOfRows);\r\n\t\t}\r\n\t\tthis.restructureSorting();\r\n\t}\r\n\r\n\t/**\r\n\t *  Extend object function.\r\n\t */\r\n\tprivate extend = function(a: Object, b: Object) {\r\n\t\tfor (const key in b) {\r\n\t\t\tif (b.hasOwnProperty(key)) {\r\n\t\t\t\ta[key] = b[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\t// if gt texts have changed...\r\n\t\tif (changes['gtTexts']) {\r\n\t\t\t// ...extend gtOptions default values with values passed into component\r\n\t\t\tthis.gtTexts = <GtTexts>this.extend(this.gtDefaultTexts, this.gtTexts);\r\n\t\t}\r\n\r\n\t\t// if lazy loading data and paging information is available...\r\n\t\tif (this.gtOptions.lazyLoad && this.gtInfo) {\r\n\t\t\t// ...calculate total number of pages\r\n\t\t\tthis.gtInfo.pageTotal = Math.ceil(\r\n\t\t\t\tthis.gtInfo.recordsAfterSearch / this.gtInfo.recordLength\r\n\t\t\t);\r\n\r\n\t\t\t// ...declare store position\r\n\t\t\tconst storePosition = this.gtInfo.pageCurrent - 1;\r\n\r\n\t\t\t// ...and if store is empty or page length has changed...\r\n\t\t\tif (\r\n\t\t\t\tthis.store.length === 0 ||\r\n\t\t\t\tthis.store[0].length !== this.gtInfo.recordLength\r\n\t\t\t) {\r\n\t\t\t\t// ...create store\r\n\t\t\t\tthis.store = this.createStore(\r\n\t\t\t\t\tthis.gtInfo.recordsAfterSearch,\r\n\t\t\t\t\tthis.gtInfo.recordLength\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// ...store retrieved data in store at store position\r\n\t\t\tthis.store[storePosition] = this.gtData;\r\n\t\t\tthis.gtInfo.visibleRecords = [...this.gtData]; // add visible rows\r\n\r\n\t\t\t// replace data with store\r\n\t\t\tthis._gtData = this.store;\r\n\t\t\tthis.loading = false;\r\n\t\t\tthis.updateRecordRange();\r\n\t\t\tthis.gtEvent.emit({\r\n\t\t\t\tname: 'gt-info',\r\n\t\t\t\tvalue: this.gtInfo\r\n\t\t\t});\r\n\t\t} else if (\r\n\t\t\tthis._gtData &&\r\n\t\t\tthis._gtData.length >= 0 &&\r\n\t\t\tchanges['gtData'] &&\r\n\t\t\tchanges['gtData'].previousValue\r\n\t\t) {\r\n\t\t\tthis.loading = false;\r\n\t\t} else if (\r\n\t\t\tchanges['gtData'] &&\r\n\t\t\tchanges['gtData'].firstChange &&\r\n\t\t\tthis._gtData &&\r\n\t\t\tthis._gtData.length > 0\r\n\t\t) {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\ttrackByFn(index: number, item: GtRow) {\r\n\t\treturn item.$$gtRowId;\r\n\t}\r\n\r\n\ttrackByColumnFn(index: number, item: GtConfigField<any, any>) {\r\n\t\treturn item.objectKey;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\t// remove listener\r\n\t\tthis._stopListeningForKeydownEvent();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tChangeDetectorRef,\r\n\tAfterViewChecked,\r\n\tInput\r\n} from '@angular/core';\r\nimport { GenericTableComponent } from './generic-table.component';\r\n\r\n@Component({\r\n\tselector: 'gt-table-info',\r\n\ttemplate: `<span *ngIf=\"genericTable.gtInfo\">{{(customText? customText:genericTable.gtTexts) | gtTableInfo:\r\n\t\tgenericTable.gtInfo:\r\n\t\tgenericTable.gtInfo.recordsAfterSearch:\r\n\t\tgenericTable.gtInfo.recordFrom:\r\n\t\tgenericTable.gtInfo.recordTo:\r\n\t\tgenericTable.gtInfo.recordsAll:\r\n\t\tgenericTable.gtTexts.loading:\r\n\t\tgenericTable.gtTexts.tableInfoAfterSearch}}</span>`\r\n})\r\nexport class GtTableInfoComponent implements AfterViewChecked {\r\n\t@Input() genericTable: GenericTableComponent<any, any>;\r\n\t@Input() customText: string;\r\n\r\n\tconstructor(private _changeDetectionRef: ChangeDetectorRef) {}\r\n\r\n\tngAfterViewChecked() {\r\n\t\tthis._changeDetectionRef.detectChanges();\r\n\t}\r\n}\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\nimport { GtTexts } from '../interfaces/gt-texts';\r\n\r\n@Pipe({\r\n\tname: 'gtTableInfo'\r\n})\r\nexport class TableInfoPipe implements PipeTransform {\r\n\ttransform(\r\n\t\ttexts: GtTexts | string,\r\n\t\tkeys: GtInformation,\r\n\t\trecordsAfterSearch: number,\r\n\t\trecordFrom: number,\r\n\t\trecordTo: number,\r\n\t\trecordsAll: number,\r\n\t\tloading: string,\r\n\t\ttableInfoAfterSearch: string\r\n\t): string {\r\n\t\tlet text = typeof texts === 'object' ? texts.tableInfo : '';\r\n\t\tif (keys.recordsAfterSearch !== keys.recordsAll) {\r\n\t\t\ttext = typeof texts === 'object' ? texts.tableInfoAfterSearch : '';\r\n\t\t}\r\n\t\tfor (const key in keys) {\r\n\t\t\tif (keys.hasOwnProperty(key)) {\r\n\t\t\t\tconst searchString = new RegExp('#' + key, 'g');\r\n\t\t\t\ttext = text.replace(searchString, keys[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GenericTableComponent } from './generic-table.component';\r\n\r\n@Component({\r\n\tselector: 'gt-pagination',\r\n\ttemplate: `<nav class=\"gt-pagination\" aria-label=\"Table navigation\" *ngIf=\"genericTable && genericTable.gtInfo && ready && genericTable.gtData?.length > 0\" [ngClass]=\"{'no-data':genericTable.gtInfo.pageTotal === 0}\">\r\n  <ul class=\"pagination\" [ngClass]=\"gtClasses\">\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.gtInfo.pageCurrent === 1 || genericTable.loading }\"><a class=\"page-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent > 1 && genericTable.previousPage()\" [attr.aria-label]=\"genericTable.gtTexts.paginatePrevious\"><span aria-hidden=\"true\">&laquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginatePrevious}}</span></a></li>\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.loading && genericTable.gtInfo.pageCurrent !== page, 'active' : genericTable.gtInfo.pageCurrent === page }\" *ngFor=\"let page of genericTable.gtInfo.pageTotal | gtPaginationPipe:genericTable.gtInfo.pageCurrent\"><a class=\"page-link\" [tabindex]=\"page === true ? -1:0\" href=\"javascript:void(0);\" (click)=\"page === true ? '':genericTable.goToPage(page)\">{{page === true ? '&hellip;':page}}</a></li>\r\n    <li class=\"page-item\" [ngClass]=\"{'disabled' : genericTable.gtInfo.pageCurrent === genericTable.gtInfo.pageTotal || genericTable.loading }\"><a class=\"page-link gt-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent !== genericTable.gtInfo.pageTotal && genericTable.nextPage()\" [attr.aria-label]=\"genericTable.gtTexts.paginateNext\"><span aria-hidden=\"true\">&raquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginateNext}}</span></a></li>\r\n  </ul>\r\n  </nav>\r\n    `,\r\n\tstyles: ['.gt-link {cursor: pointer;}']\r\n})\r\nexport class GtPaginationComponent {\r\n\tget genericTable(): GenericTableComponent<any, any> {\r\n\t\treturn this._genericTable;\r\n\t}\r\n\r\n\t@Input()\r\n\tset genericTable(value: GenericTableComponent<any, any>) {\r\n\t\tif (value) {\r\n\t\t\tvalue.gtEvent.subscribe((res: any) => {\r\n\t\t\t\tif (res.name === 'gt-info' && res.value.pageTotal > 0) {\r\n\t\t\t\t\tthis.ready = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._genericTable = value;\r\n\t}\r\n\r\n\tprivate _genericTable: GenericTableComponent<any, any>;\r\n\t@Input() gtClasses: string;\r\n\tpublic ready = false;\r\n}\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'gtPaginationPipe'\r\n})\r\nexport class PaginationPipe implements PipeTransform {\r\n\ttransform(totalPages: number, currentPage: number): Array<any> {\r\n\t\tif (totalPages === 0) {\r\n\t\t\treturn [1];\r\n\t\t}\r\n\t\tconst pagination: Array<any> = []; // create new empty array for pagination\r\n\t\tconst siblings = 2; // sibling elements ie. number of elements on each side of current page\r\n\t\tconst paginationLength =\r\n\t\t\ttotalPages < siblings * 2 + 1 ? totalPages : siblings * 2 + 1; // number of elements in pagination array\r\n\t\tconst start = currentPage <= siblings ? 1 : currentPage - siblings; // starting position for array\r\n\t\tconst modifier =\r\n\t\t\ttotalPages - (currentPage + siblings) <= 0\r\n\t\t\t\t? totalPages - (currentPage + siblings)\r\n\t\t\t\t: 0; // modifier for pagination values\r\n\t\tconst modifiedPosition = start + modifier <= 0 ? 1 : start + modifier;\r\n\r\n\t\t// push pages to pagination array\r\n\t\tfor (let i = 0; i < paginationLength; i++) {\r\n\t\t\tpagination.push(modifiedPosition + i);\r\n\t\t}\r\n\r\n\t\t// if first page is not included in pagination...\r\n\t\tif (pagination.indexOf(1) === -1) {\r\n\t\t\t// ...check if second page is in pagination...\r\n\t\t\tif (pagination.indexOf(2) === -1) {\r\n\t\t\t\t// ...if not check if total number of pages equals seven and number of siblings are two...\r\n\t\t\t\tif (totalPages === 7 && siblings === 2) {\r\n\t\t\t\t\t// ...add second page and don't convert page number to ellipsis\r\n\t\t\t\t\tpagination.unshift(2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ...if not, use this placeholder for ellipsis instead of actual page number\r\n\t\t\t\t\tpagination[0] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...add first page as first array item\r\n\t\t\tpagination.unshift(1);\r\n\t\t} else if (totalPages > paginationLength) {\r\n\t\t\t// if first page is included add extra page to keep number of items consistent\r\n\t\t\tpagination.splice(paginationLength, 0, paginationLength + 1);\r\n\t\t}\r\n\t\t// check if last page is included in pagination...\r\n\t\tif (pagination.indexOf(totalPages) === -1) {\r\n\t\t\t// ...if not, page next to last should either show ellipsis or actual page number for the page\r\n\t\t\tpagination[pagination.length - 1] =\r\n\t\t\t\tpagination[pagination.length - 1] === totalPages - 1\r\n\t\t\t\t\t? totalPages - 1\r\n\t\t\t\t\t: true;\r\n\r\n\t\t\t// ...add last page to pagination\r\n\t\t\tpagination.push(totalPages);\r\n\t\t}\r\n\r\n\t\treturn pagination;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GtExpandedRow } from './gt-expanding-row.component';\r\n\r\n@Component({\r\n\tselector: 'gt-drilldown',\r\n\ttemplate: `\r\n      <table class=\"table\">\r\n          <tr *ngFor=\"let row of data\" (click)=\"$rowClick(row, $event)\">\r\n              <!--<td *ngFor=\"let column of gtSettings\" [style.width]=\"columnWidth[column.objectKey]\">{{column.objectKey}}</td>-->\r\n              <td *ngFor=\"let column of row | gtRender:gtSettings:gtFields:null:null:gtOptions.highlightSearch:gtInfo.searchTerms;\"\r\n                  ngClass=\"{{column.objectKey +'-column' | dashCase}} {{gtFields | gtProperty:column.objectKey:'classNames'}} {{(gtFields | gtProperty:column.objectKey:'inlineEdit') ? 'gt-inline-edit':''}} {{column.edited ? 'gt-edited':''}} {{ gtFields | gtColumnClass:row:column }}\" [style.width]=\"columnWidth[column.objectKey]\" [style.max-width]=\"columnWidth[column.objectKey]\">\r\n                        <span class=\"gt-row-label\"\r\n                              *ngIf=\"gtOptions.stack\">{{(gtFields | gtProperty:column.objectKey:'stackedHeading') ? (gtFields | gtProperty:column.objectKey:'stackedHeading') : (gtFields | gtProperty:column.objectKey:'name')}}</span>\r\n                  <gt-custom-component-factory *ngIf=\"column.columnComponent\" class=\"gt-row-content\"\r\n                                               [type]=\"column.columnComponent.type\"\r\n                                               [injector]=\"column.columnComponent.injector\" [row]=\"row\"\r\n                                               [column]=\"column\" (redrawEvent)=\"$redraw($event)\"\r\n                                               (click)=\"column.click ? column.click(row,column,$event):'';\"></gt-custom-component-factory>\r\n                  <span *ngIf=\"!column.columnComponent\"\r\n                        class=\"gt-row-content\" [innerHTML]=\"column.renderValue\"\r\n                        (click)=\"column.click ? column.click(row,column,$event):''\"></span>\r\n              </td>\r\n\r\n          </tr>\r\n      </table>\r\n  `,\r\n\tstyles: []\r\n})\r\nexport class GtDrilldownComponent extends GtExpandedRow<any> implements OnInit {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n\tname: 'gtHighlight'\r\n})\r\nexport class GtHighlightPipe implements PipeTransform {\r\n\tconstructor(private sanitizer: DomSanitizer) {}\r\n\r\n\ttransform(text: string, searchTerm: string): SafeHtml {\r\n\t\tconst haystackAlwaysString = text + '';\r\n\t\tlet highlightedText = haystackAlwaysString; // fallback\r\n\r\n\t\tlet searchPattern;\r\n\t\ttry {\r\n\t\t\tsearchPattern = new RegExp(\r\n\t\t\t\t'(' +\r\n\t\t\t\tsearchTerm\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.match(/\".*?\"|[^ ]+/g) // extract words\r\n\t\t\t\t\t.map(\r\n\t\t\t\t\t\tneedle => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.join('|') + // combine words\r\n\t\t\t\t\t')',\r\n\t\t\t\t'ig'\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(highlightedText);\r\n\t\t}\r\n\r\n\t\tconst containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\r\n\t\tconst containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\r\n\r\n\t\tif (containsTagMatches) {\r\n\t\t\t// tag exists in haystack\r\n\t\t\thighlightedText =\r\n\t\t\t\tcontainsTagMatches[1] +\r\n\t\t\t\tcontainsTagMatches[2].replace(\r\n\t\t\t\t\tsearchPattern,\r\n\t\t\t\t\t'<span class=\"gt-highlight-search\">$1</span>'\r\n\t\t\t\t) +\r\n\t\t\t\tcontainsTagMatches[3];\r\n\t\t} else {\r\n\t\t\thighlightedText = haystackAlwaysString.replace(\r\n\t\t\t\tsearchPattern,\r\n\t\t\t\t'<span class=\"gt-highlight-search\">$1</span>'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(highlightedText);\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtRenderField } from '../interfaces/gt-render-field';\r\nimport { GtHighlightPipe } from './gt-highlight.pipe';\r\n\r\n@Pipe({\r\n\tname: 'gtRender'\r\n})\r\nexport class GtRenderPipe<R extends GtRow> implements PipeTransform {\r\n\tconstructor(\r\n\t\tprivate sanitizer: DomSanitizer,\r\n\t\tprivate gtHighlightPipe: GtHighlightPipe\r\n\t) {}\r\n\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: GtConfigSetting, b: GtConfigSetting) {\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder || typeof a.columnOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t/** Sort by length */\r\n\tprivate getOrderByLength = function(a: any, b: any) {\r\n\t\treturn b.length - a.length;\r\n\t};\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\ttransform(\r\n\t\trow: any,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\tfields: Array<GtConfigField<R, any>>,\r\n\t\tupdated: boolean,\r\n\t\tloading: boolean,\r\n\t\thighlight: boolean = false,\r\n\t\tsearchString?: string\r\n\t): Array<GtRenderField<R, any>> {\r\n\t\t// let arr = [{\"temp\":123,\"name\":\"happy\"},{\"temp\":456,\"name\":\"dfgdfg\"},{\"temp\":789,\"name\":\"asdasd\"}];\r\n\t\t// console.log(arr,arr.map(function(item){return item.temp}));\r\n\t\t// console.log(settings.map('objectKey'));\r\n\r\n\t\t// console.log('render');\r\n\t\tconst columns: Array<string> = [];\r\n\t\tfor (let i = 0; i < settings.length; i++) {\r\n\t\t\tif (settings[i].visible !== false && settings[i].enabled !== false) {\r\n\t\t\t\tcolumns.push(settings[i].objectKey);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\t// console.log(!row[fields[i].objectKey]);\r\n\t\t\tif (\r\n\t\t\t\tfields[i].value &&\r\n\t\t\t\ttypeof fields[i].value === 'function' &&\r\n\t\t\t\t!row.hasOwnProperty(fields[i].objectKey)\r\n\t\t\t) {\r\n\t\t\t\trow[fields[i].objectKey] = loading ? '' : fields[i].value(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(row);\r\n\t\tconst keys: Array<any> = [];\r\n\t\tfor (const key in row) {\r\n\t\t\t// console.log(key);\r\n\t\t\tif (columns.indexOf(key) !== -1) {\r\n\t\t\t\tlet fieldSetting;\r\n\t\t\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\t\t\tif (fields[i].objectKey === key) {\r\n\t\t\t\t\t\tfieldSetting = fields[i];\r\n\t\t\t\t\t\t// console.log(fieldSetting);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst columnObject: GtRenderField<R, any> = {\r\n\t\t\t\t\tobjectKey: key,\r\n\t\t\t\t\tsortValue: row[key]\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// add component if defined\r\n\t\t\t\tif (fieldSetting.columnComponent) {\r\n\t\t\t\t\tcolumnObject.columnComponent = fieldSetting.columnComponent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (loading) {\r\n\t\t\t\t\tcolumnObject.renderValue = row[key] !== null ? row[key] : '';\r\n\t\t\t\t} else if (\r\n\t\t\t\t\thighlight &&\r\n\t\t\t\t\tsearchString &&\r\n\t\t\t\t\tthis.getProperty(settings, key).search !== false\r\n\t\t\t\t) {\r\n\t\t\t\t\tcolumnObject.renderValue =\r\n\t\t\t\t\t\tfieldSetting.render && typeof fieldSetting.render === 'function'\r\n\t\t\t\t\t\t\t? this.gtHighlightPipe.transform(\r\n\t\t\t\t\t\t\t\t\tfieldSetting.render(row),\r\n\t\t\t\t\t\t\t\t\tsearchString\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t: this.gtHighlightPipe.transform(\r\n\t\t\t\t\t\t\t\t\trow[key] !== null ? row[key] : '',\r\n\t\t\t\t\t\t\t\t\tsearchString\r\n\t\t\t\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcolumnObject.renderValue =\r\n\t\t\t\t\t\tfieldSetting.render && typeof fieldSetting.render === 'function'\r\n\t\t\t\t\t\t\t? this.sanitizer.bypassSecurityTrustHtml(fieldSetting.render(row))\r\n\t\t\t\t\t\t\t: row[key] !== null\r\n\t\t\t\t\t\t\t\t? row[key]\r\n\t\t\t\t\t\t\t\t: '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fieldSetting.click && typeof fieldSetting.click === 'function') {\r\n\t\t\t\t\tcolumnObject.click = fieldSetting.click;\r\n\t\t\t\t}\r\n\t\t\t\tif (fieldSetting.expand) {\r\n\t\t\t\t\tcolumnObject.expand = fieldSetting.expand;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.push(columnObject);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tkeys.sort(function(a: any, b: any) {\r\n\t\t\treturn columns.indexOf(a.objectKey) < columns.indexOf(b.objectKey)\r\n\t\t\t\t? -1\r\n\t\t\t\t: 1;\r\n\t\t});\r\n\t\treturn keys;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtVisible'\r\n})\r\nexport class GtVisiblePipe<R extends GtRow> implements PipeTransform {\r\n\t// TODO: move to helper functions\r\n\t/** Sort by column order */\r\n\tprivate getColumnOrder = function(a: any, b: any) {\r\n\t\tif (a.columnOrder < b.columnOrder) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.columnOrder > b.columnOrder || typeof a.columnOrder === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\ttransform(\r\n\t\tarray: Array<any>,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\trefreshPipe?: boolean\r\n\t): Array<GtConfigField<R, any>> | Array<GtConfigSetting> {\r\n\t\tconst visibleColumns = settings\r\n\t\t\t.sort(this.getColumnOrder)\r\n\t\t\t.map((setting: GtConfigSetting) => {\r\n\t\t\t\tif (setting.visible !== false && setting.enabled !== false) {\r\n\t\t\t\t\treturn setting.objectKey;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn array\r\n\t\t\t.filter((column: any) => {\r\n\t\t\t\treturn visibleColumns.indexOf(column.objectKey) !== -1;\r\n\t\t\t})\r\n\t\t\t.sort(function(a, b) {\r\n\t\t\t\treturn visibleColumns.indexOf(a.objectKey) <\r\n\t\t\t\t\tvisibleColumns.indexOf(b.objectKey)\r\n\t\t\t\t\t? -1\r\n\t\t\t\t\t: 1;\r\n\t\t\t});\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'dashCase'\r\n})\r\nexport class DashCasePipe implements PipeTransform {\r\n\ttransform(string: string): string {\r\n\t\treturn string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtProperty'\r\n})\r\nexport class GtPropertyPipe<R extends GtRow> implements PipeTransform {\r\n\ttransform(\r\n\t\tconfig: GtConfigField<R, any>[] | GtConfigSetting[],\r\n\t\tobjectKey: string,\r\n\t\tproperty: string,\r\n\t\trefresh?: boolean\r\n\t): any {\r\n\t\tlet output = null;\r\n\t\ttry {\r\n\t\t\tfor (let i = 0; i < config.length; i++) {\r\n\t\t\t\tif (config[i].objectKey === objectKey) {\r\n\t\t\t\t\toutput = config[i][property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'cannot read property: \"' +\r\n\t\t\t\t\tproperty +\r\n\t\t\t\t\t'\" on missing key: \"' +\r\n\t\t\t\t\tobjectKey +\r\n\t\t\t\t\t'\" in config.',\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform, EventEmitter } from '@angular/core';\r\nimport { GtInformation, GtEvent } from '..';\r\n\r\n@Pipe({\r\n\tname: 'gtChunk'\r\n})\r\nexport class GtChunkPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tarray: any[],\r\n\t\tgtInfo: GtInformation,\r\n\t\tchunkSize: number,\r\n\t\tpage: number,\r\n\t\trefreshPageArray: boolean,\r\n\t\trefreshData: number,\r\n\t\tgtEvent: EventEmitter<GtEvent>,\r\n\t\tdata: { exportData: Array<any> }\r\n\t): any[] {\r\n\t\tif (!Array.isArray(array)) {\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\tdata.exportData = array; // store data for export\r\n\r\n\t\tconst PAGES = [];\r\n\t\tconst ENTRIES = array.length;\r\n\r\n\t\tfor (let i = 0; i < ENTRIES; i += chunkSize) {\r\n\t\t\tPAGES.push(array.slice(i, i + chunkSize));\r\n\t\t}\r\n\t\tgtInfo.visibleRecords = !PAGES[page - 1] ? [] : [...PAGES[page - 1]]; // add visible rows\r\n\t\tgtInfo.pageTotal = PAGES.length; // add number of pages\r\n\r\n\t\tsetTimeout(\r\n\t\t\t() =>\r\n\t\t\t\tgtEvent.emit({\r\n\t\t\t\t\tname: 'gt-info',\r\n\t\t\t\t\tvalue: gtInfo\r\n\t\t\t\t}),\r\n\t\t\t0\r\n\t\t);\r\n\t\treturn PAGES[page - 1];\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform, EventEmitter, Output } from '@angular/core';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\n\r\n@Pipe({\r\n\tname: 'gtFilter'\r\n})\r\nexport class GtFilterPipe implements PipeTransform {\r\n\t// @Output() filterInfo = new EventEmitter();\r\n\r\n\ttransform(\r\n\t\tallRows: any[],\r\n\t\tfilterBy: Object,\r\n\t\tgtInfo: GtInformation,\r\n\t\trefreshFilter: boolean,\r\n\t\trefreshData: number\r\n\t): any[] {\r\n\t\t// console.log(allRows,filterBy);\r\n\t\tgtInfo.recordsAll = allRows.length;\r\n\t\tif (!Array.isArray(allRows) || !filterBy) {\r\n\t\t\t// gtInfo.filtered = false;\r\n\r\n\t\t\tconst length = allRows === null ? 0 : allRows.length;\r\n\t\t\tgtInfo.recordsAfterFilter = length;\r\n\t\t\treturn allRows;\r\n\t\t}\r\n\r\n\t\tconst output = [];\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tconst rowObject = allRows[i];\r\n\t\t\tlet match = true;\r\n\r\n\t\t\tfor (const property in filterBy) {\r\n\t\t\t\tif (filterBy.hasOwnProperty(property)) {\r\n\t\t\t\t\t// console.log(property);\r\n\t\t\t\t\t// console.log(filter[property].indexOf(obj[property]));\r\n\t\t\t\t\tif (filterBy[property].indexOf(rowObject[property]) === -1) {\r\n\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (match) {\r\n\t\t\t\toutput.push(rowObject);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgtInfo.recordsAfterFilter = output.length; // .emit(output.length);\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtOrderBy'\r\n})\r\nexport class GtOrderByPipe<R extends GtRow> implements PipeTransform {\r\n\tstatic _orderByComparator(a: any, b: any): number {\r\n\t\t// sort boolean values as strings\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\ta = a.toString();\r\n\t\t}\r\n\t\tif (typeof b === 'boolean') {\r\n\t\t\tb = b.toString();\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tisNaN(parseFloat(a)) ||\r\n\t\t\t!isFinite(a) ||\r\n\t\t\t(isNaN(parseFloat(b)) || !isFinite(b))\r\n\t\t) {\r\n\t\t\tif (\r\n\t\t\t\tb === null ||\r\n\t\t\t\t(typeof b === 'undefined' && (a !== null && typeof a !== 'undefined'))\r\n\t\t\t) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\ta === null ||\r\n\t\t\t\t(typeof a === 'undefined' && (b !== null && typeof b !== 'undefined'))\r\n\t\t\t) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\t// isn't a number so lowercase the string to properly compare\r\n\t\t\ttry {\r\n\t\t\t\tif (a.toLowerCase() < b.toLowerCase()) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (a.toLowerCase() > b.toLowerCase()) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// parse strings as numbers to compare properly\r\n\t\t\tif (parseFloat(a) < parseFloat(b)) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (parseFloat(a) > parseFloat(b)) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0; // equal each other\r\n\t}\r\n\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/** Return sort function */\r\n\tprivate getSortFunction(field: any) {\r\n\t\tif (!field) {\r\n\t\t\t// console.log('error trying to sort undefined field');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (typeof field.sort === 'function') {\r\n\t\t\treturn field.sort;\r\n\t\t} else if (typeof field.value === 'function') {\r\n\t\t\treturn field.value;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\ttransform(\r\n\t\tinput: any,\r\n\t\tsortByProperties: Array<string>,\r\n\t\tfields: GtConfigField<R, any>[],\r\n\t\trefreshSorting: boolean,\r\n\t\trefreshData: number\r\n\t): any {\r\n\t\tif (!Array.isArray(input) || input === null) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\tif (\r\n\t\t\t!Array.isArray(sortByProperties) ||\r\n\t\t\t(Array.isArray(sortByProperties) && sortByProperties.length === 1)\r\n\t\t) {\r\n\t\t\tconst propertyToCheck: string = sortByProperties[0];\r\n\t\t\tconst desc = propertyToCheck.substr(0, 1) === '-';\r\n\r\n\t\t\t// basic array\r\n\t\t\tif (\r\n\t\t\t\t!propertyToCheck ||\r\n\t\t\t\tpropertyToCheck === '-' ||\r\n\t\t\t\tpropertyToCheck === '+'\r\n\t\t\t) {\r\n\t\t\t\treturn !desc ? input.sort() : input.sort().reverse();\r\n\t\t\t} else {\r\n\t\t\t\tconst property: string =\r\n\t\t\t\t\tpropertyToCheck.substr(0, 1) === '+' ||\r\n\t\t\t\t\tpropertyToCheck.substr(0, 1) === '-'\r\n\t\t\t\t\t\t? propertyToCheck.substr(1)\r\n\t\t\t\t\t\t: propertyToCheck;\r\n\r\n\t\t\t\t// check if custom sort function is defined\r\n\t\t\t\tconst sortFunction: any = this.getSortFunction(\r\n\t\t\t\t\tthis.getProperty(fields, property)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// console.log(property);\r\n\t\t\t\treturn input.sort(function(a: any, b: any) {\r\n\t\t\t\t\t// use custom sort function if one is defined\r\n\t\t\t\t\tconst propertyA =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +a.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: a[property]\r\n\t\t\t\t\t\t\t: sortFunction(a);\r\n\t\t\t\t\tconst propertyB =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +b.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: b[property]\r\n\t\t\t\t\t\t\t: sortFunction(b);\r\n\r\n\t\t\t\t\t// if both values are undefined...\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof propertyA === 'undefined' &&\r\n\t\t\t\t\t\ttypeof propertyB === 'undefined'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// ...skip comparison\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn !desc\r\n\t\t\t\t\t\t? GtOrderByPipe._orderByComparator(propertyA, propertyB)\r\n\t\t\t\t\t\t: -GtOrderByPipe._orderByComparator(propertyA, propertyB);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// loop over property of the array in order and sort\r\n\t\t\treturn input.sort((a: any, b: any) => {\r\n\t\t\t\t// console.log('multiple');\r\n\t\t\t\tfor (let i = 0; i < sortByProperties.length; i++) {\r\n\t\t\t\t\tconst desc = sortByProperties[i].substr(0, 1) === '-';\r\n\t\t\t\t\tconst property =\r\n\t\t\t\t\t\tsortByProperties[i].substr(0, 1) === '+' ||\r\n\t\t\t\t\t\tsortByProperties[i].substr(0, 1) === '-'\r\n\t\t\t\t\t\t\t? sortByProperties[i].substr(1)\r\n\t\t\t\t\t\t\t: sortByProperties[i];\r\n\r\n\t\t\t\t\t// console.log(property);\r\n\t\t\t\t\t// check if custom sort function is defined\r\n\t\t\t\t\tconst sortFunction: any = this.getSortFunction(\r\n\t\t\t\t\t\tthis.getProperty(fields, property)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// use custom sort function if one is defined\r\n\t\t\t\t\tconst propertyA =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +a.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: a[property]\r\n\t\t\t\t\t\t\t: sortFunction(a);\r\n\t\t\t\t\tconst propertyB =\r\n\t\t\t\t\t\tsortFunction === false\r\n\t\t\t\t\t\t\t? property === '$$gtRowId'\r\n\t\t\t\t\t\t\t\t? +b.$$gtRowId.split('_')[0]\r\n\t\t\t\t\t\t\t\t: b[property]\r\n\t\t\t\t\t\t\t: sortFunction(b);\r\n\r\n\t\t\t\t\tconst comparison = !desc\r\n\t\t\t\t\t\t? GtOrderByPipe._orderByComparator(propertyA, propertyB)\r\n\t\t\t\t\t\t: -GtOrderByPipe._orderByComparator(propertyA, propertyB);\r\n\r\n\t\t\t\t\t// don't return 0 yet in case of needing to sort by next property\r\n\t\t\t\t\tif (comparison !== 0) {\r\n\t\t\t\t\t\treturn comparison;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0; // equal each other\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\nimport { GtConfigSetting } from '../interfaces/gt-config-setting';\r\nimport { GtInformation } from '../interfaces/gt-information';\r\n\r\n@Pipe({\r\n\tname: 'gtSearch'\r\n})\r\nexport class GtSearchPipe<R extends GtRow> implements PipeTransform {\r\n\t/** Return property */\r\n\tprivate getProperty = function(array: Array<any>, key: string) {\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tif (array[i].objectKey === key) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\ttransform(\r\n\t\tallRows: any,\r\n\t\tsearchTerms: string,\r\n\t\tgtInfo: GtInformation,\r\n\t\tsettings: Array<GtConfigSetting>,\r\n\t\tfields: Array<GtConfigField<R, any>>,\r\n\t\trefreshData: number\r\n\t): any {\r\n\t\t//  if no search terms are defined...\r\n\t\tif (!searchTerms || searchTerms.replace(/\"/g, '').length === 0) {\r\n\t\t\t// ...return all rows\r\n\t\t\tconst length = allRows === null ? 0 : allRows.length;\r\n\t\t\tgtInfo.recordsAfterSearch = length;\r\n\t\t\treturn allRows;\r\n\t\t}\r\n\r\n\t\tconst searchFunction: any = {};\r\n\t\tconst fieldsTemp: Array<any> = [];\r\n\r\n\t\tfor (let k = 0; k < fields.length; k++) {\r\n\t\t\tconst field = fields[k];\r\n\r\n\t\t\t// check if field should be included in global search\r\n\t\t\tconst include =\r\n\t\t\t\tthis.getProperty(settings, field.objectKey).search === false\r\n\t\t\t\t\t? false\r\n\t\t\t\t\t: true;\r\n\r\n\t\t\t// if include...\r\n\t\t\tif (include) {\r\n\t\t\t\t// ...and if search function is defined...\r\n\t\t\t\tif (typeof field.search === 'function') {\r\n\t\t\t\t\t// ...add it as search function for field\r\n\t\t\t\t\tsearchFunction[field.objectKey] = field.search;\r\n\t\t\t\t}\r\n\t\t\t\t// ...if no search function is defined but value function is defined...\r\n\t\t\t\telse if (typeof field.value === 'function') {\r\n\t\t\t\t\t// ...add it as search function for field\r\n\t\t\t\t\tsearchFunction[field.objectKey] = field.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ...push it to our fields array\r\n\t\t\t\tfieldsTemp.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst filteredRows: Array<any> = [];\r\n\t\tsearchTerms = typeof searchTerms === 'undefined' ? '' : searchTerms;\r\n\t\tconst searchTermsArray = searchTerms.toLowerCase().match(/(\".*\"|[^\\s]+)/g);\r\n\r\n\t\tfor (let i = 0; i < allRows.length; i++) {\r\n\t\t\tconst row = allRows[i];\r\n\t\t\tlet string = '';\r\n\r\n\t\t\tfor (let j = 0; j < fieldsTemp.length; j++) {\r\n\t\t\t\tconst separator = j === 0 ? '' : ' & ';\r\n\t\t\t\tstring += searchFunction[fieldsTemp[j].objectKey]\r\n\t\t\t\t\t? separator + searchFunction[fieldsTemp[j].objectKey](row, j)\r\n\t\t\t\t\t: separator + row[fieldsTemp[j].objectKey];\r\n\t\t\t}\r\n\t\t\tstring = string.toLowerCase();\r\n\t\t\tlet match: Boolean = true;\r\n\r\n\t\t\tfor (let k = 0; k < searchTermsArray.length; k++) {\r\n\t\t\t\tconst term = searchTermsArray[k].replace(/\"/g, '');\r\n\t\t\t\tmatch = string.indexOf(term) !== -1;\r\n\r\n\t\t\t\tif (!match) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (match) {\r\n\t\t\t\tfilteredRows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgtInfo.recordsAfterSearch = filteredRows.length;\r\n\t\t// gtInfo.refresh(filteredRows.length,gt);\r\n\t\treturn filteredRows;\r\n\t}\r\n}\r\n","import {\r\n\tComponentFactory,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tDirective,\r\n\tEventEmitter,\r\n\tInjector,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n\tType,\r\n\tViewContainerRef\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[gtComponentAnchor]'\r\n})\r\nexport class ComponentAnchorDirective<C> implements OnInit {\r\n\t@Input() ctor: Type<C>;\r\n\t@Input() injector: Injector;\r\n\t@Output() instance: EventEmitter<C> = new EventEmitter<C>();\r\n\r\n\tconstructor(\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\tprivate viewContainer: ViewContainerRef\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tconst factory: ComponentFactory<\r\n\t\t\tC\r\n\t\t> = this.componentFactoryResolver.resolveComponentFactory(this.ctor);\r\n\t\tconst component: ComponentRef<C> = this.viewContainer.createComponent(\r\n\t\t\tfactory,\r\n\t\t\t0,\r\n\t\t\tthis.injector\r\n\t\t);\r\n\t\tthis.instance.emit(component.instance);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInjector,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n\tType\r\n} from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\nexport abstract class GtCustomComponent<R> implements OnInit {\r\n\trow: R;\r\n\tcolumn: any;\r\n\tredrawEvent = new EventEmitter<{ row: R; column: any }>();\r\n\tsearchTerms: string;\r\n\t$searchTerms: ReplaySubject<string> = new ReplaySubject(1);\r\n\r\n\tprotected $redraw($event?: any) {\r\n\t\tthis.redrawEvent.emit({ row: this.row, column: this.column });\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.$searchTerms.subscribe(terms => (this.searchTerms = terms));\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'gt-custom-component-factory',\r\n\ttemplate: `<div gtComponentAnchor [ctor]=\"type\"\r\n                    [injector]=\"injector\"\r\n                    (instance)=\"instance($event)\"></div>`\r\n})\r\nexport class GtCustomComponentFactory<R, C extends GtCustomComponent<R>> {\r\n\t@Input()\r\n\tset searchTerms(value: string) {\r\n\t\tthis.$searchTerms.next(value);\r\n\t}\r\n\t@Input() type: Type<C>;\r\n\t@Input() injector: Injector;\r\n\t@Input() row: R;\r\n\t@Input() column: any;\r\n\t$searchTerms: ReplaySubject<string> = new ReplaySubject(1);\r\n\t@Output() redrawEvent = new EventEmitter<{ row: R; column: any }>();\r\n\r\n\tinstance(instance: C) {\r\n\t\tinstance.row = this.row;\r\n\t\tinstance.column = this.column;\r\n\t\tinstance.$searchTerms = this.$searchTerms;\r\n\t\tinstance.redrawEvent.subscribe(this.redrawEvent);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInput,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tOutput,\r\n\tRenderer2\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport * as Tether from 'tether';\r\n\r\n@Component({\r\n\tselector: 'gt-dropdown',\r\n\ttemplate: `\r\n    <div class=\"dropdown gt-dropdown\" [ngClass]=\"{'show':active}\" [attr.id]=\"id\">\r\n      <div class=\"dropdown-toggle\" (click)=\"toggleDropdown()\" [attr.aria-expanded]=\"active\">{{selected}}</div>\r\n      <div class=\"gt-dropdown-menu dropdown-menu\" *ngIf=\"active\" [ngClass]=\"{'show':active}\" [attr.id]=\"id+'_menu'\">\r\n        <button *ngFor=\"let option of options;\" class=\"dropdown-item\" (click)=\"select(option)\" [ngClass]=\"{'active':option === selected}\">{{option}}</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n\tstyles: [\r\n\t\t`\r\n    .gt-dropdown .dropdown-toggle {\r\n      cursor: pointer;\r\n    }\r\n    .gt-dropdown .dropdown-toggle::after {\r\n      transition: opacity 0.4s ease-in-out;\r\n      opacity: 0;\r\n    }\r\n    .gt-dropdown .dropdown-toggle:hover::after {\r\n      opacity: 1;\r\n    }\r\n  `\r\n\t]\r\n})\r\nexport class GtDropdownComponent implements OnInit, OnDestroy {\r\n\tget selected() {\r\n\t\treturn this._selected;\r\n\t}\r\n\r\n\t_selected: any;\r\n\t@Input()\r\n\tset selected(selection) {\r\n\t\tthis._selected = selection;\r\n\t}\r\n\t@Input() options: Array<any>;\r\n\t@Input() id: string;\r\n\t@Output() selectedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n\tactive = false; // is dropdown active or not\r\n\tstate: Subject<boolean> = new Subject(); // current state of dropdown\r\n\ttether: any;\r\n\tclickListener: Function;\r\n\tkeyupListener: Function;\r\n\r\n\tconstructor(private renderer: Renderer2) {}\r\n\r\n\tselect(option: any) {\r\n\t\tthis.active = false;\r\n\t\tthis.state.next(this.active);\r\n\t\tif (this._selected !== option) {\r\n\t\t\tthis.selectedChange.emit(option);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleDropdown() {\r\n\t\tthis.active = !this.active;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.state.next(this.active);\r\n\t\t}, 0);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.state.subscribe(state => {\r\n\t\t\tif (state) {\r\n\t\t\t\tthis.tether = new Tether({\r\n\t\t\t\t\telement: '#' + this.id + '_menu',\r\n\t\t\t\t\ttarget: '#' + this.id,\r\n\t\t\t\t\tattachment: 'top left',\r\n\t\t\t\t\ttargetAttachment: 'bottom left',\r\n\t\t\t\t\tconstraints: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tto: 'window',\r\n\t\t\t\t\t\t\tattachment: 'together'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.tether.position();\r\n\r\n\t\t\t\t// set up click listener and listen for click outside dropdown\r\n\t\t\t\tthis.clickListener = this.renderer.listen(\r\n\t\t\t\t\t'document',\r\n\t\t\t\t\t'click',\r\n\t\t\t\t\t(event: MouseEvent) => {\r\n\t\t\t\t\t\tthis.active = false;\r\n\t\t\t\t\t\tthis.state.next(this.active);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// set up keyboard listener and listen for escape key up\r\n\t\t\t\tthis.keyupListener = this.renderer.listen(\r\n\t\t\t\t\t'document',\r\n\t\t\t\t\t'keyup',\r\n\t\t\t\t\t(event: KeyboardEvent) => {\r\n\t\t\t\t\t\tswitch (event.key) {\r\n\t\t\t\t\t\t\tcase 'Escape':\r\n\t\t\t\t\t\t\t\tthis.active = false;\r\n\t\t\t\t\t\t\t\tthis.state.next(this.active);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tether.destroy();\r\n\t\t\t\tthis.removeListeners();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.removeListeners();\r\n\t}\r\n\r\n\tremoveListeners() {\r\n\t\tif (this.clickListener) {\r\n\t\t\tthis.clickListener();\r\n\t\t}\r\n\t\tif (this.keyupListener) {\r\n\t\t\tthis.keyupListener();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'gtTotals'\r\n})\r\nexport class GtTotalsPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tvalue: string | number | Function,\r\n\t\tdata: Array<any>,\r\n\t\tobjectKey: string,\r\n\t\trefresh: boolean\r\n\t): any {\r\n\t\tlet output;\r\n\r\n\t\tif (data.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'function') {\r\n\t\t\toutput = value(data, objectKey);\r\n\t\t} else if (value) {\r\n\t\t\toutput = value;\r\n\t\t} else {\r\n\t\t\toutput = '';\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigTotal } from '../interfaces/gt-config-total';\r\n\r\n@Pipe({\r\n\tname: 'gtTotalsPosition'\r\n})\r\nexport class GtTotalsPositionPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tarray: Array<GtConfigTotal>,\r\n\t\tposition: 'header' | 'footer' = 'header'\r\n\t): Array<any> {\r\n\t\treturn array.filter(total => {\r\n\t\t\t// if no position is defined assume position to be header\r\n\t\t\tconst totalPosition = total.position ? total.position : 'header';\r\n\t\t\treturn totalPosition === position;\r\n\t\t});\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\n\r\n@Pipe({\r\n\tname: 'gtRowClass'\r\n})\r\nexport class GtRowClassPipe implements PipeTransform {\r\n\ttransform(array: Array<any>, gtFields: Array<GtConfigField<any, any>>): any {\r\n\t\tif (array) {\r\n\t\t\t// find columns with rowClass property defined\r\n\t\t\tconst COLUMNS_WITH_CLASS = gtFields\r\n\t\t\t\t.map(column => column)\r\n\t\t\t\t.filter(column => column.rowClass);\r\n\t\t\tCOLUMNS_WITH_CLASS.map(column => {\r\n\t\t\t\t// for each column with rowClass property defined...\r\n\t\t\t\tarray.map(row => {\r\n\t\t\t\t\t// loop through rows and set row class\r\n\t\t\t\t\tif (typeof column.rowClass === 'function') {\r\n\t\t\t\t\t\t// if row class is a function, try using the function...\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (row.$$gtRowClass) {\r\n\t\t\t\t\t\t\t\trow.$$gtRowClass = row.$$gtRowClass.concat(\r\n\t\t\t\t\t\t\t\t\t' ' + column.rowClass(row, column)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trow.$$gtRowClass = column.rowClass(row, column);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'Error when trying to get row class name using formula.',\r\n\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if not a function, return plain string value\r\n\t\t\t\t\t\tif (row.$$gtRowClass) {\r\n\t\t\t\t\t\t\trow.$$gtRowClass = row.$$gtRowClass.concat(' ' + column.rowClass);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow.$$gtRowClass = column.rowClass;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GtConfigField } from '../interfaces/gt-config-field';\r\nimport { GtRow } from '../interfaces/gt-row';\r\n\r\n@Pipe({\r\n\tname: 'gtColumnClass'\r\n})\r\nexport class GtColumnClassPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tgtFields: Array<GtConfigField<any, any>>,\r\n\t\tcolumn: GtConfigField<GtRow, any>,\r\n\t\trow?: GtRow\r\n\t): any {\r\n\t\t// find columns with columnClass property defined\r\n\t\tconst COLUMN_WITH_CLASS = gtFields\r\n\t\t\t.map(field => field)\r\n\t\t\t.filter(\r\n\t\t\t\tfield => field.columnClass && field.objectKey === column.objectKey\r\n\t\t\t)[0];\r\n\t\tif (!COLUMN_WITH_CLASS) {\r\n\t\t\treturn;\r\n\t\t} else if (typeof COLUMN_WITH_CLASS.columnClass === 'function') {\r\n\t\t\t// if column class is a function, try using the function...\r\n\t\t\ttry {\r\n\t\t\t\treturn COLUMN_WITH_CLASS.columnClass(row, column);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'Error when trying to get column class name using formula.',\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// if not a function, return plain string value\r\n\t\t\treturn COLUMN_WITH_CLASS.columnClass;\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tChangeDetectorRef,\r\n\tDirective,\r\n\tElementRef,\r\n\tHostListener,\r\n\tInput,\r\n\tOnInit\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[gtColumnWidth]'\r\n})\r\nexport class GtColumnWidthDirective implements OnInit {\r\n\t@Input() objectKey: string;\r\n\t@Input() widths: Object;\r\n\t@HostListener('window:resize', ['$event'])\r\n\tpublic onResize($event: any) {\r\n\t\tthis.checkSize();\r\n\t}\r\n\tconstructor(\r\n\t\tprivate hostElement: ElementRef,\r\n\t\tprivate cdRef: ChangeDetectorRef\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tthis.checkSize();\r\n\t}\r\n\r\n\tcheckSize() {\r\n\t\tthis.widths[this.objectKey] = window\r\n\t\t\t.getComputedStyle(this.hostElement.nativeElement, null)\r\n\t\t\t.getPropertyValue('width');\r\n\t\tthis.cdRef.detectChanges();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tEventEmitter,\r\n\tHostBinding,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput\r\n} from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'gt-checkbox',\r\n\ttemplate: `\r\n    <label class=\"custom-control custom-checkbox p-0\" (click)=\"$event.stopPropagation()\">\r\n      <input #checkbox type=\"checkbox\" class=\"custom-control-input\" [(checked)]=\"checked\" (change)=\"toggle($event);\">\r\n      <span class=\"custom-control-label\"></span>\r\n    </label>\r\n  `,\r\n\tstyles: []\r\n})\r\nexport class GtCheckboxComponent implements OnInit {\r\n\tget initialValue(): boolean {\r\n\t\treturn this._initialValue;\r\n\t}\r\n\r\n\t@HostBinding('class') class = 'd-flex justify-content-end';\r\n\r\n\t@Input()\r\n\tset initialValue(value: boolean) {\r\n\t\tthis._initialValue = value;\r\n\t}\r\n\tget checked(): boolean {\r\n\t\treturn this._checked;\r\n\t}\r\n\r\n\t@Input()\r\n\tset checked(value: boolean) {\r\n\t\tthis._checked = value;\r\n\t}\r\n\r\n\tprivate _checked: boolean;\r\n\tprivate _initialValue: boolean;\r\n\t@Output() changed: EventEmitter<boolean> = new EventEmitter();\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n\r\n\ttoggle(checked: boolean) {\r\n\t\tthis.changed.emit(this.checked);\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Pipe({\r\n\tname: 'gtIsObservable'\r\n})\r\nexport class GtIsObservablePipe implements PipeTransform {\r\n\ttransform(input: any): boolean {\r\n\t\treturn input instanceof Observable;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Pipe({\r\n\tname: 'gtIsEditable'\r\n})\r\nexport class GtIsEditablePipe implements PipeTransform {\r\n\ttransform(property: any, row: any, refreshPipe: boolean): boolean {\r\n\t\tif (typeof property === 'function') {\r\n\t\t\treturn property(row);\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GenericTableComponent } from './components/generic-table.component';\r\nimport { GtRenderPipe } from './pipes/gt-render.pipe';\r\nimport { GtVisiblePipe } from './pipes/gt-visible.pipe';\r\nimport { DashCasePipe } from './pipes/dash-case.pipe';\r\nimport { GtPropertyPipe } from './pipes/gt-property.pipe';\r\nimport { GtChunkPipe } from './pipes/gt-chunk.pipe';\r\nimport { GtFilterPipe } from './pipes/gt-filter.pipe';\r\nimport { GtOrderByPipe } from './pipes/gt-order-by.pipe';\r\nimport { GtExpandingRowComponent } from './components/gt-expanding-row.component';\r\nimport { GtSearchPipe } from './pipes/gt-search.pipe';\r\nimport { ComponentAnchorDirective } from './directives/component-anchor.directive';\r\nimport {\r\n\tGtPaginationComponent,\r\n\tPaginationPipe\r\n} from './components/gt-pagination.component';\r\nimport {\r\n\tGtTableInfoComponent,\r\n\tTableInfoPipe\r\n} from './components/gt-table-info.component';\r\nimport { GtCustomComponentFactory } from './components/gt-custom-component-factory';\r\nimport { GtMetaPipe } from './pipes/gt-meta.pipe';\r\nimport { GtDropdownComponent } from './components/gt-dropdown.component';\r\nimport { GtTotalsPipe } from './pipes/gt-totals.pipe';\r\nimport { GtTotalsPositionPipe } from './pipes/gt-totals-position.pipe';\r\nimport { GtRowClassPipe } from './pipes/gt-row-class.pipe';\r\nimport { GtColumnClassPipe } from './pipes/gt-column-class.pipe';\r\nimport { GtColumnWidthDirective } from './directives/gt-column-width.directive';\r\nimport { GtDrilldownComponent } from './components/gt-drilldown.component';\r\nimport { GtCheckboxComponent } from './components/gt-checkbox/gt-checkbox.component';\r\nimport { GtHighlightPipe } from './pipes/gt-highlight.pipe';\r\nimport { GtIsObservablePipe } from './pipes/gt-is-observable.pipe';\r\nimport { GtIsEditablePipe } from './pipes/gt-is-editable.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tComponentAnchorDirective,\r\n\t\tGenericTableComponent,\r\n\t\tGtPaginationComponent,\r\n\t\tGtVisiblePipe,\r\n\t\tGtRenderPipe,\r\n\t\tDashCasePipe,\r\n\t\tGtPropertyPipe,\r\n\t\tGtChunkPipe,\r\n\t\tGtFilterPipe,\r\n\t\tGtOrderByPipe,\r\n\t\tGtExpandingRowComponent,\r\n\t\tGtCustomComponentFactory,\r\n\t\tGtSearchPipe,\r\n\t\tPaginationPipe,\r\n\t\tGtTableInfoComponent,\r\n\t\tTableInfoPipe,\r\n\t\tGtMetaPipe,\r\n\t\tGtTotalsPipe,\r\n\t\tGtTotalsPositionPipe,\r\n\t\tGtRowClassPipe,\r\n\t\tGtColumnClassPipe,\r\n\t\tGtHighlightPipe,\r\n\t\tGtIsObservablePipe,\r\n\t\tGtIsEditablePipe,\r\n\t\tGtDropdownComponent,\r\n\t\tGtColumnWidthDirective,\r\n\t\tGtDrilldownComponent,\r\n\t\tGtCheckboxComponent\r\n\t],\r\n\timports: [CommonModule, FormsModule],\r\n\texports: [\r\n\t\tGenericTableComponent,\r\n\t\tGtPaginationComponent,\r\n\t\tGtTableInfoComponent,\r\n\t\tGtPropertyPipe,\r\n\t\tGtHighlightPipe,\r\n\t\tGtExpandingRowComponent,\r\n\t\tGtDropdownComponent,\r\n\t\tGtDrilldownComponent,\r\n\t\tGtCheckboxComponent\r\n\t],\r\n\tentryComponents: [GtDrilldownComponent, GtCheckboxComponent],\r\n\tproviders: [GtMetaPipe, GtHighlightPipe],\r\n\tbootstrap: []\r\n})\r\nexport class GenericTableModule {}\r\n"],"names":[],"mappings":"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"}
