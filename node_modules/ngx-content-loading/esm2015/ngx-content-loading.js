import { ChangeDetectionStrategy, Component, Input, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/** @enum {string} */
const Defaults = {
    PrimaryColor: '#f3f3f3',
    SecondaryColor: '#ecebeb',
    PreserveAspectRatio: 'xMidYMid meet',
    Classes: '',
    Speed: '1000ms',
    Width: '400',
    Height: '130',
    Rx: '0',
    Ry: '1',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxContentLoadingComponent {
    constructor() {
        this.width = Defaults.Width;
        this.height = Defaults.Height;
        this.primaryColor = Defaults.PrimaryColor;
        this.secondaryColor = Defaults.SecondaryColor;
        this.speed = Defaults.Speed;
        this.preserveAspectRatio = Defaults.PreserveAspectRatio;
    }
    /**
     * @return {?}
     */
    get viewBox() {
        return `0 0 ${this.width} ${this.height}`;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
}
NgxContentLoadingComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-content-loading',
                template: `<ng-content select="[before-svg]"></ng-content>
<svg version="1.1"
    [attr.preserveAspectRatio]="preserveAspectRatio"
    [attr.viewBox]="viewBox">
        <ng-content></ng-content>
</svg>
<ng-content select="[after-svg]"></ng-content>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
NgxContentLoadingComponent.ctorParameters = () => [];
NgxContentLoadingComponent.propDecorators = {
    "width": [{ type: Input },],
    "height": [{ type: Input },],
    "primaryColor": [{ type: Input },],
    "secondaryColor": [{ type: Input },],
    "speed": [{ type: Input },],
    "preserveAspectRatio": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        this.content = content;
        this.clipPathId = getId();
        this.linearGradientId = getId();
    }
    /**
     * @return {?}
     */
    get clipPathUrl() {
        return `url(#${this.clipPathId})`;
    }
    /**
     * @return {?}
     */
    get linearGradientUrl() {
        return `url(#${this.linearGradientId})`;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SvgElementComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-svg-element',
                template: ``,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
SvgElementComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
/**
 * @return {?}
 */
function getId() {
    const /** @type {?} */ id = performance.now() * Math.random();
    return id.toString();
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class RectComponent extends SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        super(content);
        this.content = content;
        this.rx = Defaults.Rx;
        this.ry = Defaults.Ry;
    }
}
RectComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-rect]',
                template: `<svg:rect
        [attr.x]="x"
        [attr.y]="y"
        [attr.rx]="rx"
        [attr.ry]="ry"
        [attr.width]="width"
        [attr.fill]="linearGradientUrl"
        [attr.clipPath]="clipPathUrl"
        [attr.height]="height">
</svg:rect>
<svg:defs>
    <svg:clipPath [attr.id]="clipPathId"></svg:clipPath>
    <svg:linearGradient [attr.id]="linearGradientId">
        <svg:stop ngx-svg-stop
            [offset]="'0%'"
            [values]="'-2; 1'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'50%'"
            [values]="'-1.5; 1.5'"
            [speed]="content.speed"
            [color]="content.secondaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'100%'"
            [values]="'-1; 2'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
    </svg:linearGradient>
</svg:defs>
`,
                styles: [``]
            },] },
];
/** @nocollapse */
RectComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
RectComponent.propDecorators = {
    "y": [{ type: Input },],
    "x": [{ type: Input },],
    "rx": [{ type: Input },],
    "ry": [{ type: Input },],
    "width": [{ type: Input },],
    "height": [{ type: Input },],
    "primaryColor": [{ type: Input },],
    "secondaryColor": [{ type: Input },],
    "speed": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SvgStopComponent {
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SvgStopComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-svg-stop]',
                template: `<svg:animate
    attributeName="offset"
    [attr.values]="values"
    [attr.dur]="speed"
    repeatCount="indefinite"
/>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
SvgStopComponent.ctorParameters = () => [];
SvgStopComponent.propDecorators = {
    "speed": [{ type: Input },],
    "values": [{ type: Input },],
    "offset": [{ type: HostBinding, args: ['attr.offset',] }, { type: Input },],
    "color": [{ type: HostBinding, args: ['attr.stop-color',] }, { type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class FacebookPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
FacebookPresetComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-facebook-preset]',
                template: `<svg:g ngx-circle cx="25" cy="25" r="25"></svg:g>
<svg:g ngx-rect width="100" height="5" y="15" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="60" height="5" y="30" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="170" height="5" y="65" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="220" height="5" y="80" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="130" height="5" y="95" x="0" rx="5" ry="5"></svg:g>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
FacebookPresetComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class InstagramPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
InstagramPresetComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-instagram-preset]',
                template: `<svg:g ngx-circle cx="25" cy="25" r="25"></svg:g>
<svg:g ngx-rect width="120" height="10" y="10" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="40" height="5" y="30" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="250" height="250" y="60" x="0" rx="5" ry="5"></svg:g>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
InstagramPresetComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class CircleComponent extends SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        super(content);
        this.content = content;
    }
}
CircleComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-circle]',
                template: `<svg:circle
        [attr.cx]="cx"
        [attr.cy]="cy"
        [attr.r]="r"
        [attr.fill]="linearGradientUrl"
        [attr.clipPath]="clipPathUrl">
</svg:circle>
<svg:defs>
    <svg:clipPath [attr.id]="clipPathId"></svg:clipPath>
    <svg:linearGradient [attr.id]="linearGradientId">
        <svg:stop ngx-svg-stop
            [offset]="'0%'"
            [values]="'-2; 1'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'50%'"
            [values]="'-1.5; 1.5'"
            [speed]="content.speed"
            [color]="content.secondaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'100%'"
            [values]="'-1; 2'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
    </svg:linearGradient>
</svg:defs>
`,
                styles: [``]
            },] },
];
/** @nocollapse */
CircleComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
CircleComponent.propDecorators = {
    "r": [{ type: Input },],
    "cx": [{ type: Input },],
    "cy": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class CodePresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CodePresetComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-code-preset]',
                template: `<svg:g ngx-rect width="60" height="10" y="15" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="15" x="70" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="20" height="10" y="15" x="170" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="100" height="10" y="35" x="9" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="120" height="10" y="35" x="120" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="55" x="5" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="55" x="105" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="70" height="10" y="55" x="205" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="30" height="10" y="75" x="0" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
CodePresetComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class BulletListPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
BulletListPresetComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-bullet-list-preset]',
                template: `<svg:g ngx-circle cx="7" cy="7" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="37" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="67" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="97" r="7"></svg:g>
<svg:g ngx-rect width="200" height="12" y="2" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="32" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="62" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="92" x="20" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
BulletListPresetComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ListPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ListPresetComponent.decorators = [
    { type: Component, args: [{
                selector: '[ngx-list-preset]',
                template: `<svg:g ngx-rect width="200" height="10" y="0" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="180" height="10" y="20" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="160" height="10" y="40" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="10" y="60" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="180" height="10" y="80" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="60" height="10" y="100" x="20" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
ListPresetComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxContentLoadingModule {
}
NgxContentLoadingModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    NgxContentLoadingComponent,
                    RectComponent,
                    CircleComponent,
                    SvgElementComponent,
                    SvgStopComponent,
                    FacebookPresetComponent,
                    InstagramPresetComponent,
                    CodePresetComponent,
                    BulletListPresetComponent,
                    ListPresetComponent
                ],
                exports: [
                    NgxContentLoadingComponent,
                    RectComponent,
                    CircleComponent,
                    FacebookPresetComponent,
                    InstagramPresetComponent,
                    CodePresetComponent,
                    BulletListPresetComponent,
                    ListPresetComponent
                ]
            },] },
];
/** @nocollapse */
NgxContentLoadingModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { NgxContentLoadingModule, BulletListPresetComponent as ɵi, CircleComponent as ɵd, CodePresetComponent as ɵh, FacebookPresetComponent as ɵf, InstagramPresetComponent as ɵg, ListPresetComponent as ɵj, NgxContentLoadingComponent as ɵa, RectComponent as ɵb, SvgElementComponent as ɵc, SvgStopComponent as ɵe };
//# sourceMappingURL=ngx-content-loading.js.map
